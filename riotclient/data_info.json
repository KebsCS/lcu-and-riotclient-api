{
    "DELETE /agent/v1/requests/third-party-dependency/{requestId}": {
        "arguments": [
            {
                "description": "",
                "name": "requestId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Cancel a third party dependency job",
        "help": "",
        "internal": false,
        "name": "DeleteAgentV1RequestsThirdPartyDependencyByRequestId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "DELETE /agent/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stop the agent",
        "help": "",
        "internal": false,
        "name": "DeleteAgentV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "DELETE /app-command/v1/auth/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the stored authentication status",
        "help": "",
        "internal": false,
        "name": "DeleteAppCommandV1AuthStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "app-command"
        ],
        "threadSafe": false
    },
    "DELETE /app-command/v1/focus-request": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the current app focus request, if one exists",
        "help": "Delete the current app focus request, if one exists",
        "internal": false,
        "name": "DeleteAppCommandV1FocusRequest",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "app-command"
        ],
        "threadSafe": false
    },
    "DELETE /apple-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete authorization status for Apple",
        "help": "",
        "internal": false,
        "name": "DeleteAppleAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "apple-account"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v2/me": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatPresenceProduct"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete multi-game presence of a specific product",
        "help": "Endpoint deleted August 2021; Please use '/chat/v3/me'.",
        "internal": false,
        "name": "DeleteChatV2Me",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v3/blocked": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatBlockPid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Unblock a player",
        "help": "Endpoint deleted August 2021; Please use '/chat/v4/blocked'.",
        "internal": false,
        "name": "DeleteChatV3Blocked",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v3/errors": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatErrorId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete a specific error",
        "help": "",
        "internal": false,
        "name": "DeleteChatV3Errors",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v3/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatRequestPid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Remove or decline friend request",
        "help": "Endpoint deleted July 2021; Please use '/chat/v6/friendrequests'.",
        "internal": false,
        "name": "DeleteChatV3Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v3/friends": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendPid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Remove friend",
        "help": "Endpoint deleted August 2021; Please use '/chat/v4/friends'.",
        "internal": false,
        "name": "DeleteChatV3Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v3/groups": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendGroupName"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete a friend group",
        "help": "Endpoint deleted August 2021; Please use '/chat/v4/groups'.",
        "internal": false,
        "name": "DeleteChatV3Groups",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v3/me": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatPresenceProduct"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete multi-game presence of a specific product",
        "help": "",
        "internal": false,
        "name": "DeleteChatV3Me",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v4/blocked": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatBlockPid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Unblock a player",
        "help": "",
        "internal": false,
        "name": "DeleteChatV4Blocked",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v4/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatRequestPid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Remove or decline friend request",
        "help": "Endpoint deleted August 2023; Please use '/chat/v6/friendrequests'.",
        "internal": false,
        "name": "DeleteChatV4Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v4/friends": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendPid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Remove friend",
        "help": "",
        "internal": false,
        "name": "DeleteChatV4Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v4/groups": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendGroupName"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete a friend group",
        "help": "",
        "internal": false,
        "name": "DeleteChatV4Groups",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v5/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoCid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete or leave a conversation",
        "help": "Endpoint deleted July 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "DeleteChatV5Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v5/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatRequestPuuid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Remove or decline friend request",
        "help": "Endpoint deleted August 2021; Please use '/chat/v6/friendrequests'.",
        "internal": false,
        "name": "DeleteChatV5Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v5/messages": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoCid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Clear conversation message history",
        "help": "Endpoint deleted August 2021; Please use 'chat/v6/messages'.",
        "internal": false,
        "name": "DeleteChatV5Messages",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v6/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoCid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete or leave a conversation",
        "help": "Endpoint deleted August 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "DeleteChatV6Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v6/conversations/active": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Clear active conversation",
        "help": "Endpoint deleted August 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "DeleteChatV6ConversationsActive",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v6/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatRequestPuuid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Remove or decline friend request",
        "help": "",
        "internal": false,
        "name": "DeleteChatV6Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v6/messages": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoCid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Clear conversation message history",
        "help": "",
        "internal": false,
        "name": "DeleteChatV6Messages",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v7/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoCid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete or leave a conversation",
        "help": "",
        "internal": false,
        "name": "DeleteChatV7Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chat/v7/conversations/active": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Clear active conversation",
        "help": "",
        "internal": false,
        "name": "DeleteChatV7ConversationsActive",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "DELETE /chatbox/v1/chatboxes/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "DeleteChatboxV1ChatboxesById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "DELETE /chatbox/v1/chatboxes/{id}/channels/{channelName}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "channelName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "DeleteChatboxV1ChatboxesByIdChannelsByChannelName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "DELETE /client-config/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Removes the authorization. Triggers revocation of player configuration.",
        "help": "",
        "internal": false,
        "name": "DeleteClientConfigV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "DELETE /client-config/v2/entitlements-token": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the entitlements token, if set. Triggers revocation of player configuration.",
        "help": "",
        "internal": false,
        "name": "DeleteClientConfigV2EntitlementsToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "DELETE /client-feature-flags/v1/debug/mock-mode": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Leaves mock mode, and deletes mock data.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nWhen leaving mock mode, all data is refreshed from client-config and restored to normal.",
        "internal": false,
        "name": "DeleteClientFeatureFlagsV1DebugMockMode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "DELETE /client-feature-flags/v1/debug/overrides/flags/{namespace}/{flag}": {
        "arguments": [
            {
                "description": "",
                "name": "namespace",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "flag",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Removes an override for a feature flag.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nRemoves the override for the specified feature flag. The value of the flag will immediately reflect that being reported by client-config.",
        "internal": false,
        "name": "DeleteClientFeatureFlagsV1DebugOverridesFlagsByNamespaceByFlag",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "DELETE /commerce/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops mocking the caller ID for Swagger calls",
        "help": "Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.",
        "internal": false,
        "name": "DeleteCommerceV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "commerce"
        ],
        "threadSafe": false
    },
    "DELETE /cookie-jar/v1/cookies": {
        "arguments": [
            {
                "description": "",
                "name": "cookies",
                "optional": false,
                "type": {
                    "elementType": "CookieJarCookie",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete existing cookies.",
        "help": "",
        "internal": false,
        "name": "DeleteCookieJarV1Cookies",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "cookie-jar"
        ],
        "threadSafe": false
    },
    "DELETE /eula/v1/product-context": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Resets the current product context.",
        "help": "",
        "internal": false,
        "name": "DeleteEulaV1ProductContext",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "DELETE /external-message-handler/v1/patch-request": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete patch request, which suggests that the request is already handled",
        "help": "",
        "internal": false,
        "name": "DeleteExternalMessageHandlerV1PatchRequest",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin external-message-handler"
        ],
        "threadSafe": false
    },
    "DELETE /facebook-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete authorization status for Facebook",
        "help": "",
        "internal": false,
        "name": "DeleteFacebookAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "facebook-account"
        ],
        "threadSafe": false
    },
    "DELETE /ga-restriction/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops mocking the caller ID for Swagger calls",
        "help": "Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.",
        "internal": false,
        "name": "DeleteGaRestrictionV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "DELETE /ga-restriction/v1/debug/penalty-notifications-data": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete all penalty notifications for all products.",
        "help": "",
        "internal": false,
        "name": "DeleteGaRestrictionV1DebugPenaltyNotificationsData",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "DELETE /ga-restriction/v1/debug/penalty-notifications-data/{messageId}": {
        "arguments": [
            {
                "description": "",
                "name": "messageId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the penalty notification for a specific message ID. Note that you'll still be able to see the message until your next relog.",
        "help": "",
        "internal": false,
        "name": "DeleteGaRestrictionV1DebugPenaltyNotificationsDataByMessageId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "DELETE /ga-restriction/v1/debug/time": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the current mocked time, so that we use the real time again.",
        "help": "",
        "internal": false,
        "name": "DeleteGaRestrictionV1DebugTime",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "DELETE /ga-warning/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops mocking the caller ID for Swagger calls",
        "help": "Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.",
        "internal": false,
        "name": "DeleteGaWarningV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-warning"
        ],
        "threadSafe": false
    },
    "DELETE /ga-warning/v1/warnings/ack": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Acknowledges all warnings for the current game.",
        "help": "",
        "internal": false,
        "name": "DeleteGaWarningV1WarningsAck",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-warning"
        ],
        "threadSafe": false
    },
    "DELETE /ga-warning/v1/warnings/ack/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Acknowledges a specific GA player warning.",
        "help": "\n**Description**\n\nAcknowledges warning that has ID with {id}. See GET warnings endpoint for more info on how to find `{id}`.\n\n**Response Codes**\n* `404`: No warning with that ID found.\n* `204`: Warning found and acknowledged (deleted).\n",
        "internal": false,
        "name": "DeleteGaWarningV1WarningsAckById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-warning"
        ],
        "threadSafe": false
    },
    "DELETE /game-session/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops mocking the caller ID for Swagger calls",
        "help": "Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.",
        "internal": false,
        "name": "DeleteGameSessionV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "game-session"
        ],
        "threadSafe": false
    },
    "DELETE /game-session/v1/sessions/{sessionId}": {
        "arguments": [
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Requests to disconnect the player from the session.",
        "help": "",
        "internal": false,
        "name": "DeleteGameSessionV1SessionsBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "game-session"
        ],
        "threadSafe": false
    },
    "DELETE /gamecenter-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete authorization status of Game Center",
        "help": "",
        "internal": false,
        "name": "DeleteGamecenterAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "gamecenter-account"
        ],
        "threadSafe": false
    },
    "DELETE /google-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the current Google authorization session.",
        "help": "",
        "internal": false,
        "name": "DeleteGoogleAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "google-account"
        ],
        "threadSafe": false
    },
    "DELETE /info-radiator/v1/custom-heartbeat-metric/{name}": {
        "arguments": [
            {
                "description": "",
                "name": "name",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete a custom heartbeat metric, if it exists",
        "help": "",
        "internal": false,
        "name": "DeleteInfoRadiatorV1CustomHeartbeatMetricByName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "info-radiator"
        ],
        "threadSafe": false
    },
    "DELETE /mailbox/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops mocking the caller ID for Swagger calls",
        "help": "Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.",
        "internal": false,
        "name": "DeleteMailboxV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "DELETE /mobile-push/v1/filter/{application}/{filterId}": {
        "arguments": [
            {
                "description": "",
                "name": "application",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "filterId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete specific filter/unmute conversation, after this call conversation will again receive push notifications",
        "help": "",
        "internal": false,
        "name": "DeleteMobilePushV1FilterByApplicationByFilterId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "mobile-push"
        ],
        "threadSafe": false
    },
    "DELETE /nintendo-account/v2/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the current Nintendo authorization session",
        "help": "",
        "internal": false,
        "name": "DeleteNintendoAccountV2Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "nintendo-account"
        ],
        "threadSafe": false
    },
    "DELETE /okta-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete authorization status for Okta Account",
        "help": "",
        "internal": false,
        "name": "DeleteOktaAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "okta-account"
        ],
        "threadSafe": false
    },
    "DELETE /patch-proxy/v1/patch-jobs/all": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete all patch jobs from the scheduler. This will stop patch in progress.",
        "help": "",
        "internal": false,
        "name": "DeletePatchProxyV1PatchJobsAll",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "DELETE /patch-proxy/v1/patch-jobs/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete patch job from the scheduler. This will stop patch in progress.",
        "help": "",
        "internal": false,
        "name": "DeletePatchProxyV1PatchJobsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchProxyPatchProxyRequest"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "DELETE /patch/v1/installs/{install-id}": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the install resource",
        "help": "\nDelete an install resource. All outstanding requests will be cancelled but the files on disk will be left intact.\n",
        "internal": false,
        "name": "DeletePatchV1InstallsByInstallId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "DELETE /patch/v1/installs/{install-id}/requests/patch": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete patch request for install",
        "help": "\nDelete the patch request, interrupting any ongoing patching operations.\n",
        "internal": false,
        "name": "DeletePatchV1InstallsByInstallIdRequestsPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "DELETE /patch/v1/installs/{install-id}/requests/preview": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete preview request for install",
        "help": "\nDelete the preview request, interrupting any ongoing preview operations.\n",
        "internal": false,
        "name": "DeletePatchV1InstallsByInstallIdRequestsPreview",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "DELETE /patch/v1/installs/{install-id}/requests/repair": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the repair request, interrupting any ongoing repair operations.",
        "help": "",
        "internal": false,
        "name": "DeletePatchV1InstallsByInstallIdRequestsRepair",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "DELETE /patch/v1/installs/{install-id}/requests/seed": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete seed request for install",
        "help": "\nDelete the seed request, interrupting any ongoing seed operations.\n",
        "internal": false,
        "name": "DeletePatchV1InstallsByInstallIdRequestsSeed",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "DELETE /payments/v1/debug/countryCodeOverride": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "DEBUG: Clears country code override used during call to `GET /payments/v2/products`",
        "help": "",
        "internal": false,
        "name": "DeletePaymentsV1DebugCountryCodeOverride",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "payments"
        ],
        "threadSafe": false
    },
    "DELETE /platform-login/v1/persistence": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes stored session data",
        "help": "",
        "internal": false,
        "name": "DeletePlatformLoginV1Persistence",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-login"
        ],
        "threadSafe": false
    },
    "DELETE /platform-ui/v1/fre": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Disable FRE",
        "help": "",
        "internal": false,
        "name": "DeletePlatformUiV1Fre",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "DELETE /platform-ui/v1/riot-id-change": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Force close Riot ID Change UI",
        "help": "",
        "internal": false,
        "name": "DeletePlatformUiV1RiotIdChange",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "DELETE /platform-ui/v1/vng-edit-profile": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Force close VNG Edit Profile UI",
        "help": "",
        "internal": false,
        "name": "DeletePlatformUiV1VngEditProfile",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "DELETE /player-account/mfa/v1/factor/{factor}": {
        "arguments": [
            {
                "description": "",
                "name": "factor",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Remove a provided auth factor from the account",
        "help": "",
        "internal": false,
        "name": "DeletePlayerAccountMfaV1FactorByFactor",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountMfaV1DeleteFactorResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "DELETE /player-preferences/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops mocking the caller ID for Swagger calls",
        "help": "Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.",
        "internal": false,
        "name": "DeletePlayerPreferencesV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "DELETE /player-reporting/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops mocking the caller ID for Swagger calls",
        "help": "Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.",
        "internal": false,
        "name": "DeletePlayerReportingV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "DELETE /player-session-lifecycle/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the current lifecycle session",
        "help": "",
        "internal": false,
        "name": "DeletePlayerSessionLifecycleV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-session-lifecycle"
        ],
        "threadSafe": false
    },
    "DELETE /playstation-account/v1/user": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Resets user selection",
        "help": "",
        "internal": false,
        "name": "DeletePlaystationAccountV1User",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "DELETE /playstation-account/v2/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the current Playstation authorization session",
        "help": "",
        "internal": false,
        "name": "DeletePlaystationAccountV2Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "DELETE /private-settings/v1/settings": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Clear all private settings",
        "help": "",
        "internal": false,
        "name": "DeletePrivateSettingsV1Settings",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "private-settings"
        ],
        "threadSafe": false
    },
    "DELETE /process-control/v1/process/client-restarting": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Removes state that client is restarting - can quit now",
        "help": "",
        "internal": false,
        "name": "DeleteProcessControlV1ProcessClientRestarting",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "process-control"
        ],
        "threadSafe": false
    },
    "DELETE /product-integration-deps/v1/app-repair/apply-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Removes a apply request.",
        "help": "This removes a apply request. This should be called once the repair has been completed.",
        "internal": false,
        "name": "DeleteProductIntegrationDepsV1AppRepairApplyRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration-deps"
        ],
        "threadSafe": false
    },
    "DELETE /product-integration-deps/v1/app-update/apply-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Removes a apply request.",
        "help": "This removes a apply request. This should be called once the update has been completed.",
        "internal": false,
        "name": "DeleteProductIntegrationDepsV1AppUpdateApplyRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration-deps"
        ],
        "threadSafe": false
    },
    "DELETE /product-integration/v1/app-repair/apply": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Use this to cancel a game repair that was previously requested.",
        "help": "",
        "internal": false,
        "name": "DeleteProductIntegrationV1AppRepairApply",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "DELETE /product-integration/v1/debug/app-repair/apply": {
        "arguments": [
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Debug endpoint to cancel a repair by session id",
        "help": "The session id should match one from a running game",
        "internal": false,
        "name": "DeleteProductIntegrationV1DebugAppRepairApply",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "DELETE /product-launcher/v1/default-product": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Closes the launched default product.",
        "help": "",
        "internal": false,
        "name": "DeleteProductLauncherV1DefaultProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "DELETE /product-launcher/v1/partner-product": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Closes the launched partner product.",
        "help": "",
        "internal": false,
        "name": "DeleteProductLauncherV1PartnerProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "DELETE /product-launcher/v1/products/{product-id}/patchlines/{patchline-id}": {
        "arguments": [
            {
                "description": "",
                "name": "product-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchline-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "shouldTerminateProcess",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Closes the launched product-patchline.",
        "help": "",
        "internal": false,
        "name": "DeleteProductLauncherV1ProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "DELETE /product-launcher/v1/products/{product-id}/patchlines/{patchline-id}/rogue-process/{process-name}/{process-id}": {
        "arguments": [
            {
                "description": "",
                "name": "product-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchline-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "process-name",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "process-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Closes an allowed rogue process associated with a product.",
        "help": "",
        "internal": false,
        "name": "DeleteProductLauncherV1ProductsByProductIdPatchlinesByPatchlineIdRogueProcessByProcessNameByProcessId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "DELETE /product-metadata/v1/debug/mock-mode": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Leaves mock mode, and deletes mock data.",
        "help": "When leaving mock mode, all data is refreshed from client-config and restored to normal.",
        "internal": false,
        "name": "DeleteProductMetadataV1DebugMockMode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "DELETE /product-session/v1/sessions/{session-id}": {
        "arguments": [
            {
                "description": "",
                "name": "session-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "session",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductSessionSession"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[Only intended to be called by product launchers, like Riot Client.] Handles deleting a session.",
        "help": "",
        "internal": false,
        "name": "DeleteProductSessionV1SessionsBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "DELETE /riot-client-app-command/v1/launch-request": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Acknowledge the current launch request",
        "help": "",
        "internal": false,
        "name": "DeleteRiotClientAppCommandV1LaunchRequest",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-app-command"
        ],
        "threadSafe": false
    },
    "DELETE /riot-client-lifecycle/v1/product-context": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the existing product context, if it exists.",
        "help": "",
        "internal": false,
        "name": "DeleteRiotClientLifecycleV1ProductContext",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "DELETE /riot-client-lifecycle/v1/ux-command": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the current UX command so that the default client UX app no longer needs to process it",
        "help": "",
        "internal": false,
        "name": "DeleteRiotClientLifecycleV1UxCommand",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "DELETE /riot-login/v1/persistence": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes stored session data",
        "help": "",
        "internal": false,
        "name": "DeleteRiotLoginV1Persistence",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-login"
        ],
        "threadSafe": false
    },
    "DELETE /riot-messaging-service/v1/connect": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Schedule a disconnect request from RMS.",
        "help": "",
        "internal": false,
        "name": "DeleteRiotMessagingServiceV1Connect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "DELETE /riot-messaging-service/v1/entitlements": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete session entitlements token",
        "help": "",
        "internal": false,
        "name": "DeleteRiotMessagingServiceV1Entitlements",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "DELETE /riot-messaging-service/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Kill the current session, if any.",
        "help": "",
        "internal": false,
        "name": "DeleteRiotMessagingServiceV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "DELETE /riot-messaging-service/v1/socket": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Schedule a socket kill request. For debug purposes only.",
        "help": "",
        "internal": false,
        "name": "DeleteRiotMessagingServiceV1Socket",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "DELETE /riotclient/affinity": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the current runtime affinity of the application.",
        "help": "",
        "internal": false,
        "name": "DeleteRiotclientAffinity",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "DELETE /riotclient/splash": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Hide the splash screen.",
        "help": "",
        "internal": false,
        "name": "DeleteRiotclientSplash",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "DELETE /riotclient/v1/auth-tokens/{authToken}": {
        "arguments": [
            {
                "description": "",
                "name": "authToken",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Unregister an existing auth token.",
        "help": "",
        "internal": false,
        "name": "DeleteRiotclientV1AuthTokensByAuthToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "DELETE /rnet-lifecycle/v1/product-context": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the existing product context, if it exists.",
        "help": "",
        "internal": false,
        "name": "DeleteRnetLifecycleV1ProductContext",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "DELETE /rnet-lifecycle/v2/ux-command": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the current UX command so that the default client UX app no longer needs to process it",
        "help": "",
        "internal": false,
        "name": "DeleteRnetLifecycleV2UxCommand",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "DELETE /rnet-product-registry/v4/patch-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete patch request for patchline. This will stop any patch in progress.",
        "help": "",
        "internal": false,
        "name": "DeleteRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "DELETE /rnet-product-registry/v4/priority-patch-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops a priority patch operation for a given product and patchline, if in progress.",
        "help": "",
        "internal": false,
        "name": "DeleteRnetProductRegistryV4PriorityPatchRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "DELETE /rnet-product-registry/v4/session-patch-lock/products/{productId}/patchline/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Releases a shared session patch lock for the product-patchline",
        "help": "",
        "internal": false,
        "name": "DeleteRnetProductRegistryV4SessionPatchLockProductsByProductIdPatchlineByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "DELETE /rnet-sanitizer/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops mocking the caller ID for Swagger calls",
        "help": "Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.",
        "internal": false,
        "name": "DeleteRnetSanitizerV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rnet-sanitizer"
        ],
        "threadSafe": false
    },
    "DELETE /rso-auth/v1/auth-hints/hint": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Dismisses the current auth hint",
        "help": "",
        "internal": false,
        "name": "DeleteRsoAuthV1AuthHintsHint",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "DELETE /rso-auth/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Revoke existing tokens, logging the user out.",
        "help": "\nThis method destroys both the client-side authorization and revokes refresh tokens (if any) on the server. As a result, this request can fail if the authorization server is down. In the face of failure, the client still forgets the authorization, otherwise server-side downtime would prevent a player from logging out.\n\n",
        "internal": false,
        "name": "DeleteRsoAuthV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "DELETE /rso-auth/v1/authorization/userinfo": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the player userinfo",
        "help": "This endpoint is not available until the OpenID configuration is retrieved.",
        "internal": false,
        "name": "DeleteRsoAuthV1AuthorizationUserinfo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "DELETE /rso-auth/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Destroy the login session.",
        "help": "Destroys the login session locally and on the RSO server. Local sessions will also be destroyed and will require newly authenticating to login and create a new authentication session.",
        "internal": false,
        "name": "DeleteRsoAuthV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "DELETE /rso-auth/v1/userinfo/{client-id}": {
        "arguments": [
            {
                "description": "",
                "name": "client-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "This endpoint is not available until the OpenID configuration is retrieved.",
        "help": "",
        "internal": false,
        "name": "DeleteRsoAuthV1UserinfoByClientId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "DELETE /rso-auth/v2/authorizations/{client-id}": {
        "arguments": [
            {
                "description": "",
                "name": "client-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Remove the local instance of the authorization for the client-id.",
        "help": "This API will delete the local instance of the authorization associated with the client-id. This can be retrieved again by first POSTing via the `/rso-auth/v2/authorizations` API.",
        "internal": false,
        "name": "DeleteRsoAuthV2AuthorizationsByClientId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "DELETE /rso-auth/v2/config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Reset the RSO endpoint configuration.",
        "help": "Removes configuration overrides. This removes any provided configuration overrides.",
        "internal": false,
        "name": "DeleteRsoAuthV2Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "DELETE /rso-authenticator/v1/authentication": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the current authentication session.",
        "help": "",
        "internal": false,
        "name": "DeleteRsoAuthenticatorV1Authentication",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "DELETE /rso-authenticator/v1/authentication/link/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the current web linking code.",
        "help": "",
        "internal": false,
        "name": "DeleteRsoAuthenticatorV1AuthenticationLinkStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "DELETE /rso-mobile-ui/v1/region-election": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Programmatically dismiss the Region Election UI. Note that this endpoit returns immediately, but the resource is finalized synchronously.",
        "help": "Endpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "DeleteRsoMobileUiV1RegionElection",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiRegionElectionV1RegionElection"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "DELETE /social/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops mocking the caller ID for Swagger calls",
        "help": "Deletes the currently set `productId` and `patchlineId`. Plugin APIs will receive `swagger` as the `productId`.",
        "internal": false,
        "name": "DeleteSocialV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "DELETE /startup-config/v1/registry-config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Delete the registry config for Riot Client on startup which will disable launching riot client on start up",
        "help": "",
        "internal": false,
        "name": "DeleteStartupConfigV1RegistryConfig",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin startup-config"
        ],
        "threadSafe": false
    },
    "DELETE /telemetry/v2/metadata/{schemaPrefix}/{metadataEntity}/{propertyName}": {
        "arguments": [
            {
                "description": "The schema 'world' prefix (i.e. riotclient, rtp, etc) to match against incoming AP events.",
                "name": "schemaPrefix",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "Name of the metadata entity that exists in every schema for the given prefix (i.e. metadata, riotclientMetadata, etc)",
                "name": "metadataEntity",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "Name of a property to remove (i.e. rsoClient, region, locale)",
                "name": "propertyName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes a property in the metadata automatically applied to a type of analytics platform event",
        "help": "",
        "internal": false,
        "name": "DeleteTelemetryV2MetadataBySchemaPrefixByMetadataEntityByPropertyName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "telemetry"
        ],
        "threadSafe": false
    },
    "DELETE /voice-chat/v1/block-list/users": {
        "arguments": [
            {
                "description": "",
                "name": "unblocklist",
                "optional": false,
                "type": {
                    "elementType": "string",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Removes a list of users from the voice provider block list",
        "help": "The users unblocked by this endpoint will still be muted if they are blocked on either chat and/or platform blocklists",
        "internal": false,
        "name": "DeleteVoiceChatV1BlockListUsers",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "DELETE /voice-chat/v2/sessions": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Leave all joined sessions",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "DeleteVoiceChatV2Sessions",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "DELETE /voice-chat/v2/sessions/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Leave a session",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "DeleteVoiceChatV2SessionsById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "DELETE /voice-chat/v3/sessions/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Leave all joined sessions",
        "help": "Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}",
        "internal": false,
        "name": "DeleteVoiceChatV3SessionsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "DELETE /voice-chat/v3/sessions/{productName}/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Leave a session",
        "help": "Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}",
        "internal": false,
        "name": "DeleteVoiceChatV3SessionsByProductNameById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "DELETE /voice-chat/v4/sessions/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Leave all joined sessions",
        "help": "",
        "internal": false,
        "name": "DeleteVoiceChatV4SessionsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "DELETE /voice-chat/v4/sessions/{productName}/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Leave a session",
        "help": "",
        "internal": false,
        "name": "DeleteVoiceChatV4SessionsByProductNameById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "DELETE /xbox-account/v1/user": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Resets user selection",
        "help": "",
        "internal": false,
        "name": "DeleteXboxAccountV1User",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "DELETE /xbox-account/v2/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deletes the current Xbox authorization session",
        "help": "",
        "internal": false,
        "name": "DeleteXboxAccountV2Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "Exit": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Closes the connection.",
        "help": "",
        "internal": false,
        "name": "Exit",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "builtin"
        ],
        "threadSafe": true
    },
    "GET /accounts-security/v1/access": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the action need to be done and outbound URL for it",
        "help": "",
        "internal": false,
        "name": "GetAccountsSecurityV1Access",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AccountsSecurityAccountsSecurity"
        },
        "subscribable": false,
        "tags": [
            "accounts-security"
        ],
        "threadSafe": false
    },
    "GET /age-restriction/v1/age-restriction/products/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the age-restriction state for the productId",
        "help": "",
        "internal": false,
        "name": "GetAgeRestrictionV1AgeRestrictionProductsByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AgeRestrictionAgeRestriction"
        },
        "subscribable": false,
        "tags": [
            "age-restriction"
        ],
        "threadSafe": false
    },
    "GET /agent/v1/requests": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the list of pending and active requests being handled by the agent",
        "help": "",
        "internal": false,
        "name": "GetAgentV1Requests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AgentRequestQueue"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "GET /agent/v1/requests/third-party-dependency/{requestId}": {
        "arguments": [
            {
                "description": "",
                "name": "requestId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current status for a third party dependency job",
        "help": "",
        "internal": false,
        "name": "GetAgentV1RequestsThirdPartyDependencyByRequestId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ThirdPartyDependencyStatus"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "GET /agent/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the running state of the agent",
        "help": "",
        "internal": false,
        "name": "GetAgentV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AgentSession"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "GET /anti-addiction/v1/products/{productId}/policies/{policyType}/anti-addiction-state": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "policyType",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "AntiAddictionPolicyType"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns an anti-addiction state by productId and policy",
        "help": "",
        "internal": false,
        "name": "GetAntiAddictionV1ProductsByProductIdPoliciesByPolicyTypeAntiAddictionState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AntiAddictionAntiAddictionState"
        },
        "subscribable": false,
        "tags": [
            "anti-addiction"
        ],
        "threadSafe": false
    },
    "GET /app-command/v1/auth/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the authentication status",
        "help": "",
        "internal": false,
        "name": "GetAppCommandV1AuthStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AppCommandAuthStatus"
        },
        "subscribable": false,
        "tags": [
            "app-command"
        ],
        "threadSafe": false
    },
    "GET /app-command/v1/focus-request": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current app focus request, if one exists",
        "help": "Get the current app focus request, if one exists",
        "internal": false,
        "name": "GetAppCommandV1FocusRequest",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AppFocusRequest"
        },
        "subscribable": false,
        "tags": [
            "app-command"
        ],
        "threadSafe": false
    },
    "GET /apple-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve authorization from the Sign In with Apple Account",
        "help": "",
        "internal": false,
        "name": "GetAppleAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AppleAccountAppleAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "apple-account"
        ],
        "threadSafe": false
    },
    "GET /chat/v1/debug": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "get debug config",
        "help": "",
        "internal": false,
        "name": "GetChatV1Debug",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatDebugConfig"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v1/device-settings": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current values of the device settings related to chat.",
        "help": "",
        "internal": false,
        "name": "GetChatV1DeviceSettings",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatDeviceChatSettings"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "get chat session state",
        "help": "Chat notifies updated events on these endpoints, typically in this order:\n\n* `/chat/v1/session`    ->  { state: \"connecting\", pid: \"\", name: \"\", loaded: false }    //chat is now connecting (empty pid, name)\n* `/chat/v1/session`    ->  { state: \"connected\", pid: \"sum3530124@pvp.net\", name: \"Scarlet Witch\", loaded: false }    //chat is now connected initial data for showing the friends list in the UX is not loaded\n* `/chat/v#/presences`      //for all your friend presences (no way around this currently)\n* `/chat/v#/presences`      //for yourself\n* `/chat/v#/groups`         //batch of every group in your friends list\n* `/chat/v#/friends`        //batch\n* `/chat/v#/blocked`        //batch\n* `/chat/v#/conversations`  //recent conversations\n* `/chat/v#/messages`\n* `/chat/v#/participants`\n* `/chat/v1/session`     -> { state: \"connected\", pid: \"sum3530124@pvp.net\", name: \"Scarlet Witch\", loaded: true }    //chat is now connected and has loaded the initial data to show in the UX\n",
        "internal": false,
        "name": "GetChatV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatSession"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v1/settings": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the account settings related to chat",
        "help": "**Response:**\n\n```\n{\n  \"bounceDockIconEnabled\": [bounceDockIconEnabled], // If the dock icon will bounce when receiving a new message, game invite, etc\n  \"chat-status-message\": \"[status_message]\",      // The player's status message. This gets updated within chat when the \"status\" of the player is changed\n  \"chatFilterDisabled\": [chatFilterDisabled],       // If bad language is filtered in chat messages\n  \"chatGroupMobile\": [chatGroupMobile],             // If mobile friends are grouped in their own \"MOBILE\" folder\n  \"chatGroupOffline\": [chatGroupOffline],           // If offline friends are grouped in their own \"OFFLINE\" folder\n  \"chatWindow\": {                                   // The chat window settings\n    \"detached\": [detached],                         // If the chat window is docked or popped out\n    \"height\": [height],                             // The height of the chat window\n    \"left\": [left],                                 // The location of the left side of the chat window\n    \"top\": [top],                                   // The location of the top side of the chat window\n    \"width\": [width]                                // The width of the chat window\n  },\n  \"closed-conversations\": {                         // Which conversations have been closed. Used within chat to determine which recent convos to remove on startup. This gets updated\n                                                      // within chat when a conversation is deleted\n    \"[convo_id]\": [closed_timestamp],\n    ...\n  },\n  \"friendRequestToastsDisabled\": [friendRequestToastsDisabled], // If a toast appears when you receive a friend request\n  \"linkClickWarningEnabled\": [linkClickWarningEnabled],         // If a link warning will appear when clicking on links\n  \"messageNotificationsEnabled\": [messageNotificationsEnabled], // If a native toast or regular toast appears when receiving a message\n  \"moreUnreadsEnabled\": [moreUnreadsEnabled],                   // If a \"more unreads\" indicator appears for unread items not currently in scroll view\n  \"muted-conversations\": {                                      // A list of 1:1 muted conversations. This gets updated within chat when the \"muted\" state of a conversation is changed\n    \"[convo_id]\": 1\n  },                       \n  \"recentlyPlayedOpen\": [recentlyPlayedOpen],                  // If the \"recently played\" folder is open\n  \"roster-group-collapsed\": {                                  // A list of each folder's collapsed state. This gets updated within chat when the \"collapsed\" state of a group is changed\n    \"[group_folder_name]\": [collapsed],\n    ...\n  },\n  \"showWhenTypingEnabled\": [showWhenTypingEnabled],            // If an indicator is shown to other players when writing a message to them\n  \"sortBy\": \"[sort_type]\"                                    // How to sort friends in the friends list (ex. by \"availability\" vs \"alphabetical\")\n}\n```\n\nMost of these chat settings are straightforward and only require an update when a player enables or disables a setting. For example, when they check or uncheck a box for the setting.\n",
        "internal": false,
        "name": "GetChatV1Settings",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatAccountChatSettings"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v2/session/state": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "get chat product session state",
        "help": "",
        "internal": false,
        "name": "GetChatV2SessionState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatSessionState"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v3/blocked": {
        "arguments": [
            {
                "description": "",
                "name": "pid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get blocked players",
        "help": "**Response**:\n\n```\n{\n  \"blocked\": [\n    {\n      \"action\": \"[action]\",         // \"deny\" for blocked\n      \"name\": \"[name]\",             // player name\n      \"order\": \"[order],            // order in block list\n      \"pid\": \"[pid]\"                // player id\n    }\n  ]\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/blocked'.",
        "internal": false,
        "name": "GetChatV3Blocked",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatBlockedList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v3/errors": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a specific error",
        "help": "**Response:** list of error objects (could have zero or more entries):\n\n```\n{ \"errors\": [\n              { \"class\":   \"[class]\",        //source of error (muc, presence, friend, etc)\n                \"subtype\": \"[subtype]\",      //extra detail; usually most descriptive - along with text field\n                \"type\":    \"[type]\",         //detail - usually action based on error??? (cancel, ignore, etc)\n                \"code\":    \"[code]\",         //numeric error code\n                \"text\":    \"[description]\",  //if available; usually most descriptive (when provided) - along with subtype field\n                \"[key]\":   \"[value]\",        //extra available data, such as...\n                \"pid\":     \"[{pid}]\",        //player id if available\n                \"cid\":     \"[{cid}]\",        //conversation id if available\n                \"id\":      \"[error id]\",     //unique among all errors\n                \"ts\":      \"[timestamp]\"     //integer value: milliseconds UTC\n              },\n              { \"class\":   \"muc\",           //EXAMPLE ERROR OF FAILURE TO JOIN MUC\n                \"subtype\": \"not-allowed\",\n                \"type\":    \"cancel\",\n                \"text\":    \"\",\n                \"code\":    \"405\",\n                \"pid\":     \"sum3530124@pvp.net\",\n                \"cid\":     \"2785eb60-495f-4037-9fa0-98d70bac1b00@pgc.pvp.net\",\n                \"id\":      \"e_1491935420384\"\n                \"ts\":      \"1491935419627\"\n              },\n              { \"class\":   \"auth\",          //EXAMPLE ERROR OF FAILURE TO LOGIN TO CHAT\n                \"id\":      \"e_auth\",\n                \"code\":    \"401\",\n                \"type\":    \"temporary-auth-failure\"\n                \"ts\":      \"1497989043000\",\n                \"cid\":     \"\",\n                \"pid\":     \"\",\n                \"subtype\": \"\",\n                \"text\":    \"\",\n              },\n              ...\n            ]\n}\n```\n\n**Notes:**\n\n* Errors for group chat (multi-user chat: MUC) will have \"class\":\"muc\" and a \"cuuid\" field\n* Usually the \"subtype\" and the \"text\" fields are most descriptive, if they exist\n",
        "internal": false,
        "name": "GetChatV3Errors",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatErrorList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v3/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "pid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get friend requests",
        "help": "**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\n{\n  \"requests\": [\n    {\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n\n\nEndpoint deleted July 2021; Please use '/chat/v6/friendrequests'.",
        "internal": false,
        "name": "GetChatV3Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatFriendRequestList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v3/friends": {
        "arguments": [
            {
                "description": "",
                "name": "pid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get friends",
        "help": "**Response:** named friends root object: a flat list of friend property groups with 'pid' and 'name' inside (could have zero or more entries):```\n{\n  \"friends\": [\n    {\n      \"displayGroup\": \"[display group name]\",   // The current display group of this friend. This will either be the regular group or a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"group\":        \"[group name]\",           // The group this friend is a part of\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",\n      \"pid\":          \"[friend pid]\",\n      \"priority\":     \"[group priority value]\"\n    }\n    ...\n  ]\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/friends'.",
        "internal": false,
        "name": "GetChatV3Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatFriends"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v3/groups": {
        "arguments": [
            {
                "description": "",
                "name": "name",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get groups",
        "help": "**Response:** named groups root object: an ordered list of friend groups. First is highest displayed.  Could have one or more entries, always has a default group:\n\n```\n{\n  \"groups\": [\n    {\n      \"collapsed\":    [collapsed],                  // If the group is open or closed\n      \"isMetaGroup\":  [isMetaGroup],                // If the group is a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"name\":        \"[group name]\"\n    }\n    ...\n  ]\n}\n```\n\n**Mobile and Offline Groups**\n\nThe mobile and offline groups will appear in the list of groups if the \"chatGroupMobile\" or \"chatGroupOffline\" settings are set to true. They will appear like this:\n\n```\n{\n  \"groups\": [\n    ...\n    {\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"MOBILE\"\n    },\n    ...\n    {\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"OFFLINE\"\n    }\n    ...\n  ]\n}\n```\n\nFriends who are either in the \"offline\" or \"mobile\" state will automatically be given the corresponding \"displayGroup\" (ex. either \"OFFLINE\" or \"MOBILE\") in place of their regular group name. If the settings are turned off the groups will be removed and the friends' \"displayGroup\"s will be set back to their regular group names.\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/groups/order'.",
        "internal": false,
        "name": "GetChatV3Groups",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatGroupList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v4/blocked": {
        "arguments": [
            {
                "description": "",
                "name": "pid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get blocked players",
        "help": "**Response**:\n\n```\n{\n  \"blocked\": [\n    {\n      \"action\": \"[action]\",         // \"deny\" for blocked\n      \"name\": \"[name]\",             // player name\n      \"order\": \"[order],            // order in block list\n      \"pid\": \"[pid]\"                // player id\n    }\n  ]\n}\n```\n",
        "internal": false,
        "name": "GetChatV4Blocked",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatBlockedList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v4/conversations/{cid}/participants": {
        "arguments": [
            {
                "description": "",
                "name": "cid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the participants in a conversation",
        "help": "**Response:** named participants root object: a flat list of conversation participant property groups (could have zero or more entries):\n\n```\n{ \"participants\": [\n                      { \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      },\n                      { \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      },\n                        ...\n                      ]}\n```\n",
        "internal": false,
        "name": "GetChatV4ConversationsByCidParticipants",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatPlayerParticipants"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v4/conversations/{cid}/participants/{pid}": {
        "arguments": [
            {
                "description": "",
                "name": "cid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "pid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get specific participant in a conversation",
        "help": "**Response:** named participants root object: a flat list of conversation participant property groups (could have zero or more entries):\n\n```\n{ \"participants\": [\n                      { \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      },\n                      { \"cid\":  \"[cid]\",\n                        \"pid\":  \"[pid]\",\n                        \"name\": \"[name]\"\n                      },\n                        ...\n                      ]}\n```\n",
        "internal": false,
        "name": "GetChatV4ConversationsByCidParticipantsByPid",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatPlayerParticipants"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v4/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "pid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get friend requests",
        "help": "**Response:** named requests root object: a flat list of friend request property groups with 'pid' and 'name' inside (could have zero or more entries):\n\n```\n{\n  \"requests\": [\n    {\n      \"name\":         \"[friend name]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"pid\":          \"[friend pid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n\n\nEndpoint deleted August 2023; Please use '/chat/v6/friendrequests'.",
        "internal": false,
        "name": "GetChatV4Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatFriendRequestList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v4/friends": {
        "arguments": [
            {
                "description": "",
                "name": "pid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get friends",
        "help": "**Response:** named friends root object: a flat list of friend property groups with 'pid' and 'name' inside (could have zero or more entries):```\n{\n  \"friends\": [\n    {\n      \"displayGroup\":   \"[display group name]\",   // The current display group of this friend. This will either be the regular group or a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"group\":          \"[group name]\",           // The group this friend is a part of\n      \"name\":           \"[friend name]\",\n      \"note\":           \"[friend note]\",\n      \"pid\":            \"[friend pid]\",\n      \"priority\":       \"[group priority value]\"\n      \"last_online_ts\": \"[last online timestamp]\"\n    }\n    ...\n  ]\n}\n```\n",
        "internal": false,
        "name": "GetChatV4Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatFriends"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v4/groups": {
        "arguments": [
            {
                "description": "",
                "name": "name",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get groups",
        "help": "**Response:** named groups root object: an ordered list of friend groups. First is highest displayed.  Could have one or more entries, always has a default group:\n\n```\n{\n  \"groups\": [\n    {\n      \"collapsed\":    [collapsed],                  // If the group is open or closed\n      \"isMetaGroup\":  [isMetaGroup],                // If the group is a meta group (ex. \"MOBILE\", \"OFFLINE\")\n      \"name\":        \"[group name]\"\n    }\n    ...\n  ]\n}\n```\n\n**Mobile and Offline Groups**\n\nThe mobile and offline groups will appear in the list of groups if the \"chatGroupMobile\" or \"chatGroupOffline\" settings are set to true. They will appear like this:\n\n```\n{\n  \"groups\": [\n    ...\n    {\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"MOBILE\"\n    },\n    ...\n    {\n      \"collapsed\": [collapsed],\n      \"isMetaGroup\": true,\n      \"name\": \"OFFLINE\"\n    }\n    ...\n  ]\n}\n```\n\nFriends who are either in the \"offline\" or \"mobile\" state will automatically be given the corresponding \"displayGroup\" (ex. either \"OFFLINE\" or \"MOBILE\") in place of their regular group name. If the settings are turned off the groups will be removed and the friends' \"displayGroup\"s will be set back to their regular group names.\n",
        "internal": false,
        "name": "GetChatV4Groups",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatGroupList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v4/presences": {
        "arguments": [
            {
                "description": "",
                "name": "pid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "product",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get multi-game presences",
        "help": "ChatPartyMembers may show up with no ID or other data as there are valid cases that we may not have data on said player; this is expected behavior.",
        "internal": false,
        "name": "GetChatV4Presences",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatMultiGamePresenceList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v5/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a conversation by cid",
        "help": "Endpoint deleted July 2021; Please use '/chat/v7/conversations' or '/chat/v7/conversations/{domain}'.",
        "internal": false,
        "name": "GetChatV5Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatUIStateConversationList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v5/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "puuid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get friend requests",
        "help": "**Response:** named requests root object: a flat list of friend request property groups with 'puuid' and GnT info inside (could have zero or more entries in list):\n\n```\n{\n  \"requests\": [\n    {\n      \"gameName\":     \"[friend gameName]\",\n      \"tagLine\":      \"[friend tagLine]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"puuid\":        \"[friend puuid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v6/friendrequests'.",
        "internal": false,
        "name": "GetChatV5Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatFriendRequestListPuuid"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v5/messages": {
        "arguments": [
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "mid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get conversation messages",
        "help": "**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\n{ \"messages\": [\n                  { \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[{pid}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  },\n                  { \"body\": \"[message]\",\n                    \"pid\":  \"[{pid}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  },\n                  ...\n                ]\n}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'.",
        "internal": false,
        "name": "GetChatV5Messages",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatMessageList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v5/messages/{domain}": {
        "arguments": [
            {
                "description": "",
                "name": "domain",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get messages by domain (optional query args: cid)",
        "help": "Endpoint deleted August 2021; Please use 'chat/v6/messages/{domain}'.",
        "internal": false,
        "name": "GetChatV5MessagesByDomain",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatMessageList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v5/participants": {
        "arguments": [
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "pid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get specific participant in a conversation",
        "help": "",
        "internal": false,
        "name": "GetChatV5Participants",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatParticipants"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v5/participants/{domain}": {
        "arguments": [
            {
                "description": "",
                "name": "domain",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get conversations by domain (optional query arg: cid)",
        "help": "",
        "internal": false,
        "name": "GetChatV5ParticipantsByDomain",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatParticipants"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v6/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a conversation by cid",
        "help": "Endpoint deleted August 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "GetChatV6Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatUIStateConversationList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v6/conversations/active": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get active conversation",
        "help": "Endpoint deleted August 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "GetChatV6ConversationsActive",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatUIStateConversationList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v6/conversations/{domain}": {
        "arguments": [
            {
                "description": "",
                "name": "domain",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get conversations by domain (optional query arg: cid)",
        "help": "Endpoint deleted August 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "GetChatV6ConversationsByDomain",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatUIStateConversationList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v6/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "puuid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get friend requests",
        "help": "**Response:** named requests root object: a flat list of friend request property groups with 'puuid' and GnT info inside (could have zero or more entries in list):\n\n```\n{\n  \"requests\": [\n    {\n      \"gameName\":     \"[friend gameName]\",\n      \"tagLine\":      \"[friend tagLine]\",\n      \"note\":         \"[friend note]\",     // Can be set to contain information about the friend request. (ex. recofriender saves the player name from social media here)\n      \"puuid\":        \"[friend puuid]\",\n      \"subscription\": \"pending_out\"        //either \"pending_out\" or \"pending_in\" (sent or received request)\n    }\n  ]\n}\n```\n",
        "internal": false,
        "name": "GetChatV6Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatFriendRequestListPuuid"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v6/messages": {
        "arguments": [
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "mid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get conversation messages",
        "help": "**Response**: named messages root object: a flat list of message property groups (could have zero or more entries):\n\n```\n{ \"messages\": [\n                  { \"body\": \"[message]\",            //actual text of this message\n                    \"pid\":  \"[{pid}]\",              //pid of sender\n                    \"name\": \"[name]\",               //name of sender\n                    \"ts\":   \"[timestamp]\",          //integer value: milliseconds UTC\n                    \"cid\":  \"[cid]\",                //conversation id\n                    \"id\":   \"[message id]\",         //unique key within the conversation - for storage\n                    \"read\": true/false,               //whether message has been marked as read or not\n                    \"type\": \"[chat, groupchat, dm]\" //how the message was sent: from friend, from group chat, or a direct message from player in a group chat\n                  },\n                  { \"body\": \"[message]\",\n                    \"pid\":  \"[{pid}]\",\n                    \"ts\":   \"[timestamp]\",\n                    \"cid\":  \"[cid]\",\n                    \"id\":   \"[message id]\",\n                    \"read\": true/false,\n                    \"type\": \"[chat, groupchat, dm]\"\n                  },\n                  ...\n                ]\n}\n```\n\n**NOTE**: messages are sorted by time-stamp, earliest first, latest last\n",
        "internal": false,
        "name": "GetChatV6Messages",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatMessageList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v6/messages/{domain}": {
        "arguments": [
            {
                "description": "",
                "name": "domain",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get messages by domain (optional query args: cid)",
        "help": "",
        "internal": false,
        "name": "GetChatV6MessagesByDomain",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatMessageList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v7/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a conversation by cid",
        "help": "",
        "internal": false,
        "name": "GetChatV7Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatUIStateConversationList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v7/conversations/active": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get active conversation",
        "help": "",
        "internal": false,
        "name": "GetChatV7ConversationsActive",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatUIStateConversationList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chat/v7/conversations/{domain}": {
        "arguments": [
            {
                "description": "",
                "name": "domain",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "cid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get conversations by domain (optional query arg: cid)",
        "help": "",
        "internal": false,
        "name": "GetChatV7ConversationsByDomain",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatUIStateConversationList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/broadcasts": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all broadcasts for the specified chatbox",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdBroadcasts",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxMessageList"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/broadcasts/{channelName}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "channelName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all broadcasts for the specified chatbox",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdBroadcastsByChannelName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxMessageList"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/channels": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all channels for the specified chatbox",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdChannels",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxChannels"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/messages": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all messages for the specified chatbox",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdMessages",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxMessageList"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/messages/channels/{channelName}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "channelName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all messages of the specified channel for the specified chatbox",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdMessagesChannelsByChannelName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxMessageList"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/messages/channels/{channelName}/patch": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "channelName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets all messages in channel as get.  When subscribed, returns only new messages in the channel when updated",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdMessagesChannelsByChannelNamePatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxMessageList"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/messages/patch": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets all messages in the chatbox as get.  When subscribed, returns only new messages in the chatbox when updated",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdMessagesPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxMessageList"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/messages/whispers/{puuid}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get whisper messages for the specified chatbox",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdMessagesWhispersByPuuid",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxMessageList"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/messages/whispers/{puuid}/patch": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get whisper messages for the specified chatbox as get.  Returns only new whispers on update.",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdMessagesWhispersByPuuidPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxMessageList"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/participants": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all participants for the specified chatbox. Patch create notifications are sent for the very first added participants only. Patch update notifications are sent for subsequent added participants only. Patch delete notifications are sent for removed participants only.",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdParticipants",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatParticipants"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/chatboxes/{id}/participants/whispers": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all participants in whisper channels with friends (for the specified chatbox). Patch create notifications are sent for the very first added participants only. Patch update notifications are sent for subsequent added participants only. Patch delete notifications are sent for removed participants only.",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1ChatboxesByIdParticipantsWhispers",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatParticipants"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/friends": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all friends of the user",
        "help": "",
        "internal": false,
        "name": "GetChatboxV1Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxChatboxFriends"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Endpoint deprecated July 30, 2024; please use '/chatbox/v1/status' instead.",
        "internal": false,
        "name": "GetChatboxV1Ready",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /chatbox/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the status of the chatbox plugin to know whether or not to expect if the feature is usable.",
        "help": "\n**Description**\nGet the status of the chatbox plugin to know whether or not to expect if the feature is usable. Game teams are encouraged to subscribe\nto this endpoint so that the game can behave correctly depending on what the current state of the plugin is. For example, if the status of\nthe plugin is `permissionDenied`, game teams should not attempt to create a chatbox instance since the player does not have permissions to do so,\npossibly due to behavioural restrictions or parental control settings.\n\n** Returns **\n\nA PluginStatus value representing the current status of the plugin.\n* `PluginStatus` values:\n    * `unknown`: The status of the plugin is currently unknown. This is the default value while the plugin is initializing and its status has yet to be determined.\n    * `awaitingChatConnection`: The player has not been connected to the chat service, so the plugin will not be able to create functional chatboxes.\n    * `permissionUnknown`: The chat session has been established, but the plugin is unable to look up whether or not the player has permission to use text chat.\n         Attempting to create a chatbox will not work until the permission query succeeds.\n    * `permissionDenied`: The player does not have permission to use text chat. Attempting to use the plugin will always return an error and\n         existing chatbox instances will be destroyed.\n    * `ready`: The plugin is usable and chatboxes can be created.\n",
        "internal": false,
        "name": "GetChatboxV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatboxPluginStatus"
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "GET /client-config/v1/config": {
        "arguments": [
            {
                "description": "",
                "name": "type",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ClientConfigConfigType"
                }
            },
            {
                "description": "",
                "name": "app",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "version",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchline",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "region",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "namespace",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the configuration for the application. If config is not already cached locally, will make a blocking external request.",
        "help": "",
        "internal": false,
        "name": "GetClientConfigV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "map",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-config/v1/config/{name}": {
        "arguments": [
            {
                "description": "",
                "name": "name",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "type",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ClientConfigConfigType"
                }
            },
            {
                "description": "",
                "name": "app",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "version",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchline",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "region",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the single configuration value. If config is not already cached locally, will make a blocking external request.",
        "help": "",
        "internal": false,
        "name": "GetClientConfigV1ConfigByName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-config/v1/first-party-environment": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the 1st party environment the device is currently using.",
        "help": "",
        "internal": false,
        "name": "GetClientConfigV1FirstPartyEnvironment",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-config/v1/public-config-loaded": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns true if the public config has been loaded from the service or the cache.",
        "help": "",
        "internal": false,
        "name": "GetClientConfigV1PublicConfigLoaded",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-config/v1/status/{type}": {
        "arguments": [
            {
                "description": "",
                "name": "type",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ClientConfigConfigType"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the status for the given config type which primarily indicates if the config type is ready for use.",
        "help": "",
        "internal": false,
        "name": "GetClientConfigV1StatusByType",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ClientConfigConfigStatus"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-config/v1/url": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the URL of the external service",
        "help": "",
        "internal": false,
        "name": "GetClientConfigV1Url",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-config/v2/config/{name}": {
        "arguments": [
            {
                "description": "",
                "name": "name",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Non-blocking request for a specific configuration field.",
        "help": "Returns an individual configuration field for the requesting application. Both Public and Player types are checked. Subscribing to a configuration field that does not exist results in event UPDATE notifications with an `BindingProperty::Empty` data field. If the receiving module intends to handle the does-not-exist case, the event handler should accept a BindingProperty, not a concrete resource type. \n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\nResponse codes:\n- 200 If the field exists. The body will be the configuration value.\n- 202 If configuration has not yet been fetched, and updates can be received via subscription notifications.\n- 204 If the field does not exist, and all configuration has been successfully fetched.",
        "internal": false,
        "name": "GetClientConfigV2ConfigByName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-config/v2/namespace/{namespace}": {
        "arguments": [
            {
                "description": "",
                "name": "namespace",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Non-blocking request for public+player configurations in a namespace.",
        "help": "Returns the configuration for the requesting application in the given namespace for both Public and Player types.\n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\n",
        "internal": false,
        "name": "GetClientConfigV2NamespaceByNamespace",
        "nameSpace": "",
        "returns": {
            "elementType": "map",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-config/v2/namespace/{namespace}/player": {
        "arguments": [
            {
                "description": "",
                "name": "namespace",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Non-blocking request for 'player' configurations in a namespace.",
        "help": "Returns the *player* configuration for the requesting application in the given namespace.\n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\n* 'Player' configuration will have a delete notification sent to subscribers on logout.\n\n",
        "internal": false,
        "name": "GetClientConfigV2NamespaceByNamespacePlayer",
        "nameSpace": "",
        "returns": {
            "elementType": "map",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-config/v2/namespace/{namespace}/public": {
        "arguments": [
            {
                "description": "",
                "name": "namespace",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Non-blocking request for 'public' configurations in a namespace.",
        "help": "Returns the *public* configuration for the requesting application in the given namespace.\n\n* This call does not block. If config is not already cached locally, an async request will be dispatched.\n\n* If configuration has not yet been fetched, an HTTP 202 is returned. When the configuration is available, a resource notification will be sent to subscribers.\n\n* Configuration is automatically refreshed on state change (login, logout, or notification of change), and apps may be notified by subscribing to this endpoint.\n\n* Connecting game applications will have product information automatically applied to outgoing configuration requests (i.e. app name, version, patchline). This allows configuration overrides to be applied specifically for the app.\n\n",
        "internal": false,
        "name": "GetClientConfigV2NamespaceByNamespacePublic",
        "nameSpace": "",
        "returns": {
            "elementType": "map",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "GET /client-feature-flags/v1/debug/all-subscribed-flags": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns all the feature flags that are currently subscribed.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nReturns the keys and values of all feature flags that are currently subscribed -- that is, in active use by code.",
        "internal": false,
        "name": "GetClientFeatureFlagsV1DebugAllSubscribedFlags",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "GET /client-feature-flags/v1/debug/mock-data": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the current set of mock data for the plugin.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\n",
        "internal": false,
        "name": "GetClientFeatureFlagsV1DebugMockData",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ClientFeatureFlagsConfigurationSource"
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "GET /client-feature-flags/v1/debug/mock-mode": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns whether the plugin is in mock mode or not.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nThe return type is a boolean -- `true` indicates that plugin data is currently being mocked.",
        "internal": false,
        "name": "GetClientFeatureFlagsV1DebugMockMode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "GET /client-feature-flags/v1/debug/overrides/flags": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the values of all overridden flags.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nRetrieves the names and values of all currently set overrides.",
        "internal": false,
        "name": "GetClientFeatureFlagsV1DebugOverridesFlags",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "GET /client-feature-flags/v1/flags/{namespace}/{flag}": {
        "arguments": [
            {
                "description": "",
                "name": "namespace",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "flag",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the value of a specific feature flag.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nRetrieves the value of a specific feature flag. Implicitly subscribes, and updates to the feature flag will be broadcast.\n\nFlags which are not currently defined (or entitled) will always return `false` as the default value.",
        "internal": false,
        "name": "GetClientFeatureFlagsV1FlagsByNamespaceByFlag",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "GET /commerce/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks the caller ID in use when APIs are called from Swagger",
        "help": "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.",
        "internal": false,
        "name": "GetCommerceV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "CommercePluginCallerId_MockCallerId"
        },
        "subscribable": false,
        "tags": [
            "commerce"
        ],
        "threadSafe": false
    },
    "GET /commerce/v1/store/listing": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the store listing of products available for the player to purchase.",
        "help": "\n**Description**\nThis endpoint returns a StoreListing, which contains a list of Products, for the current platform.\n",
        "internal": false,
        "name": "GetCommerceV1StoreListing",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "CommerceV1StoreListing"
        },
        "subscribable": false,
        "tags": [
            "commerce"
        ],
        "threadSafe": false
    },
    "GET /cookie-jar/v1/cookies": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all cookies.",
        "help": "",
        "internal": false,
        "name": "GetCookieJarV1Cookies",
        "nameSpace": "",
        "returns": {
            "elementType": "CookieJarCookie",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "cookie-jar"
        ],
        "threadSafe": false
    },
    "GET /data-store/v1/install-settings/{+path}": {
        "arguments": [
            {
                "description": "",
                "name": "path",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the data for the specified key from the install settings.",
        "help": "",
        "internal": false,
        "name": "GetDataStoreV1InstallSettingsByPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "data-store"
        ],
        "threadSafe": false
    },
    "GET /data-store/v1/paths": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the data store paths.",
        "help": "",
        "internal": false,
        "name": "GetDataStoreV1Paths",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "DataPaths"
        },
        "subscribable": false,
        "tags": [
            "data-store"
        ],
        "threadSafe": false
    },
    "GET /data-store/v1/product-settings/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all settings for the specified product.",
        "help": "",
        "internal": false,
        "name": "GetDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "data-store"
        ],
        "threadSafe": false
    },
    "GET /data-store/v1/product-settings/products/{productId}/patchlines/{patchlineId}/{+path}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "path",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the data for the specified key from the settings for the specified product.",
        "help": "",
        "internal": false,
        "name": "GetDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineIdByPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "data-store"
        ],
        "threadSafe": false
    },
    "GET /data-store/v1/system-settings/{+path}": {
        "arguments": [
            {
                "description": "",
                "name": "path",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the setting for the specified key. This API is provided for host applications.",
        "help": "",
        "internal": false,
        "name": "GetDataStoreV1SystemSettingsByPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "data-store"
        ],
        "threadSafe": false
    },
    "GET /entitlements/v1/token": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get V1 entitlements token, which contains the RSO access token.",
        "help": "Callers should prefer /v2/token in order to acquire both access and ID token\n\nReturns HTTP 400 if the token is not ready.",
        "internal": false,
        "name": "GetEntitlementsV1Token",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "EntitlementsToken"
        },
        "subscribable": false,
        "tags": [
            "entitlements"
        ],
        "threadSafe": false
    },
    "GET /entitlements/v2/token": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get V2 Entitlements token, which contains the default RSO authorization.",
        "help": "'Authorization' pertains to the Riot Client application on desktop platforms and the host application for the embedded SDK.\n\nError codes:\n- Returns HTTP 404 if the token is not ready. Likely due to no authentication available.\n- 503 if Entitlements are disabled for this environment.",
        "internal": false,
        "name": "GetEntitlementsV2Token",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "EntitlementsTokenV2"
        },
        "subscribable": false,
        "tags": [
            "entitlements"
        ],
        "threadSafe": false
    },
    "GET /eula/v1/agreement": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns an object containing metadata about the most recent published EULA, and a field, 'acceptance', indicating whether the user has accepted this agreement or not. (The 'acceptance' field is accessible separately via the /acceptance endpoint.\n\nWhen the 'acceptance' field is 'WaitingForAllServiceData', we don't have the data for the latest EULA, nor its acceptance state, and all other fields are invalid.",
        "help": "",
        "internal": false,
        "name": "GetEulaV1Agreement",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "EulaAgreement"
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "GET /eula/v1/agreement/acceptance": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the acceptance state of the most recent EULA for the current user. Possible values are:\n\n- WaitingForAllServiceData: The user is signed out, we have yet to retrieve client-config, or we are otherwise waiting for data to determine if the user has accepted the latest agreement.\n- AcceptanceRequired: The user has never accepted a EULA, or has not accepted the most recent version.\n- Accepted: The user has accepted the most recent EULA.",
        "help": "",
        "internal": false,
        "name": "GetEulaV1AgreementAcceptance",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "EulaAcceptance"
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "GET /eula/v1/agreement/content": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the content of the current version EULA.",
        "help": "",
        "internal": false,
        "name": "GetEulaV1AgreementContent",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "GET /eula/v1/external-legal-links": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the web URLs for Terms of Service and Privacy Noticeaccording to the most appropriate locale for the agreement you are bound to",
        "help": "",
        "internal": false,
        "name": "GetEulaV1ExternalLegalLinks",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "EulaExternalLegalLinks"
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "GET /eula/v1/privacy-policy": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current privacy policy data.",
        "help": "",
        "internal": false,
        "name": "GetEulaV1PrivacyPolicy",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "EulaPrivacyPolicy"
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "GET /eula/v1/privacy-policy/content": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the content of the current privacy policy.",
        "help": "",
        "internal": false,
        "name": "GetEulaV1PrivacyPolicyContent",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "GET /eula/v1/product-context": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the current product context.",
        "help": "",
        "internal": false,
        "name": "GetEulaV1ProductContext",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "EulaProductContext"
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "GET /external-message-handler/v1/patch-request": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get patch request",
        "help": "",
        "internal": false,
        "name": "GetExternalMessageHandlerV1PatchRequest",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ExternalMessageHandlerPatchRequest"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin external-message-handler"
        ],
        "threadSafe": false
    },
    "GET /facebook-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve authorization from the Sign In with Facebook Account",
        "help": "",
        "internal": false,
        "name": "GetFacebookAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "FacebookAccountFacebookAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "facebook-account"
        ],
        "threadSafe": false
    },
    "GET /ga-restriction/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks the caller ID in use when APIs are called from Swagger",
        "help": "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.",
        "internal": false,
        "name": "GetGaRestrictionV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "GaRestrictionPluginCallerId_MockCallerId"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "GET /ga-restriction/v1/debug/callerIds": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a list of the currently-subscribed callerIds.",
        "help": "",
        "internal": false,
        "name": "GetGaRestrictionV1DebugCallerIds",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "GET /ga-restriction/v1/debug/penalty-notifications-data": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the raw data for the cached Penalty Notifications that this plugin received. This intended for debugging only.",
        "help": "",
        "internal": false,
        "name": "GetGaRestrictionV1DebugPenaltyNotificationsData",
        "nameSpace": "",
        "returns": {
            "elementType": "GaRestrictionCachedPenaltyNotificationDtoV2",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "GET /ga-restriction/v1/debug/time": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check what the plugin is using as the current time. If the time is being mocked, uses the mock. Otherwise uses the real current time. Uses milliseconds since epoch.",
        "help": "",
        "internal": false,
        "name": "GetGaRestrictionV1DebugTime",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint64"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "GET /ga-restriction/v1/penalty-notifications": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Provides a list of penalty notifications to show to the player for the callerId.",
        "help": "Deprecating V1 endpoint in favor of V2. Please use the /ga-restriction/v2/penalty-notifications endpoint going forward.",
        "internal": false,
        "name": "GetGaRestrictionV1PenaltyNotifications",
        "nameSpace": "",
        "returns": {
            "elementType": "GaRestrictionPenaltyNotification",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "GET /ga-restriction/v1/unread-penalty-notifications": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Provides a list of unread penalty notifications to show to the player for the callerId.",
        "help": "Deprecating V1 endpoint in favor of V2. Please use the /ga-restriction/v2/unread-penalty-notifications endpoint going forward.",
        "internal": false,
        "name": "GetGaRestrictionV1UnreadPenaltyNotifications",
        "nameSpace": "",
        "returns": {
            "elementType": "GaRestrictionPenaltyNotification",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "GET /ga-restriction/v2/penalty-notifications": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Provides a list of penalty notifications that can include evidence from multiple transgressions to show to the player for the callerId.",
        "help": "",
        "internal": false,
        "name": "GetGaRestrictionV2PenaltyNotifications",
        "nameSpace": "",
        "returns": {
            "elementType": "GaRestrictionPenaltyNotificationV2",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "GET /ga-restriction/v2/unread-penalty-notifications": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Provides a list of unread penalty notifications that can include evidence from multiple transgressions to show to the player for the callerId.",
        "help": "",
        "internal": false,
        "name": "GetGaRestrictionV2UnreadPenaltyNotifications",
        "nameSpace": "",
        "returns": {
            "elementType": "GaRestrictionPenaltyNotificationV2",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "GET /ga-warning/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks the caller ID in use when APIs are called from Swagger",
        "help": "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.",
        "internal": false,
        "name": "GetGaWarningV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "GaWarningPluginCallerId_MockCallerId"
        },
        "subscribable": false,
        "tags": [
            "ga-warning"
        ],
        "threadSafe": false
    },
    "GET /ga-warning/v1/warnings": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Provides a list of unacknowledged localized game-agnostic warnings to show the player.",
        "help": "\n**Description**\n\nYou will only get warnings for the current game. To make testing easier, there are debug endpoints on this plugin that allow you to mock your current game.\n\n**Response Body**\n\n* `gaWarningMessage`: Top-level response field. If there are no unacknowledged warnings, this will be empty object `{}`.\nOtherwise it will contain unacknowledged warnings keyed by their ID.\n* `gaWarningMessage.{id}`: Represents a single unacknowledged warning.\n  * `gaWarningMessage.{id}.category`: Category of the warning message--internal string.\n  * `gaWarningMessage.{id}.locale`: Detected locale of player and what locale the message was localized to.\n  * `gaWarningMessage.{id}.message`: Localized message to display to player.\n  * `gaWarningMessage.{id}.title`: Localized message title to display to player.\n  * `gaWarningMessage.{id}.acknowledgeText`: Localized text player must type to acknowledge the warning.\n  * (OPTIONAL) `gaWarningMessage.{id}.seeMoreUrl`: Hyperlink to give players more context about community guidelines. This field and `seeMoreLabel` won't always be present and you should build your UI to account for that.\n  * (OPTIONAL) `gaWarningMessage.{id}.seeMoreLabel`: Label for `seeMoreUrl`. Do not display the raw link, use this label instead. This field and `seeMoreUrl` won't always be present and you should build your UI to account for that.\n\n**Response Codes**\n* `200`: Success.\n* `401`: Player must be logged in.\n",
        "internal": false,
        "name": "GetGaWarningV1Warnings",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "GaWarningWarningResponse"
        },
        "subscribable": false,
        "tags": [
            "ga-warning"
        ],
        "threadSafe": false
    },
    "GET /game-session/v1/clusters": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets a list of all available clusters. Cluster IDs arrive asynchronously and may not be immediately avaiable. The logic of selecting the optimal cluster for a player is up to the game team.",
        "help": "",
        "internal": false,
        "name": "GetGameSessionV1Clusters",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "GameSessionGameSessionV1ClusterList"
        },
        "subscribable": false,
        "tags": [
            "game-session"
        ],
        "threadSafe": false
    },
    "GET /game-session/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks the caller ID in use when APIs are called from Swagger",
        "help": "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.",
        "internal": false,
        "name": "GetGameSessionV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "GameSessionPluginCallerId_MockCallerId"
        },
        "subscribable": false,
        "tags": [
            "game-session"
        ],
        "threadSafe": false
    },
    "GET /game-session/v1/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the readiness of the plugin to accept requests.",
        "help": "",
        "internal": false,
        "name": "GetGameSessionV1Ready",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "game-session"
        ],
        "threadSafe": false
    },
    "GET /game-session/v1/sessions/{sessionId}": {
        "arguments": [
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the status of the specified session.",
        "help": "",
        "internal": false,
        "name": "GetGameSessionV1SessionsBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "GameSessionGameSessionV1GameSessionResponse"
        },
        "subscribable": false,
        "tags": [
            "game-session"
        ],
        "threadSafe": false
    },
    "GET /gamecenter-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve authorization for the Game Center Account",
        "help": "",
        "internal": false,
        "name": "GetGamecenterAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "GamecenterAccountGameCenterAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "gamecenter-account"
        ],
        "threadSafe": false
    },
    "GET /google-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the current Google authorization status.",
        "help": "",
        "internal": false,
        "name": "GetGoogleAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "GoogleAccountGoogleAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "google-account"
        ],
        "threadSafe": false
    },
    "GET /jwt-authenticator/v1/headers": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns our current headers - currently only used in integration tests",
        "help": "",
        "internal": false,
        "name": "GetJwtAuthenticatorV1Headers",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "JwtAuthenticatorHeaders"
        },
        "subscribable": false,
        "tags": [
            "jwt-authenticator"
        ],
        "threadSafe": false
    },
    "GET /kr-account/config/v1/config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "The current plugin configuration.",
        "help": "Debug information allowing the ability to introspect the current plugin config.",
        "internal": false,
        "name": "GetKrAccountConfigV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "KrAccountKrAccountPluginConfig"
        },
        "subscribable": false,
        "tags": [
            "kr-account"
        ],
        "threadSafe": false
    },
    "GET /kr-account/promotion/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get KR account session token for KR Account Promotion flow",
        "help": "",
        "internal": false,
        "name": "GetKrAccountPromotionV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "KrAccountAccountPromotionSession"
        },
        "subscribable": false,
        "tags": [
            "kr-account"
        ],
        "threadSafe": false
    },
    "GET /launch-restriction/v1/products": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns all product ids the player is launch restricted for",
        "help": "WARNING: Should not be used to enforce a restriction.\nThese restrictions are based on data from an unsigned user info token thatplayers *can* tamper with./n/nLaunch restrictions include restrictions with a type of TIME_BAN or PERMANENT_BAN",
        "internal": false,
        "name": "GetLaunchRestrictionV1Products",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "launch-restriction"
        ],
        "threadSafe": false
    },
    "GET /launch-restriction/v1/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns true when the plugin is ready. Consumers are expected to wait until the plugin is ready to request restrictions",
        "help": "",
        "internal": false,
        "name": "GetLaunchRestrictionV1Ready",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "launch-restriction"
        ],
        "threadSafe": false
    },
    "GET /launch-restriction/v1/restrictions": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns all launch restrictions for the logged in player",
        "help": "WARNING: Should not be used to enforce a restriction.\nThese restrictions are based on data from an unsigned user info token thatplayers *can* tamper with./n/nLaunch restrictions include restrictions with a type of TIME_BAN or PERMANENT_BAN",
        "internal": false,
        "name": "GetLaunchRestrictionV1Restrictions",
        "nameSpace": "",
        "returns": {
            "elementType": "LaunchRestrictionLaunchRestrictions",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "launch-restriction"
        ],
        "threadSafe": false
    },
    "GET /launch-restriction/v1/restrictions/{product-id}": {
        "arguments": [
            {
                "description": "",
                "name": "product-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns all launch restrictions for the logged in player and given product-id",
        "help": "WARNING: Should not be used to enforce a restriction.\nThese restrictions are based on data from an unsigned user info token thatplayers *can* tamper with./n/nLaunch restrictions include restrictions with a type of TIME_BAN or PERMANENT_BAN",
        "internal": false,
        "name": "GetLaunchRestrictionV1RestrictionsByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "LaunchRestrictionLaunchRestrictions",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "launch-restriction"
        ],
        "threadSafe": false
    },
    "GET /loyalty/v1/loyalty-resource": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns loyalty resource including pcbId if player's playing from pcbang or not found exception",
        "help": "",
        "internal": false,
        "name": "GetLoyaltyV1LoyaltyResource",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "LoyaltyV2PCBangInfo"
        },
        "subscribable": false,
        "tags": [
            "loyalty"
        ],
        "threadSafe": false
    },
    "GET /mailbox/v1/check-new-mail": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns if the mailbox has new mail",
        "help": "\n**Description**\n\nThis API is subscribable and for notifications that new mail is available.\n",
        "internal": false,
        "name": "GetMailboxV1CheckNewMail",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "MailboxMailboxStatusUpdated"
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "GET /mailbox/v1/check-new-product-mail/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns if the mailbox has new mail",
        "help": "\n**Description**\n\nThis API is subscribable and for notifications that new mail is available. This is the internal implementation meant to be used by other plugins.\n\nRequired arguments:\n```\nproductId: A standard [product identifier](https://gh.riotgames.com/shared-static-data/rpg/tree/master/products)\n```\n",
        "internal": false,
        "name": "GetMailboxV1CheckNewProductMailByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "MailboxMailboxStatusUpdated"
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "GET /mailbox/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks the caller ID in use when APIs are called from Swagger",
        "help": "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.",
        "internal": false,
        "name": "GetMailboxV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "MailboxPluginCallerId_MockCallerId"
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "GET /mailbox/v1/enabled": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns whether or not the mailbox feature is enabled for this environment",
        "help": "\n**Description**\n\nThis API is subscribable and use to verify the feature is enabled in the current loaded cluster config.\n\n",
        "internal": false,
        "name": "GetMailboxV1Enabled",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "GET /mailbox/v1/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns whether or not the mailbox feature is enabled and ready to use for this environment",
        "help": "\n**Description**\n\nSubscribe to this endpoint to know when it is safe to call other mailbox APIs.\n\nThe result is `true` when all of the following are true: mailbox has been enabled by configuration, the cluster configuration is loaded, player affinity is available, and the player is logged in.\n\nIf the result is `false`, do not attempt to call mailbox APIs.\n\n",
        "internal": false,
        "name": "GetMailboxV1Ready",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "GET /mobile-product-registry/v1/build-number": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[Deprecated] Get the current game build number.",
        "help": "This is deprecated. Please use /riot-client/build-number.",
        "internal": false,
        "name": "GetMobileProductRegistryV1BuildNumber",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "int64"
        },
        "subscribable": false,
        "tags": [
            "mobile-product-registry"
        ],
        "threadSafe": false
    },
    "GET /mobile-product-registry/v1/is-game-obsolete": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[Deprecated] Get if the current game build is obsolete.",
        "help": "This API is deprecated. Please use `/product-integration/v1/app-update/status`.",
        "internal": false,
        "name": "GetMobileProductRegistryV1IsGameObsolete",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "MobileProductRegistryGameVersion"
        },
        "subscribable": false,
        "tags": [
            "mobile-product-registry"
        ],
        "threadSafe": false
    },
    "GET /mobile-product-registry/v1/valid-game-versions": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the valid game versions",
        "help": "",
        "internal": false,
        "name": "GetMobileProductRegistryV1ValidGameVersions",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "mobile-product-registry"
        ],
        "threadSafe": false
    },
    "GET /mobile-push/v1/filter/{application}/{filterId}": {
        "arguments": [
            {
                "description": "",
                "name": "application",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "filterId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Fetch specific filter data for logged in user",
        "help": "",
        "internal": false,
        "name": "GetMobilePushV1FilterByApplicationByFilterId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "mobile-push"
        ],
        "threadSafe": false
    },
    "GET /mobile-push/v1/filters/{application}": {
        "arguments": [
            {
                "description": "",
                "name": "application",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Fetch all filters for logged in user",
        "help": "",
        "internal": false,
        "name": "GetMobilePushV1FiltersByApplication",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "mobile-push"
        ],
        "threadSafe": false
    },
    "GET /nintendo-account/v1/player-nickname": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the player nickname of the Nintendo Account for the player logged in the Nintendo Switch",
        "help": "",
        "internal": false,
        "name": "GetNintendoAccountV1PlayerNickname",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "nintendo-account"
        ],
        "threadSafe": false
    },
    "GET /nintendo-account/v2/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets current Nintendo authorization status",
        "help": "",
        "internal": false,
        "name": "GetNintendoAccountV2Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "NintendoAccountV2AuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "nintendo-account"
        ],
        "threadSafe": false
    },
    "GET /okta-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve authorization from the Okta Account",
        "help": "",
        "internal": false,
        "name": "GetOktaAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "OktaAccountOktaAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "okta-account"
        ],
        "threadSafe": false
    },
    "GET /patch-proxy/v1/active-updates": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get list of active updates",
        "help": "",
        "internal": false,
        "name": "GetPatchProxyV1ActiveUpdates",
        "nameSpace": "",
        "returns": {
            "elementType": "PatchProxyProductPatchlineKey",
            "type": "vector"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "GET /patch-proxy/v1/patch-jobs": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all patch job information (sequence, productId, patchlineId) from the scheduler.",
        "help": "",
        "internal": false,
        "name": "GetPatchProxyV1PatchJobs",
        "nameSpace": "",
        "returns": {
            "elementType": "PatchProxyJobInfo",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "GET /patch-proxy/v1/patch-states/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get patch status for patchline",
        "help": "",
        "internal": false,
        "name": "GetPatchProxyV1PatchStatesProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchProxyPatchingResource"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "GET /patch/v1/configuration": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the configuration",
        "help": "",
        "internal": false,
        "name": "GetPatchV1Configuration",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchConfiguration"
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "GET /patch/v1/installs": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get list of installs on disk",
        "help": "",
        "internal": false,
        "name": "GetPatchV1Installs",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "GET /patch/v1/installs/{install-id}": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get detailed information about an install, including current requests and status.",
        "help": "",
        "internal": false,
        "name": "GetPatchV1InstallsByInstallId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchInstall"
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "GET /patch/v1/installs/{install-id}/status": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the current patch, preview and seed statuses of an install resource",
        "help": "\n**Note**\n* The status is always relative to a manifest and set of tags, specified by the `url` and `tags` fields respectively.\n* If there is any work in progress, `url` and `tags` will match those from the request.\n* If there are no pending requests, `url` and `tags` will match the files in the install folder.\n\n**Responses**\n\n**Patch**\n* `updating`: Currently performing a patching / seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all files are in sync with the release manifest.\n* `up_to_date`: The last request completed successfully and files are in sync with the release manifest.\n* `not_installed`: The last request completed successfully and detected that the install-id is not installed.\n* `pending_verify`: The last request has not completed verification step.\n\n**Seed**\n* `seeding`: Currently performing a seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all data needed to update the install has been downloaded.\n* `up_to_date`: The last request completed successfully and all data needed to update the install has been downloaded.\n* `pending_verify`: The last request has not completed verification step.\n\n**Preview**\n* `pending`: The preview request has not finished.\n* `done`: The last preview request completed successfully.\n\n**Repair**\n* `manifest_url`: the url of the release manifest.\n* `repair_progress`: The progress of the repair operation. Contains:\n    * `bytes_to_repair`: Total number of bytes to read.\n    * `files_to_repair`: Total number of files to read.\n    * `repaired_bytes`: Number of bytes read from disk so far.\n    * `repaired_files`: Number of files read from disk so far.\n* `state`: The overall state of the repair operation. Possible states include:\n    * `pending`: No repair requests have been made.\n    * `in_progress`: Repair is in progress.\n    * `canceled`: The repair operation was canceled.\n    * `done`: Repair operation is complete.\n",
        "internal": false,
        "name": "GetPatchV1InstallsByInstallIdStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchStatus"
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "GET /patch/v1/installs/{install-id}/status/patch": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the current patch status of an install.",
        "help": "\n**Notes**\n* The status is always relative to a manifest and set of tags, specified by the `url` and `tags` fields respectively.\n* If there is any work in progress, `url` and `tags` will match those from the request.\n* If there are no pending requests, `url` and `tags` will match the files in the install folder.\n\n**Response**\n\nThe `state` field will is populated based on the current work with the following values:\n* `updating`: Currently performing a patching / seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all files are in sync with the release manifest.\n* `up_to_date`: The last request completed successfully and files are in sync with the release manifest.\n* `not_installed`: The last request completed successfully and detected that the install-id is not installed.\n* `pending_verify`: The last request has not completed verification step.\n",
        "internal": false,
        "name": "GetPatchV1InstallsByInstallIdStatusPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchPatchStatus"
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "GET /patch/v1/installs/{install-id}/status/preview": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the current preview status of an install.",
        "help": "\n**Response**\n\nThe `state` field will is populated based on the current work with the following values:\n* `pending`: The preview request has not finished.\n* `done`: The last preview request completed successfully.\n",
        "internal": false,
        "name": "GetPatchV1InstallsByInstallIdStatusPreview",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchPreviewStatus"
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "GET /patch/v1/installs/{install-id}/status/repair": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the current repair status of an install.",
        "help": "\n**Response**\n* `manifest_url`: the url of the release manifest.\n* `repair_progress`: The progress of the repair operation. Contains:\n    * `bytes_to_repair`: Total number of bytes to read.\n    * `files_to_repair`: Total number of files to read.\n    * `repaired_bytes`: Number of bytes read from disk so far.\n    * `repaired_files`: Number of files read from disk so far.\n* `state`: The overall state of the repair operation.\n    * `pending`: No repair requests have been made.\n    * `in_progress`: Repair is in progress.\n    * `canceled`: The repair operation was canceled.\n    * `done`: Repair operation is complete.\n",
        "internal": false,
        "name": "GetPatchV1InstallsByInstallIdStatusRepair",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchRepairStatus"
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "GET /patch/v1/installs/{install-id}/status/seed": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the current seed status of an install.",
        "help": "\n**Notes**\n* If there is any work in progress, `url` and `tags` will match those from the request.\n* If there are no pending requests, `url` and `tags` will match the files in the install folder.\n\n**Response**\n\nThe `state` field will is populated based on the current work with the following values:\n* `seeding`: Currently performing a seeding request.\n* `out_of_date`: The last request was partially completed and more work needs to be done before all files are in sync with the release manifest.\n* `up_to_date`: The last request completed successfully and files are in sync with the release manifest.\n* `pending_verify`: The last request has not completed verification step.\n",
        "internal": false,
        "name": "GetPatchV1InstallsByInstallIdStatusSeed",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchSeedStatus"
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "GET /pay-mobile/v1/productListResult": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Available products notification",
        "help": "",
        "internal": false,
        "name": "GetPayMobileV1ProductListResult",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PayMobileProductListResult"
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "GET /pay-mobile/v1/purchaseResult": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Purchase notification",
        "help": "",
        "internal": false,
        "name": "GetPayMobileV1PurchaseResult",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PayMobilePurchaseResult"
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "GET /pay-mobile/v2/productListResult": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Available products notification",
        "help": "",
        "internal": false,
        "name": "GetPayMobileV2ProductListResult",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PayMobileProductListResult"
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "GET /pay-mobile/v2/purchaseResult": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Purchase notification",
        "help": "",
        "internal": false,
        "name": "GetPayMobileV2PurchaseResult",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PayMobilePurchaseResult"
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "GET /payments/v1/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "True if the plugin is ready to call initialize-purchase",
        "help": "",
        "internal": false,
        "name": "GetPaymentsV1Ready",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "payments"
        ],
        "threadSafe": false
    },
    "GET /payments/v2/products": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a list of bundles available for the player to purchase.",
        "help": "\n**Description**\nThis endpoint returns a list of Riot Bundles.\n\nResponse Body:\n* list of `Product` Objects:\n  * `id`: Product id used to start the purchase\n  * `riotSku`: Riot SKU\n  * `realAmountCents`: Real Currency Price\n  * `realCurrencyCode`: Currency code\n\n",
        "internal": false,
        "name": "GetPaymentsV2Products",
        "nameSpace": "",
        "returns": {
            "elementType": "PaymentsProduct",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "payments"
        ],
        "threadSafe": false
    },
    "GET /permissions/v1/request": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[WIP] Gets values for all requested permissions.",
        "help": "",
        "internal": false,
        "name": "GetPermissionsV1Request",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PermissionsPermissionsResponse"
        },
        "subscribable": false,
        "tags": [
            "permissions"
        ],
        "threadSafe": false
    },
    "GET /permissions/v1/request/{permissionId}": {
        "arguments": [
            {
                "description": "",
                "name": "permissionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[WIP] Gets the details for the permission specified.",
        "help": "",
        "internal": false,
        "name": "GetPermissionsV1RequestByPermissionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PermissionsPermissionDetails"
        },
        "subscribable": false,
        "tags": [
            "permissions"
        ],
        "threadSafe": false
    },
    "GET /platform-login/v1/config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the plugin config and enabled status",
        "help": "",
        "internal": false,
        "name": "GetPlatformLoginV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformLoginLoginPersistenceConfig"
        },
        "subscribable": false,
        "tags": [
            "platform-login"
        ],
        "threadSafe": false
    },
    "GET /platform-login/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current login state of the client",
        "help": "",
        "internal": false,
        "name": "GetPlatformLoginV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformLoginLoginStatus"
        },
        "subscribable": false,
        "tags": [
            "platform-login"
        ],
        "threadSafe": false
    },
    "GET /platform-notifications/v1/broadcast": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Subscription-only API. Subscribers will receive a broadcast message. All GET calls will return success and an empty broadcast.",
        "help": "",
        "internal": false,
        "name": "GetPlatformNotificationsV1Broadcast",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformNotificationsBroadcast"
        },
        "subscribable": false,
        "tags": [
            "platform-notifications"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/block-list": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the currently-authenticated player's list of blocked users on the current platform as a list of Riot PUUIDs.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1BlockList",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialPlatformSocialBlockList"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/block-list/patch": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "For subscriptions only - will return existing list of platform friends otherwise. On update and delete will notify with patches (changed elements only) rather than the full list. For a simple GET use the non-patch version of this URL.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1BlockListPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialPlatformSocialBlockList"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/crossplay-permission": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns if the current player has permissions from the platform to use cross play and if not, why that is the case.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1CrossplayPermission",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialPlatformSocialCrossPlayPermissionDetails"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/friend-list": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the currently-authenticated player's friend list on the current platform as a list of Riot PUUIDs.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1FriendList",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialPlatformSocialConsoleFriendsList"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/friend-list/patch": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "For subscriptions only - will return existing list of platform friends otherwise. On update and delete will notify with patches (changed elements only) rather than the full list. For a simple GET use the non-patch version of this URL.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1FriendListPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialPlatformSocialConsoleFriendsList"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/multiplayer-permission": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns if the current player has permissions from the platform to use multiplayer features and if not, why that is the case.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1MultiplayerPermission",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialPlatformSocialMultiplayerPermissionDetails"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/platform-profile": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Subscriptions to this endpoint will be notified when the platform's system UI for displaying a user profile is invoked and dismissed.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1PlatformProfile",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/text-permission": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns if the current player has permissions from the platform to use text chat and if not, why that is the case.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1TextPermission",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialPlatformSocialTextPermissionDetails"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/users-communication-permissions": {
        "arguments": [
            {
                "description": "",
                "name": "uids",
                "optional": false,
                "type": {
                    "elementType": "string",
                    "type": "vector"
                }
            },
            {
                "description": "",
                "name": "checkForCrossNetworkFriend",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "checkForCrossNetworkUser",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns communications permissions for a given set of users from the platform and if not, why that is the case.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1UsersCommunicationPermissions",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialPlatformSocialUserCommunicationPermission"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-social/v1/voice-permission": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns if the current player has permissions from the platform to use voice chat and if not, why that is the case.",
        "help": "",
        "internal": false,
        "name": "GetPlatformSocialV1VoicePermission",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialPlatformSocialVoicePermissionDetails"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "GET /platform-ui/v1/enabled": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns true if platform-ui is enabled",
        "help": "",
        "internal": false,
        "name": "GetPlatformUiV1Enabled",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "GET /platform-ui/v1/fre": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get FRE status",
        "help": "",
        "internal": false,
        "name": "GetPlatformUiV1Fre",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformUiFREStatus"
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "GET /platform-ui/v1/riot-id-change": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Subscribe to get RiotID Change UI availability and visibility status",
        "help": "",
        "internal": false,
        "name": "GetPlatformUiV1RiotIdChange",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformUiPlatformUIRiotIDStatus"
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "GET /platform-ui/v1/sdk-instance-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns sdk instance id to be used with platform-ui views, necessary when running multiple instances of the SDK",
        "help": "",
        "internal": false,
        "name": "GetPlatformUiV1SdkInstanceId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "GET /platform-ui/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns current status of UI",
        "help": "",
        "internal": false,
        "name": "GetPlatformUiV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformUiPlatformUIState"
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "GET /platform-ui/v1/vng-edit-profile": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Subscribe to get VNG Edit Profile availability status",
        "help": "",
        "internal": false,
        "name": "GetPlatformUiV1VngEditProfile",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformUiPlatformUIVNGEditProfileStatus"
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "GET /player-account/aliases/v1/active": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current active game name for the player.",
        "help": "Deprecated, please use v1/display-name to get the players game name and tag.",
        "internal": false,
        "name": "GetPlayerAccountAliasesV1Active",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountAliasesV1Alias"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/aliases/v1/aliases": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets a list of all aliases for the player.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountAliasesV1Aliases",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountAliasesV1AliasList"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/aliases/v1/display-name": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current active, sanitized, game name and tag for the player.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountAliasesV1DisplayName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountGameNameAndTagLine"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/aliases/v1/lookup": {
        "arguments": [
            {
                "description": "",
                "name": "gameName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "tagLine",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Lookup a list of aliases with the provided gameName and optional tagLine.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountAliasesV1Lookup",
        "nameSpace": "",
        "returns": {
            "elementType": "PlayerAccountAliasesV1AliasLookupResponse",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/aliases/v1/required": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check if a player is required to set their name.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountAliasesV1Required",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountAliasesV1RequiredResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/config/v1/config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "The current plugin configuration.",
        "help": "Debug information allowing the ability to introspect the current plugin config.",
        "internal": false,
        "name": "GetPlayerAccountConfigV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountPlayerAccountPluginConfig"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/login-history/v1/debug/cache": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "This endpoint is used to get the content of cache.\n",
        "internal": false,
        "name": "GetPlayerAccountLoginHistoryV1DebugCache",
        "nameSpace": "",
        "returns": {
            "elementType": "PlayerAccountV1PlayerLoginLocationHistory",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/promotion/v1/eligibility": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Return the latest cached eligibility check.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountPromotionV1Eligibility",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountPromotionV1EligibilityCheckResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/promotion/v1/fields": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a list of fields the player can update.",
        "help": "Returns an empty list until an eligibility check has been performed.",
        "internal": false,
        "name": "GetPlayerAccountPromotionV1Fields",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountPromotionV1UpdateableFieldsResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/regions/v1/available": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a list of available LoL regions for the currently signed in player.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountRegionsV1Available",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountRegionsV1AvailableRegionsResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/regions/v1/eligibility": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check if a player is eligible for regions selection.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountRegionsV1Eligibility",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountRegionsV1EligibilityCheckResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/vng/v1/profile/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Fetch a VNG profile of the currently signed in player.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountVngV1ProfileByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountVngV1Profile"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/vng/v1/status/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check cache to see if a player must register with the Vietnamese government; otherwise, check with VNG (via the Player Account Service).",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountVngV1StatusByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountVngV1StatusResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-account/vng/v1/status/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Whether VNG status endpoints are ready to handle requests (RSO access token exists)",
        "help": "",
        "internal": false,
        "name": "GetPlayerAccountVngV1StatusReady",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "GET /player-affinity/config/v1/config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "The current plugin configuration.",
        "help": "Debug information allowing the ability to introspect the current plugin config.",
        "internal": false,
        "name": "GetPlayerAffinityConfigV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityPluginConfig"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "GET /player-affinity/config/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "The current plugin readiness.",
        "help": "Returns the current readiness of the plugin.",
        "internal": false,
        "name": "GetPlayerAffinityConfigV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityPluginStatus"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "GET /player-affinity/product/v1/token/{product}": {
        "arguments": [
            {
                "description": "",
                "name": "product",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the cached product affinity token.",
        "help": "Endpoint deleted November 2021; Please use 'player-affinity/product/v2/token/{product}'.",
        "internal": false,
        "name": "GetPlayerAffinityProductV1TokenByProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityTokenProduct"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "GET /player-affinity/product/v2/cached-affinity/{product}": {
        "arguments": [
            {
                "description": "",
                "name": "product",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the cached product affinity.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAffinityProductV2CachedAffinityByProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityCachedProductAffinity"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "GET /player-affinity/product/v2/token/{product}": {
        "arguments": [
            {
                "description": "",
                "name": "product",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the player product affinity token.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAffinityProductV2TokenByProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityProductToken"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "GET /player-affinity/service/v2/cached-affinity/{service}": {
        "arguments": [
            {
                "description": "",
                "name": "service",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the cached service affinity.",
        "help": "",
        "internal": false,
        "name": "GetPlayerAffinityServiceV2CachedAffinityByService",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityCachedServiceAffinity"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "GET /player-behavior-token/v1/jwt": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the currently cached Player Behavior Token as a raw jwt (base64 encoded). Use this endpoint when you want to pass the PB Token to another backend service.",
        "help": "",
        "internal": false,
        "name": "GetPlayerBehaviorTokenV1Jwt",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "player-behavior-token"
        ],
        "threadSafe": false
    },
    "GET /player-behavior-token/v1/jwt/payload": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the currently cached Player Behavior Token's payload as a json blob. Use this endpoint when you want to use the PB Token locally, such as for displaying the data to the player.",
        "help": "",
        "internal": false,
        "name": "GetPlayerBehaviorTokenV1JwtPayload",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "player-behavior-token"
        ],
        "threadSafe": false
    },
    "GET /player-behavior-token/v1/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the ready state of the Player Behavior Token. Use this endpoint when you want to check the ready state of the PB Token plugin.",
        "help": "",
        "internal": false,
        "name": "GetPlayerBehaviorTokenV1Ready",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "player-behavior-token"
        ],
        "threadSafe": false
    },
    "GET /player-preferences/v1/data/{type}": {
        "arguments": [
            {
                "description": "",
                "name": "type",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get decompressed and decoded player preferences information from a specified type from the Player Preferences service as string",
        "help": "",
        "internal": false,
        "name": "GetPlayerPreferencesV1DataByType",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "GET /player-preferences/v1/data-json/{type}": {
        "arguments": [
            {
                "description": "",
                "name": "type",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get decompressed and decoded JSON player preferences information from a specified type from the Player Preferences service",
        "help": "",
        "internal": false,
        "name": "GetPlayerPreferencesV1DataJsonByType",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "GET /player-preferences/v1/data-json/productId/{productId}/type/{type}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "type",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get decompressed and decoded JSON player preferences information from a specified type from the Player Preferences service",
        "help": "",
        "internal": false,
        "name": "GetPlayerPreferencesV1DataJsonProductIdByProductIdTypeByType",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "GET /player-preferences/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks the caller ID in use when APIs are called from Swagger",
        "help": "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.",
        "internal": false,
        "name": "GetPlayerPreferencesV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerPreferencesPluginCallerId_MockCallerId"
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "GET /player-preferences/v1/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "True if the plugin is ready to be used",
        "help": "",
        "internal": false,
        "name": "GetPlayerPreferencesV1Ready",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "GET /player-reporting/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks the caller ID in use when APIs are called from Swagger",
        "help": "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.",
        "internal": false,
        "name": "GetPlayerReportingV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerReportingPluginCallerId_MockCallerId"
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "GET /player-reporting/v1/reporter-feedback": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Provides a list of unacknowledged localized reporter feedback messages to show the player.",
        "help": "\n**Data**\n* Response is a JSON map of `id` --> individual reporter feedback messages. Example:\n```json\n{\n\"1\": {\n\"locale\": \"en_US\",\n\"product\": \"league_of_legends\",\n\"category\": \"CHEATING\",\n\"recipientType\": \"\",\n\"message\": \"Your report of cheating has been verified.\",\n\"title\": \"Report Feedback\"\n}\n}\n```\n\n* `locale`: Detected locale of player and what locale the message was localized to.\n* 'product': The product that this game is intended for. Can be a specific product, such as \"league_of_legends\", or it can be \"riot\", denoting that it's for all/any product to view.\n* `category`: Category of the report--an internal string. Category keys to different localized messages.\n* 'recipientType': Category of the recipient's role in the report--an internal string. recipientType keys to different localized messages. Examples are \"BYSTANDER\" or \"\". Empty string denotes the recipient was the Reporter, for backwards compatibility with old messages.\n* `message`: Localized message to display to player.\n* `title`: Localized message title to display to player.\n\nResponse will be an empty map `{}` if there are no reporter-feedback messages to display.\n",
        "internal": false,
        "name": "GetPlayerReportingV1ReporterFeedback",
        "nameSpace": "",
        "returns": {
            "elementType": "PlayerReportingLocalizedReporterFeedbackMessage",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "GET /player-reporting/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "For Integration test & debugging use only.",
        "help": "\n**Description**\n\nReturns `true` if the plugin is ready to receive reports. Note that from the perspective of plugin customers submitting reports,\nreports can be \"successfully submitted\" even if the plugin is not ready to receive reports. This is an intended experience.\n",
        "internal": false,
        "name": "GetPlayerReportingV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "GET /player-session-lifecycle/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the login info of the player. Subscribe to this endpoint then make a POST to be notified when player has been logged in",
        "help": "",
        "internal": false,
        "name": "GetPlayerSessionLifecycleV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerSessionLifecyclePlayerSessionState"
        },
        "subscribable": false,
        "tags": [
            "player-session-lifecycle"
        ],
        "threadSafe": false
    },
    "GET /playstation-account/v1/authorization-consent": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authorization consent status for PlayStation",
        "help": "",
        "internal": false,
        "name": "GetPlaystationAccountV1AuthorizationConsent",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "GET /playstation-account/v1/config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve PlayStation Account plugin config",
        "help": "",
        "internal": false,
        "name": "GetPlaystationAccountV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlaystationAccountConfig"
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "GET /playstation-account/v1/player-nickname": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the player nickname of the Playstation Account for the player logged in the Playstation device",
        "help": "",
        "internal": false,
        "name": "GetPlaystationAccountV1PlayerNickname",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "GET /playstation-account/v1/player-nickname-without-consent": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the player nickname of the Playstation Account for the player logged in the Playstation device without checking for consent authorization",
        "help": "",
        "internal": false,
        "name": "GetPlaystationAccountV1PlayerNicknameWithoutConsent",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "GET /playstation-account/v1/premium-status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve Playstation+ status. This endpoint only evaluates the status on initialization and does not update if the subscription status updates for the signed in user after initialization.",
        "help": "",
        "internal": false,
        "name": "GetPlaystationAccountV1PremiumStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlaystationAccountPremiumStatus"
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "GET /playstation-account/v1/user": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve Playstation profile and PSN account info",
        "help": "",
        "internal": false,
        "name": "GetPlaystationAccountV1User",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlaystationAccountUser"
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "GET /playstation-account/v2/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets current Playstation authorization status",
        "help": "",
        "internal": false,
        "name": "GetPlaystationAccountV2Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlaystationAccountV2AuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "GET /plugin-manager/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the status of the plugin manager.",
        "help": "",
        "internal": false,
        "name": "GetPluginManagerV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PluginManagerResource"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin Manager",
            "Plugin Manager Diagnostics"
        ],
        "threadSafe": false
    },
    "GET /plugin-manager/v2/descriptions": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all plugin descriptions.",
        "help": "",
        "internal": false,
        "name": "GetPluginManagerV2Descriptions",
        "nameSpace": "",
        "returns": {
            "elementType": "PluginDescriptionResource",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin Manager",
            "Plugin Manager Info"
        ],
        "threadSafe": false
    },
    "GET /plugin-manager/v2/descriptions/{plugin}": {
        "arguments": [
            {
                "description": "Plugin name",
                "name": "plugin",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a plugin description.",
        "help": "",
        "internal": false,
        "name": "GetPluginManagerV2DescriptionsByPlugin",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PluginDescriptionResource"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin Manager",
            "Plugin Manager Info"
        ],
        "threadSafe": false
    },
    "GET /plugin-manager/v2/plugins": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get diagnostic information for all plugins.",
        "help": "",
        "internal": false,
        "name": "GetPluginManagerV2Plugins",
        "nameSpace": "",
        "returns": {
            "elementType": "PluginResource",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin Manager",
            "Plugin Manager Diagnostics"
        ],
        "threadSafe": false
    },
    "GET /plugin-manager/v2/plugins/{plugin}": {
        "arguments": [
            {
                "description": "Plugin name",
                "name": "plugin",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get diagnostic information for a single plugin.",
        "help": "",
        "internal": false,
        "name": "GetPluginManagerV2PluginsByPlugin",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PluginResource"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin Manager",
            "Plugin Manager Diagnostics"
        ],
        "threadSafe": false
    },
    "GET /privacy/v1/tracking": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves privacy tracking settings and state.",
        "help": "\n**iOS specific considerations**\n\nWhen the setting is changed while the game is in the background, the RiotGamesApi currently does not\nimmediately get notified of a change in tracking permissions, but checks again as those permissions\nare required, and notifies on change. If games need real-time access to tracking settings after a\nbackground, calling this endpoint after a return from background will force the SDK to look for\nsetting changes immediately and will also trigger a notification if the value has changed.\n\n**Response Codes**\n- `200`: Privacy settings and state are available.\n\n**Data**\n- `canUseTracking`: If `true`, the player's tracking information can be used.\n- `canRequestTrackingPermission`: If `true`, POST /privacy/v1/tracking/request-permission to request\n  permission to track the player.\n- `state`: Indicates if we have not yet requested tracking permissions (`Unrequested`), if we are\n  in the process of requesting permission to track (`Requesting`), and if we have completed that\n  request at any time in the past (`Completed`).\n",
        "internal": false,
        "name": "GetPrivacyV1Tracking",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PrivacyPrivacySettings"
        },
        "subscribable": false,
        "tags": [
            "privacy"
        ],
        "threadSafe": false
    },
    "GET /private-settings/v1/settings/{userid}/{key}": {
        "arguments": [
            {
                "description": "",
                "name": "userid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "key",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "For facilitating testing. Plugins should access private-settings via config key `private.user.<userid>.<key>`.",
        "help": "",
        "internal": false,
        "name": "GetPrivateSettingsV1SettingsByUseridByKey",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "private-settings"
        ],
        "threadSafe": false
    },
    "GET /private-settings/v1/token/{userid}": {
        "arguments": [
            {
                "description": "",
                "name": "userid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Only valid after a token has been restored or reset via PUT. Subscribe (or call) to this endpoint to receive updates on modifications to the private-settings for the given `userId`. Host applications should include this token with platform-specific data saves for the `userId`.",
        "help": "API only enabled when `private-settings.multi-user-mode` is set to `true` (Consoles default `true`, else `false`).\n\n`token` refers to a compressed and url-safe base64 encoded token of private settings for the user.\n\n`userId` in this API refers to the platform-specific identifier for an active profile or user account.\n\n * xbox: XUID\n * playstation: Account ID\n * switch: NSA ID\n\nPlatforms not listed do not need to use this API, as private settings persistence is managed by this SDK.",
        "internal": false,
        "name": "GetPrivateSettingsV1TokenByUserid",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "private-settings"
        ],
        "threadSafe": false
    },
    "GET /process-control/v1/process": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns information about the process-control.",
        "help": "",
        "internal": false,
        "name": "GetProcessControlV1Process",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProcessControlProcess"
        },
        "subscribable": false,
        "tags": [
            "process-control"
        ],
        "threadSafe": false
    },
    "GET /process-control/v1/process/client-did-restart": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "return true if client has restarted",
        "help": "",
        "internal": false,
        "name": "GetProcessControlV1ProcessClientDidRestart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": true,
        "tags": [
            "process-control"
        ],
        "threadSafe": false
    },
    "GET /process-control/v1/process/client-restarting": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns true if client is currently restarting, false otherwise",
        "help": "",
        "internal": false,
        "name": "GetProcessControlV1ProcessClientRestarting",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "process-control"
        ],
        "threadSafe": false
    },
    "GET /product-integration-deps/v1/app-repair/apply-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the game repair request for the matching product/patchline",
        "help": "It will return the apply request that matches the provided product/patchline for a running, or previously running game. Apply requests should be created via the product-integration plugin when games would like Riot Client to repair their game after it closes.",
        "internal": false,
        "name": "GetProductIntegrationDepsV1AppRepairApplyRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductIntegrationDepsAppRepairApplyRequest"
        },
        "subscribable": false,
        "tags": [
            "product-integration-deps"
        ],
        "threadSafe": false
    },
    "GET /product-integration-deps/v1/app-update/apply-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the game update request for the matching product/patchline",
        "help": "It will return the apply request that matches the provided product/patchline for a running, or previously running game. Apply requests should be created via the product-integration plugin when games would like Riot Client to update their game after it closes.",
        "internal": false,
        "name": "GetProductIntegrationDepsV1AppUpdateApplyRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductIntegrationDepsAppUpdateApplyRequest"
        },
        "subscribable": false,
        "tags": [
            "product-integration-deps"
        ],
        "threadSafe": false
    },
    "GET /product-integration-deps/v1/app-update/statuses/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current app update status for a given product and patchline",
        "help": "This returns the app update status for a given product and patchline.",
        "internal": false,
        "name": "GetProductIntegrationDepsV1AppUpdateStatusesProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductIntegrationDepsAppUpdateStatus"
        },
        "subscribable": false,
        "tags": [
            "product-integration-deps"
        ],
        "threadSafe": false
    },
    "GET /product-integration/v1/app-update/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Indicates the state of the primary patchline (or App Store app) for the running game.",
        "help": "Indicates the state of the primary patchline (or App Store app) for the running game.",
        "internal": false,
        "name": "GetProductIntegrationV1AppUpdateStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductIntegrationProductIntegrationAppUpdateStatus"
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "GET /product-integration/v1/debug/app-update/statuses": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Debug endpoint to get a list of all the app update statuses",
        "help": "This will return a map of session ids for open games to update statuses",
        "internal": false,
        "name": "GetProductIntegrationV1DebugAppUpdateStatuses",
        "nameSpace": "",
        "returns": {
            "elementType": "ProductIntegrationDebugAppUpdateStatus",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "GET /product-integration/v1/debug/app-update/statuses/{sessionId}": {
        "arguments": [
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Debug endpoint to get an update status by session id",
        "help": "The session id should match one from a running game",
        "internal": false,
        "name": "GetProductIntegrationV1DebugAppUpdateStatusesBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductIntegrationProductIntegrationAppUpdateStatus"
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "GET /product-integration/v1/detached-sessions": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Finds standalone external product sessions from other closed or active instances of this application",
        "help": "",
        "internal": false,
        "name": "GetProductIntegrationV1DetachedSessions",
        "nameSpace": "",
        "returns": {
            "elementType": "ProductIntegrationDetachedSession",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "GET /product-integration/v1/locale": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the locale the product should be running with. Prioritizes the product locale setting, followed by the SDK locale, and falling back to `en_US` if all else fails.",
        "help": "Returns the locale the product should be running with. Prioritizes the product locale setting, followed by the SDK locale, and falling back to `en_US` if all else fails.",
        "internal": false,
        "name": "GetProductIntegrationV1Locale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "GET /product-integration/v1/locale/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the locale of the product setting if in Standalone mode, or else returns the locale of the product/patchline setting in Riot Client",
        "help": "\n## Context\nThis endpoint is similar to the `GET /product-integration/v1/locale` endpoint except that the product and patchline IDs are provided. Note that the product and patchline IDs are only used if Standalone mode is NOT enabled since it takes priority.\n\nThis endpoint was added to give game teams the flexibility to switch between Standalone mode and Riot Client mode via configuration (no code changes). As soon as all games have migrated to Standalone mode, we can remove this endpoint.\n",
        "internal": false,
        "name": "GetProductIntegrationV1LocaleProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "GET /product-integration/v1/signout/permission": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Indicates if a product is allowed to request signout from the Riot Platform for all running products",
        "help": "If an error is returned, signout is not allowed. This is intended to be called by desktop games that are launched by Riot Client. Mobile and console products may call it and it will always be Allowed. Callers can use this information to take specific action (e.g. showing signout button or not).",
        "internal": false,
        "name": "GetProductIntegrationV1SignoutPermission",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductIntegrationSignoutPermission"
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "GET /product-launcher/v1/launching_from_xbgp": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "return a boolean value if we should show the xbox linking modal which shows in the install and play flows",
        "help": "",
        "internal": false,
        "name": "GetProductLauncherV1LaunchingFromXbgp",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "GET /product-localization/v1/data": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns loc plugin data - for triaging issues with bad or missing loc data",
        "help": "",
        "internal": false,
        "name": "GetProductLocalizationV1Data",
        "nameSpace": "",
        "returns": {
            "elementType": "ProductLocalizationProductLocalizationData",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "product-localization"
        ],
        "threadSafe": false
    },
    "GET /product-localization/v1/products/{productId}/patchlines/{patchlineId}/translations/{locale}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "locale",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns translations for a specified patchline and locale or fetches them if they are not yet fetched",
        "help": "",
        "internal": false,
        "name": "GetProductLocalizationV1ProductsByProductIdPatchlinesByPatchlineIdTranslationsByLocale",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "product-localization"
        ],
        "threadSafe": false
    },
    "GET /product-localization/v1/products/{productId}/translations/{locale}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "locale",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns translations for a specified product and locale or fetches them if they are not yet fetched",
        "help": "",
        "internal": false,
        "name": "GetProductLocalizationV1ProductsByProductIdTranslationsByLocale",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "product-localization"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v1/cookies": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves all cookies necessary to access any URI associated with any patchline.",
        "help": "Returns a list of cookies associated with URIs that point to patchline resources.\n\nIt's not necessary to use the results of this endpoint manually; when the list is updated, `/cookie-jar/v1/cookies` is automatically updated with the new set of cookies.",
        "internal": false,
        "name": "GetProductMetadataV1Cookies",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataCookieVector"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v1/debug/mock-data/{source}": {
        "arguments": [
            {
                "description": "",
                "name": "source",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the current set of mock data for the plugin.",
        "help": "`source` may be one of `public` or `player`, indiciating which data set from client-config the mock data represents.",
        "internal": false,
        "name": "GetProductMetadataV1DebugMockDataBySource",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataDebugClientConfigSource"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v1/debug/mock-mode": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns whether the plugin is in mock mode or not.",
        "help": "The return type is a boolean -- `true` indicates that plugin data is currently being mocked.",
        "internal": false,
        "name": "GetProductMetadataV1DebugMockMode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v1/definitions/products": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve brief definitions of all entitled products.",
        "help": "Returns the same data available via the `/products` resource, except patchlines are returned as a list of patchline IDs, rather than full patchline definitions.",
        "internal": false,
        "name": "GetProductMetadataV1DefinitionsProducts",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataProductDefinitionMap"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v1/definitions/products/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve a brief definition of a specific product.",
        "help": "Returns the same data available via the `/products/{productId}` resource, except patchlines are returned as a list of patchline IDs, rather than full patchline definitions.",
        "internal": false,
        "name": "GetProductMetadataV1DefinitionsProductsByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataProductDefinition"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v1/products/{productId}/patchlines/{patchlineId}/secondary-patchlines": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves a list of secondary patchlines.",
        "help": "Returns a list of secondary patchlines from the specified patchline inside the specified product, including associated metadata.",
        "internal": false,
        "name": "GetProductMetadataV1ProductsByProductIdPatchlinesByPatchlineIdSecondaryPatchlines",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataSecondaryPatchlineMap"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v1/products/{productId}/patchlines/{patchlineId}/secondary-patchlines/{secondaryPatchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "secondaryPatchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves a secondary patchline within a patchline.",
        "help": "Returns secondary patchline metadata from the specified patchline inside the specified product.",
        "internal": false,
        "name": "GetProductMetadataV1ProductsByProductIdPatchlinesByPatchlineIdSecondaryPatchlinesBySecondaryPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataSecondaryPatchlineMetadata"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v1/publish-states/{configType}": {
        "arguments": [
            {
                "description": "",
                "name": "configType",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the publish state of products of config type (public or player).",
        "help": "Returns Published or NotPublished",
        "internal": false,
        "name": "GetProductMetadataV1PublishStatesByConfigType",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataPublishState"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v2/products": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves a full list of all entitled products and patchlines.",
        "help": "Returns all entitled products, with all metadata for patchlines and secondary patchlines associated with the product.",
        "internal": false,
        "name": "GetProductMetadataV2Products",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataProductMetadataMap"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v2/products/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves a single product and all its entitled patchlines.",
        "help": "Returns a single entitled product, with all metadata for patchlines and secondary patchlines associated with the product.",
        "internal": false,
        "name": "GetProductMetadataV2ProductsByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataProductMetadata"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v2/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves a single patchline.",
        "help": "Returns a single patchline within a product, with all associated metadata, including any secondary patchlines.",
        "internal": false,
        "name": "GetProductMetadataV2ProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataPatchlineMetadata"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v2/products/{productId}/player-affinity-token": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves player affinity token for a single product.",
        "help": "Returns an id of single product with a map of its player affinities.",
        "internal": false,
        "name": "GetProductMetadataV2ProductsByProductIdPlayerAffinityToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataPlayerAffinityProductToken"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-metadata/v2/region-locale": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current region and locale.",
        "help": "",
        "internal": false,
        "name": "GetProductMetadataV2RegionLocale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductMetadataRegionLocale"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/data/path": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the standard data folder for your application",
        "help": "",
        "internal": false,
        "name": "GetProductSessionV1DataPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/data/path/{patchline-name}": {
        "arguments": [
            {
                "description": "",
                "name": "patchline-name",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the standard logs folder for a given full patchline name.",
        "help": "",
        "internal": false,
        "name": "GetProductSessionV1DataPathByPatchlineName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/external-sessions": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all sessions across products external to Riot Client. e.g. just games and not the UX product.",
        "help": "",
        "internal": false,
        "name": "GetProductSessionV1ExternalSessions",
        "nameSpace": "",
        "returns": {
            "elementType": "ProductSessionSession",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/external-sessions/{session-id}": {
        "arguments": [
            {
                "description": "",
                "name": "session-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the session for a specific session ID for a product external to Riot Client. e.g. just games and not the UX product.",
        "help": "",
        "internal": false,
        "name": "GetProductSessionV1ExternalSessionsBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductSessionSession"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/heartbeat/{session-id}": {
        "arguments": [
            {
                "description": "",
                "name": "session-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Deprecated. Please use POST /product-session/v2/heartbeat.",
        "help": "",
        "internal": false,
        "name": "GetProductSessionV1HeartbeatBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/host-session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Fetches the session of the 'host app', if it exists for this platform.",
        "help": "A 'host session' may be created for the application that Foundation is running within, used on mobile or console platforms.",
        "internal": false,
        "name": "GetProductSessionV1HostSession",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductSessionSession"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/host-session/id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Fetches the session ID of the 'host app', if it exists for this platform.",
        "help": "A 'host session' may be created for the application that Foundation is running within, used on mobile or console platforms.",
        "internal": false,
        "name": "GetProductSessionV1HostSessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/logs/path": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the standard logs folder for your application",
        "help": "",
        "internal": false,
        "name": "GetProductSessionV1LogsPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/logs/path/{patchline-name}": {
        "arguments": [
            {
                "description": "",
                "name": "patchline-name",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the standard logs folder for a given full patchline name.",
        "help": "",
        "internal": false,
        "name": "GetProductSessionV1LogsPathByPatchlineName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/session-heartbeats/{session-id}": {
        "arguments": [
            {
                "description": "",
                "name": "session-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[Only intended to be called by product launchers, like Riot Client.] Get the heartbeat for a specific session ID.",
        "help": "The heartbeat is split out from the normal session endpoint because it changes frequently, and it would be slow to notify all the subscribers that care about game starting and stopping but not heartbeats.",
        "internal": false,
        "name": "GetProductSessionV1SessionHeartbeatsBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductSessionSessionHeartbeat"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/sessions": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get all sessions across products.",
        "help": "",
        "internal": false,
        "name": "GetProductSessionV1Sessions",
        "nameSpace": "",
        "returns": {
            "elementType": "ProductSessionSession",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-session/v1/sessions/{session-id}": {
        "arguments": [
            {
                "description": "",
                "name": "session-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[Only intended to be called by product launchers, like Riot Client.] Get the session for a specific session ID.",
        "help": "",
        "internal": false,
        "name": "GetProductSessionV1SessionsBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductSessionSession"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "GET /product-update-scanner/v1/scan-and-patch/next-scheduled": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns date-time of next scheduled scanning",
        "help": "",
        "internal": false,
        "name": "GetProductUpdateScannerV1ScanAndPatchNextScheduled",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-update-scanner"
        ],
        "threadSafe": false
    },
    "GET /publishing-content/v1/news-feed": {
        "arguments": [
            {
                "description": "",
                "name": "locale",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "multigamePromoChannelId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "productId",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "from",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            },
            {
                "description": "",
                "name": "to",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the news feed content for the product details page for the productId",
        "help": "",
        "internal": false,
        "name": "GetPublishingContentV1NewsFeed",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PublishingContentNewsFeed"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin publishing-content"
        ],
        "threadSafe": false
    },
    "GET /publishing-content/v1/non-player-promo/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "from",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            },
            {
                "description": "",
                "name": "to",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            },
            {
                "description": "",
                "name": "locale",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the promotional publishing content for the non player product details page for the productId",
        "help": "",
        "internal": false,
        "name": "GetPublishingContentV1NonPlayerPromoByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PublishingContentNewsFeed"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin publishing-content"
        ],
        "threadSafe": false
    },
    "GET /publishing-content/v1/promo/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "from",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            },
            {
                "description": "",
                "name": "to",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            },
            {
                "description": "",
                "name": "locale",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the promotional publishing content for the product details page for the productId",
        "help": "",
        "internal": false,
        "name": "GetPublishingContentV1PromoByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PublishingContentNewsFeed"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin publishing-content"
        ],
        "threadSafe": false
    },
    "GET /rc-auth/v1/xbgp/login-status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the login status for player related to xbox game pass",
        "help": "",
        "internal": false,
        "name": "GetRcAuthV1XbgpLoginStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RcAuthLoginStatusResponse"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rc-auth"
        ],
        "threadSafe": false
    },
    "GET /restriction/v1/launchRestrictedProducts": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns all product ids the player is launch restricted for",
        "help": "",
        "internal": false,
        "name": "GetRestrictionV1LaunchRestrictedProducts",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "vector"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin restriction"
        ],
        "threadSafe": false
    },
    "GET /restriction/v1/launchRestrictions": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns all launch restrictions for the logged in player",
        "help": "",
        "internal": false,
        "name": "GetRestrictionV1LaunchRestrictions",
        "nameSpace": "",
        "returns": {
            "elementType": "RestrictionLaunchRestrictions",
            "type": "vector"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin restriction"
        ],
        "threadSafe": false
    },
    "GET /restriction/v1/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns true when the plugin is ready. Consumers are expected to wait until the plugin is ready to request restrictions",
        "help": "",
        "internal": false,
        "name": "GetRestrictionV1Ready",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin restriction"
        ],
        "threadSafe": false
    },
    "GET /riot-client-app-command/v1/launch-request": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current launch request, if one exists",
        "help": "",
        "internal": false,
        "name": "GetRiotClientAppCommandV1LaunchRequest",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AppCommandLaunchRequest"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin riot-client-app-command"
        ],
        "threadSafe": false
    },
    "GET /riot-client-app-command/v1/uri-handler": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns 204 if a URI handler is registered for this client, and 404 otherwise",
        "help": "",
        "internal": false,
        "name": "GetRiotClientAppCommandV1UriHandler",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin riot-client-app-command"
        ],
        "threadSafe": false
    },
    "GET /riot-client-auth/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "The player's RSO tokens",
        "help": "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the RSO Access Token for the SDK, intended for internal use by plugins that don't provide game-specific data.",
        "internal": false,
        "name": "GetRiotClientAuthV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotClientAuthApiAuthorization"
        },
        "subscribable": false,
        "tags": [
            "riot-client-auth"
        ],
        "threadSafe": false
    },
    "GET /riot-client-auth/v1/home-base-country": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "The player's home base country",
        "help": "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the home base country provided by RSO, intended for internal use by plugins that don't provide game-specific data.",
        "internal": false,
        "name": "GetRiotClientAuthV1HomeBaseCountry",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotClientAuthApiHomeBaseCountry"
        },
        "subscribable": false,
        "tags": [
            "riot-client-auth"
        ],
        "threadSafe": false
    },
    "GET /riot-client-auth/v1/login-country": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "The player's login country",
        "help": "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the login country provided by RSO, intended for internal use by plugins that don't provide game-specific data.",
        "internal": false,
        "name": "GetRiotClientAuthV1LoginCountry",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotClientAuthApiLoginCountry"
        },
        "subscribable": false,
        "tags": [
            "riot-client-auth"
        ],
        "threadSafe": false
    },
    "GET /riot-client-auth/v1/rso-client": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Fetch the SDK's RSO client details.",
        "help": "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides the RSO client ID and any other required client details for game-agnostic authorization business logic.\n\nSee [RSO's Client documentation](http://accounts.docs.rpg.riotgames.io/docs/clients/index/)For more context.",
        "internal": false,
        "name": "GetRiotClientAuthV1RsoClient",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotClientAuthApiClientDetails"
        },
        "subscribable": false,
        "tags": [
            "riot-client-auth"
        ],
        "threadSafe": false
    },
    "GET /riot-client-auth/v1/userinfo": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Public claims about the player",
        "help": "*Internal Riot Client API. Please don't use outside of Riot Client.*\n\nProvides game-agnostic, unencrypted claims about the player intended for use by Riot Client's UI and internal plugins. Note that these claims are neither signed nor encrypted, and should not be sent to remote services as authoritative.",
        "internal": false,
        "name": "GetRiotClientAuthV1Userinfo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotClientAuthApiUserInfo"
        },
        "subscribable": false,
        "tags": [
            "riot-client-auth"
        ],
        "threadSafe": false
    },
    "GET /riot-client-lifecycle-state/v1/state/{state}": {
        "arguments": [
            {
                "description": "",
                "name": "state",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the contents a named state, along with last-acked serial numbers.",
        "help": "",
        "internal": false,
        "name": "GetRiotClientLifecycleStateV1StateByState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotClientLifecycleStateBoundState"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle-state"
        ],
        "threadSafe": false
    },
    "GET /riot-client-lifecycle-state/v1/state/{state}/{param}/subscriber/{subscriber}": {
        "arguments": [
            {
                "description": "",
                "name": "state",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "param",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "subscriber",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the contents a named state, along with the last-acked serial number for a particular subscriber.",
        "help": "",
        "internal": false,
        "name": "GetRiotClientLifecycleStateV1StateByStateByParamSubscriberBySubscriber",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotClientLifecycleStateBoundState"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle-state"
        ],
        "threadSafe": false
    },
    "GET /riot-client-lifecycle-state/v1/state/{state}/subscriber/{subscriber}": {
        "arguments": [
            {
                "description": "",
                "name": "state",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "subscriber",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the contents a named state, along with the last-acked serial number for a particular subscriber.",
        "help": "",
        "internal": false,
        "name": "GetRiotClientLifecycleStateV1StateByStateSubscriberBySubscriber",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotClientLifecycleStateBoundState"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle-state"
        ],
        "threadSafe": false
    },
    "GET /riot-client-lifecycle/v1/league-region-election": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns a structure containing the current state of League account election for the logged in account.",
        "help": "",
        "internal": false,
        "name": "GetRiotClientLifecycleV1LeagueRegionElection",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "LeagueRegionElectionResource"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "GET /riot-client-lifecycle/v1/product-context": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the product context.",
        "help": "",
        "internal": false,
        "name": "GetRiotClientLifecycleV1ProductContext",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductPatchlineInfo"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "GET /riot-client-lifecycle/v1/product-context-phase": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the product context phase.",
        "help": "",
        "internal": false,
        "name": "GetRiotClientLifecycleV1ProductContextPhase",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "GET /riot-client-lifecycle/v1/ux-command": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current UX command that the default client UX app needs to process",
        "help": "",
        "internal": false,
        "name": "GetRiotClientLifecycleV1UxCommand",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "UxCommand"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "GET /riot-friends/v1/friends": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Query Riot friends for the current player",
        "help": "",
        "internal": false,
        "name": "GetRiotFriendsV1Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotFriendsChatFriends"
        },
        "subscribable": false,
        "tags": [
            "riot-friends"
        ],
        "threadSafe": false
    },
    "GET /riot-login/v1/config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the plugin config and enabled status",
        "help": "",
        "internal": false,
        "name": "GetRiotLoginV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotLoginLoginPersistenceConfig"
        },
        "subscribable": false,
        "tags": [
            "riot-login"
        ],
        "threadSafe": false
    },
    "GET /riot-login/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current login state of the client",
        "help": "",
        "internal": false,
        "name": "GetRiotLoginV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotLoginLoginStatus"
        },
        "subscribable": false,
        "tags": [
            "riot-login"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/message/{a}": {
        "arguments": [
            {
                "description": "",
                "name": "a",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Util endpoint that responds with any cached messages for the resource based on component a",
        "help": "Endpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/{+path}'.",
        "internal": false,
        "name": "GetRiotMessagingServiceV1MessageByA",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotMessagingServiceMessage"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/message/{a}/{b}": {
        "arguments": [
            {
                "description": "",
                "name": "a",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "b",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b",
        "help": "Endpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/{+path}'.",
        "internal": false,
        "name": "GetRiotMessagingServiceV1MessageByAByB",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotMessagingServiceMessage"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/message/{a}/{b}/{c}": {
        "arguments": [
            {
                "description": "",
                "name": "a",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "b",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "c",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c",
        "help": "Endpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/{+path}'.",
        "internal": false,
        "name": "GetRiotMessagingServiceV1MessageByAByBByC",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotMessagingServiceMessage"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/message/{a}/{b}/{c}/{d}": {
        "arguments": [
            {
                "description": "",
                "name": "a",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "b",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "c",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "d",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c:d",
        "help": "Endpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/{+path}'.",
        "internal": false,
        "name": "GetRiotMessagingServiceV1MessageByAByBByCByD",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotMessagingServiceMessage"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/message/{a}/{b}/{c}/{d}/{e}": {
        "arguments": [
            {
                "description": "",
                "name": "a",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "b",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "c",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "d",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "e",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c:d:e",
        "help": "Endpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/{+path}'.",
        "internal": false,
        "name": "GetRiotMessagingServiceV1MessageByAByBByCByDByE",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotMessagingServiceMessage"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/message/{a}/{b}/{c}/{d}/{e}/{f}": {
        "arguments": [
            {
                "description": "",
                "name": "a",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "b",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "c",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "d",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "e",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "f",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Util endpoint that responds with any cached messages for the aggregate resource based on components a:b:c:d:e:f",
        "help": "Endpoint deprecated and will be deleted October 2022.  Please use 'riot-messaging-service/v1/messages/{+path}'.",
        "internal": false,
        "name": "GetRiotMessagingServiceV1MessageByAByBByCByDByEByF",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotMessagingServiceMessage"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/messages/{+path}": {
        "arguments": [
            {
                "description": "",
                "name": "path",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Subscription endpoint to receive async notifications of push messages with the given resource path.",
        "help": "Subscriptions can be for a fully qualified path (mock/v1/resource), a wildcard (mock/v1/ *) or a recursive wildcard (mock/ **).\n\nNote that subscriptions for your application cannot overlap or conflict, such that a subscription for `mock/ **` cannot coincide with a subscription for `mock/v1/resource`.",
        "internal": false,
        "name": "GetRiotMessagingServiceV1MessagesByPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotMessagingServiceMessage"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/out-of-sync": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "This is subscribe-only endpoint. Notification on this resource is triggered if RMS session is out of sync.",
        "help": "",
        "internal": false,
        "name": "GetRiotMessagingServiceV1OutOfSync",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Return the current session, if any.",
        "help": "",
        "internal": false,
        "name": "GetRiotMessagingServiceV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotMessagingServiceSession"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/state": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Return all state",
        "help": "",
        "internal": false,
        "name": "GetRiotMessagingServiceV1State",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RiotMessagingServiceState"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-messaging-service/v1/user": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the PUUID that this plugin is currently authenticated for",
        "help": "",
        "internal": false,
        "name": "GetRiotMessagingServiceV1User",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "GET /riot-status/v1/products/async/{productId}/patchlines/{patchlineId}/deployments/{deployment}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "deployment",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns raw JSON service status information for a specific game service cluster. This is an async version of the endpoint so it returns a succes with no body immediately and the status data will be sent to the client when it is available.",
        "help": "",
        "internal": false,
        "name": "GetRiotStatusV1ProductsAsyncByProductIdPatchlinesByPatchlineIdDeploymentsByDeployment",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riot-status"
        ],
        "threadSafe": false
    },
    "GET /riot-status/v1/products/{productId}/patchlines/{patchlineId}/deployments/{deployment}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "deployment",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns raw JSON service status information for a specific game service cluster",
        "help": "This endpoint has been deprecated and can block. Please use the async version /riot-status/v1/products/async/{productId}/patchlines/{patchlineId}/deployments/{deployment}",
        "internal": false,
        "name": "GetRiotStatusV1ProductsByProductIdPatchlinesByPatchlineIdDeploymentsByDeployment",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riot-status"
        ],
        "threadSafe": false
    },
    "GET /riot-status/v1/riotclient": {
        "arguments": [
            {
                "description": "",
                "name": "patchlineId",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns raw JSON service status information for issues affecting multiple games",
        "help": "",
        "internal": false,
        "name": "GetRiotStatusV1Riotclient",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riot-status"
        ],
        "threadSafe": false
    },
    "GET /riot-status/v1/riotclient/async/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns raw JSON service status information for issues affecting multiple games. This is an async version of the endpoint so it returns a succes with no body immediately and the status data will be sent to the client when it is available.",
        "help": "",
        "internal": false,
        "name": "GetRiotStatusV1RiotclientAsyncByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/affinity": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current runtime affinity of the application.",
        "help": "",
        "internal": false,
        "name": "GetRiotclientAffinity",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/app-name": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Application name without file extension",
        "help": "",
        "internal": false,
        "name": "GetRiotclientAppName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/app-port": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the TCP port number that the remoting server is listening on.",
        "help": "",
        "internal": false,
        "name": "GetRiotclientAppPort",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint16"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/auth-token": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Return the auth token used by the remoting server",
        "help": "",
        "internal": false,
        "name": "GetRiotclientAuthToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/build-number": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Numeric build number for this application",
        "help": "",
        "internal": false,
        "name": "GetRiotclientBuildNumber",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "int64"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/command-line-args": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the command line parameters for the application",
        "help": "Command line arguments are deprecated, and will be removed June 2022. Use configuration directly.",
        "internal": false,
        "name": "GetRiotclientCommandLineArgs",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/get_region_locale": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current region and locale.",
        "help": "",
        "internal": false,
        "name": "GetRiotclientGetRegionLocale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RegionLocale"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/machine-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Base64 encoded uuid identifying the user's machine",
        "help": "",
        "internal": false,
        "name": "GetRiotclientMachineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/product-locales/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the locale of the product with the specified product and patchline id",
        "help": "",
        "internal": false,
        "name": "GetRiotclientProductLocalesProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/region-locale": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current region and locale.",
        "help": "",
        "internal": false,
        "name": "GetRiotclientRegionLocale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RegionLocale"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/secondary-args": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the command line parameters that occur after the '--' delimiter",
        "help": "Command line arguments are deprecated, and will be removed June 2022. Use configuration directly.",
        "internal": false,
        "name": "GetRiotclientSecondaryArgs",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/session-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "UUID identifying a user interaction session. This value is created when the user session begins (i.e. mobile game open, Riot Client starts). Multiple instances of the SDK may share the same session ID if they were launched by the same Riot Client user session.",
        "help": "",
        "internal": false,
        "name": "GetRiotclientSessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/system-info/v1/basic-info": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get basic system information: OS, memory, processor speed, and number of physical cores",
        "help": "",
        "internal": false,
        "name": "GetRiotclientSystemInfoV1BasicInfo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "basicSystemInfo"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/trace": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves a completed scheduler trace.",
        "help": "",
        "internal": false,
        "name": "GetRiotclientTrace",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/v1/app-info": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Information about the application hosting the SDK",
        "help": "",
        "internal": false,
        "name": "GetRiotclientV1AppInfo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AppInfo"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/v1/platform-user": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Information about the currently active platform user",
        "help": "",
        "internal": false,
        "name": "GetRiotclientV1PlatformUser",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformUser"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclient/zoom-scale": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the last known posted zoom-scale value.",
        "help": "",
        "internal": false,
        "name": "GetRiotclientZoomScale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "double"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "GET /riotclientapp/v1/command-line-args": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current list of command line arguments that are intended for Riot Client, that is, excluding secondary arguments that are intended for launched applications. The /riotclientapp/v1/new-args resource is updated when new command line arguments are added.",
        "help": "",
        "internal": false,
        "name": "GetRiotclientappV1CommandLineArgs",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "riotclientapp"
        ],
        "threadSafe": false
    },
    "GET /riotclientapp/v1/isXbgpRunning": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "get if xbgp com server is running",
        "help": "",
        "internal": false,
        "name": "GetRiotclientappV1IsXbgpRunning",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "riotclientapp"
        ],
        "threadSafe": false
    },
    "GET /riotclientapp/v1/secondary-args": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the list of secondary arguments used for launched applications.",
        "help": "",
        "internal": false,
        "name": "GetRiotclientappV1SecondaryArgs",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "riotclientapp"
        ],
        "threadSafe": false
    },
    "GET /rnet-lifecycle/v1/league-region-election": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns a structure containing the current state of League account election for the logged in account.",
        "help": "",
        "internal": false,
        "name": "GetRnetLifecycleV1LeagueRegionElection",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetLifecycleLeagueRegionElectionResource"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "GET /rnet-lifecycle/v1/product-context": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the product context",
        "help": "",
        "internal": false,
        "name": "GetRnetLifecycleV1ProductContext",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetLifecycleProductContext"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "GET /rnet-lifecycle/v1/product-context-phase": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the phase of the product context",
        "help": "",
        "internal": false,
        "name": "GetRnetLifecycleV1ProductContextPhase",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "GET /rnet-lifecycle/v2/ux-command": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current UX command that the default client UX app needs to process",
        "help": "",
        "internal": false,
        "name": "GetRnetLifecycleV2UxCommand",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetLifecycleUxCommand"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "GET /rnet-pft/v1/surveys": {
        "arguments": [],
        "deprecated": true,
        "deprecatedHelp": "Endpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.",
        "description": "Gets the collection of surveys.",
        "help": "",
        "internal": false,
        "name": "GetRnetPftV1Surveys",
        "nameSpace": "",
        "returns": {
            "elementType": "RnetPftSurvey",
            "type": "vector"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-pft"
        ],
        "threadSafe": false
    },
    "GET /rnet-pft/v1/surveys/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": true,
        "deprecatedHelp": "Endpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.",
        "description": "Gets a specific survey by id.",
        "help": "",
        "internal": false,
        "name": "GetRnetPftV1SurveysById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetPftSurvey"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-pft"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v1/background-patching/state": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Return the current background patching state",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV1BackgroundPatchingState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetProductRegistryBackgroundPatchingState"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v1/install-states": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves a map of product and patchline install states",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV1InstallStates",
        "nameSpace": "",
        "returns": {
            "elementType": "RnetProductRegistryProductInstallStateResource",
            "type": "vector"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v1/install-states/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the install state of the specified product and patchline",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV1InstallStatesProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetProductRegistryInstallState"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v1/move-install-states/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the status of a move request for a product, if it exists.",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV1MoveInstallStatesProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetProductRegistryMoveInstallStatus"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/active-updates": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get list of active updates",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4ActiveUpdates",
        "nameSpace": "",
        "returns": {
            "elementType": "RnetProductRegistryProductPatchlineKey",
            "type": "vector"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/available-product-locales/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the list of available locales for the given product and patchline. If the patchline is unavailable (i.e. it is a private product, and you are not logged in), the list of available locales will be returned from the .product_settings.yaml file, if it exists.",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4AvailableProductLocalesProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/install-settings/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the settings for the particular product and patchline, stored in the .product_settings.yaml file.",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/install-settings/products/{productId}/patchlines/{patchlineId}/{+path}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "path",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the settings for the particular product and patchline, stored in the .product_settings.yaml file.",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineIdByPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/patch-states/out-of-date": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get list of out of date patchlines in format of list of { productId, patchlineId }",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4PatchStatesOutOfDate",
        "nameSpace": "",
        "returns": {
            "elementType": "RnetProductRegistryPatchlineInfo",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/patch-states/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get patch status for patchline",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4PatchStatesProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetProductRegistryPatchingResource"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/player-products-state": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current state of player products",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4PlayerProductsState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetProductRegistryPlayerProductsState"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/priority-patch-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks to see if a priority patch is in progress for the given product and patchline. Returns a boolean value.",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4PriorityPatchRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/products": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the list of installable games and configurations in hierarchical format",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4Products",
        "nameSpace": "",
        "returns": {
            "elementType": "RnetProductRegistryProductV4",
            "type": "vector"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns a patchline by id",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetProductRegistryProductPatchlineResourceV4"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-product-registry/v4/public-products-state": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current state of public products",
        "help": "",
        "internal": false,
        "name": "GetRnetProductRegistryV4PublicProductsState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetProductRegistryPublicProductsState"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "GET /rnet-sanitizer/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks the caller ID in use when APIs are called from Swagger",
        "help": "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.",
        "internal": false,
        "name": "GetRnetSanitizerV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetSanitizerPluginCallerId_MockCallerId"
        },
        "subscribable": false,
        "tags": [
            "rnet-sanitizer"
        ],
        "threadSafe": false
    },
    "GET /rnet-sanitizer/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the current status of the sanitizer plugin",
        "help": "",
        "internal": false,
        "name": "GetRnetSanitizerV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetSanitizerSanitizerStatus"
        },
        "subscribable": false,
        "tags": [
            "rnet-sanitizer"
        ],
        "threadSafe": false
    },
    "GET /rnet-self-update/v1/enabled": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get if self-update is enabled.",
        "help": "",
        "internal": false,
        "name": "GetRnetSelfUpdateV1Enabled",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-self-update"
        ],
        "threadSafe": false
    },
    "GET /rnet-self-update/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the status of the self-update plugin.",
        "help": "",
        "internal": false,
        "name": "GetRnetSelfUpdateV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetSelfUpdateStatus"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin rnet-self-update"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/configuration/v3/amr-values-supported": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns a list of supported authentication strategies.",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthConfigurationV3AmrValuesSupported",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthConfigV3AMRValuesSupported"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/configuration/v3/client-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the default client ID for this application. Only available once /v3/ready-state is marked as ready.",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthConfigurationV3ClientId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/configuration/v3/openid-configuration": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the raw RSO openid configuration. This resource will be notified when the configuration is retrieved initially and when it's updated.",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthConfigurationV3OpenidConfiguration",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthConfigV3OpenIdConfiguration"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/configuration/v3/partner-auth-config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns a partner auth config",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthConfigurationV3PartnerAuthConfig",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthConfigV3PartnerAuthConfig"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/configuration/v3/ready-state": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the ready state of the rso-auth plugin",
        "help": "The rso-auth plugin relies on asynchronous fetching of multiple resources. This endpoint reflects whether or not all of those resources have been retrieved.\n\nThis endpoint also supports subscriptions.",
        "internal": false,
        "name": "GetRsoAuthConfigurationV3ReadyState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthConfigV3ReadyState"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/auth-hints/hint": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the current auth hint",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthV1AuthHintsHint",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthHint"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve a player's authorization status.",
        "help": "When the user is logged in, this resource will be populated with data about the player:\n\n* **currentPlatformId** is the player's home platformId\n* **currentAccountId** is the account ID for the player on their home platform.\n* **subject** is the [RFC 0214g]()-defined globally unique identifier for the player.\n* **authenticationType** is the authentication mechanism used to establish the RSO session.\n\nWhile true that the player's `currentPlatformId` will usually match the `region` setting of the client, consuming plugins *must not* make this assumption. Applications *must not* create identifiers for the player by concatenating `currentAccountId` with the client's region setting. consuming plugins *should* use the `subject` to globally recognize players, but may use a concatenation of `currentPlatformId` and `currentAccountId` if subject is infeasible.\n\nIn addition, note that when a player transfers from region to region, the value of that player's `currentPlatformId` and `currentAccountId` will change, but the value of their `subject` will not.\n\n",
        "internal": false,
        "name": "GetRsoAuthV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorization"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/authorization/access-token": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve a player's access token.",
        "help": "If the player has a valid authorization, this API will return the player's access token, as well as their approximate expiration time and scope. This token can be used as the `Bearer` value of an `Authorization` header in order to make requets against services protected by RSO tokens. This token represents permission sets granted to the application by the player.\n\nAccess tokens expire. This plugin will handle refreshing access tokens automatically, but it's up to your plugin to either request an access token for each request, or subscribe to resource updated events for the token.\n\nAccess tokens are intended to be server-authoritative, despite being verifiable client-side as well. Scopes are included as a means for UIs to anticipate which scopes are available.\n\n**Note:** This API returns the token's expiry as seconds since the unix epoch. Do not trust this value locally in the client, as the player's system clock may be incorrect. This value is *deprecated*, and may be removed in a future version.\n\n",
        "internal": false,
        "name": "GetRsoAuthV1AuthorizationAccessToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAccessToken"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/authorization/error": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves any error received from RSO during the last authorization attempt.",
        "help": "If the player has failed to log in via RSO, and the HTTP error code cannot uniquely disambiguate the error encountered, provides more information about the error encountered in the form of the error and errorDescription provided from RSO via OAuth errors.\n",
        "internal": false,
        "name": "GetRsoAuthV1AuthorizationError",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthError"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/authorization/id-token": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve a player's ID token.",
        "help": "If the player has a valid authorization, this API will return the player's id token, as well as their approximate expiration time and a JSON object of the data it includes. This token includes details about the player, signed as a means of trust. These details--called claims--are data about the player that the RSO server deems to be true at the time of authentication. There is no guarantee that these details have not changed in the interim.\n\nId tokens are only created at login, and cannot be refreshed, as the system's trust that the claims remain true decays over time. Expired Id tokens may continue to be used informationally, but *must not* be trusted.\n\n**Note:** This API returns the token's expiry as seconds since the unix epoch. Do not trust this value locally in the client, as the player's system clock may be incorrect. This value is *deprecated*, and may be removed in a future version.\n",
        "internal": false,
        "name": "GetRsoAuthV1AuthorizationIdToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthIdToken"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/authorization/refresh-token": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve a refresh and id token used to rehydrate an authorization on a new SDK launch. This endpoint should NOT be used for any other purpose than to persist an authorization across SDK launches.",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthV1AuthorizationRefreshToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthRefreshTokenRequest"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/authorization/userinfo": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve a player's userinfo.",
        "help": "If the player has a valid access token, and the userinfo has previously been fetched, this API will return the userinfo of the player as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved.",
        "internal": false,
        "name": "GetRsoAuthV1AuthorizationUserinfo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthUserInfo"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/home-base-country": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the players home base country (HBC).",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthV1HomeBaseCountry",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthHomeBaseCountry"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/logout-reason": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns latest logout reason.",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthV1LogoutReason",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthLogoutReason"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the current session state.",
        "help": "Returns a `SessionResponse` with details of the current state of the session. This is a subscribable end-point that will update as the state is updated.\n\nWhen not set, the type of the `SessionResponse` will be set to `unknown_authentication_response`. The return value will also include the current state of the `persistLogin` value.\n",
        "internal": false,
        "name": "GetRsoAuthV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthSessionResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/session/persistence": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the persistence value of this session as a `BindingProperty` which can be serialized to local storage.",
        "help": "Returns a `BindingProperty` representing the serialized cookies that maintains the current session that can later be `PUT` back to restore the session.\n\nThis endpoint is only available to Internal calls (plugin-to-plugin)\n",
        "internal": false,
        "name": "GetRsoAuthV1SessionPersistence",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/status-message": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current RSO status message",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthV1StatusMessage",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthStatusMessage"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v1/userinfo/{client-id}": {
        "arguments": [
            {
                "description": "",
                "name": "client-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve a player's userinfo using the implicit grant mode managed client-id and access-token.",
        "help": "If the client-id has a valid access token managed by the implicit grant mode manager, this API will return the userinfo of the player for the client-id as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved.",
        "internal": false,
        "name": "GetRsoAuthV1UserinfoByClientId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthUserInfo"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-auth/v2/authorizations/{client-id}": {
        "arguments": [
            {
                "description": "",
                "name": "client-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve the authorization for the client-id.",
        "help": "If an authorization request has been created, this API will return the `ImplicitAuthorization` associated with the `client-id`. If an authorization request has not been created, one will need to be created by successfully POSTing to `/rso-auth/v2/authorizations`.\n\nOn success, this API will return type: `authorized` along with the `ImplicitAuthorization` field populated.\n\n",
        "internal": false,
        "name": "GetRsoAuthV2AuthorizationsByClientId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "GET /rso-authenticator/v1/authentication": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current state of authentication.",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthenticatorV1Authentication",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "GET /rso-authenticator/v1/authentication/link/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current status of web linking.",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthenticatorV1AuthenticationLinkStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1WebLinkingStatusResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "GET /rso-authenticator/v1/config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current client config",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthenticatorV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorPluginConfigResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "GET /rso-authenticator/v1/session/info": {
        "arguments": [
            {
                "description": "",
                "name": "suuid",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "cluster",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get additional session information for authentication purposes.",
        "help": "",
        "internal": false,
        "name": "GetRsoAuthenticatorV1SessionInfo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1SessionInfoResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/account-promotion/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current account promotion UI status",
        "help": "",
        "internal": false,
        "name": "GetRsoMobileUiV1AccountPromotionStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiAccountPromotionStatus"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/debug/configurations": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Introspect the current configuration",
        "help": "",
        "internal": false,
        "name": "GetRsoMobileUiV1DebugConfigurations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/delete-account/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the current status of the Account Deletion UI initiated via /rso-mobile-ui/v1/delete-account. Most useful for a client to track whether or not an Account Deletion flow was cancelled or completed.",
        "help": "\n**Response**\n* `status`: the current status of the Delete Account flow. Of type Api::AccountDeletionV1::AccountDeletionUIStatus.\n",
        "internal": false,
        "name": "GetRsoMobileUiV1DeleteAccountStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiAccountDeletionV1AccountDeletionUIStatus"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/eula/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Get the current EULA UI status.\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "GetRsoMobileUiV1EulaStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiEULAUIStatus"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/login/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current login UI status",
        "help": "Endpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "GetRsoMobileUiV1LoginStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiLoginStatus"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/login/strategies": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Returns a list of strategies supported by the rso-mobile-ui plugin for this SDK version and client id\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "GetRsoMobileUiV1LoginStrategies",
        "nameSpace": "",
        "returns": {
            "elementType": "RsoMobileUiLoginStrategyInfo",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/region-election": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Fetches the state of the Region Election UI",
        "help": "Endpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "GetRsoMobileUiV1RegionElection",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiRegionElectionV1RegionElection"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/region-election/eligibility": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check if a player is eligible for region election with UI",
        "help": "Endpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "GetRsoMobileUiV1RegionElectionEligibility",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiRegionElectionV1EligibilityResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/riot-id-prompt/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Get the current Riot ID Prompt UI status.\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "GetRsoMobileUiV1RiotIdPromptStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiRiotIDPromptV1RiotIDPrompt"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v1/vng/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Get the current VNG Registration UI status.\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "GetRsoMobileUiV1VngStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiVngV1RegistrationUIStatus"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v2/eula": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Get the current EULA UI V2 content.\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "GetRsoMobileUiV2Eula",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiEULAUIV2Config"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /rso-mobile-ui/v2/eula/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Get the current EULA UI V2 status.\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "GetRsoMobileUiV2EulaStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiEULAUIV2Status"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "GET /scd/v1/cookies": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the list of cookies",
        "help": "",
        "internal": false,
        "name": "GetScdV1Cookies",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ScdCookies"
        },
        "subscribable": false,
        "tags": [
            "scd"
        ],
        "threadSafe": false
    },
    "GET /scd/v1/enabled": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns whether SCD communication is enabled.",
        "help": "",
        "internal": false,
        "name": "GetScdV1Enabled",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ScdScdEnabled"
        },
        "subscribable": false,
        "tags": [
            "scd"
        ],
        "threadSafe": false
    },
    "GET /scd/v1/enabled-in-config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns whether SCD communication is enabled in confguration.",
        "help": "This provides an indicator that SCD communication may become available if any requests are made and acts as an emergency kill-switch to disable requests to SCD service. Use /scd/v1/enabled to determine if SCD is currently enabled.",
        "internal": false,
        "name": "GetScdV1EnabledInConfig",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "scd"
        ],
        "threadSafe": false
    },
    "GET /social/v1/blocklist": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the consolidated block list combining Riot block list with the platform block lists",
        "help": "",
        "internal": false,
        "name": "GetSocialV1Blocklist",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "SocialBlockList"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /social/v1/blocklist/patch": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "For subscriptions only. On update and delete will notify with patches (changed elements only) rather than the full list. For a simple GET use the non-patch version of this URL.",
        "help": "",
        "internal": false,
        "name": "GetSocialV1BlocklistPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "SocialBlockList"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /social/v1/debug/caller-id/mock-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks the caller ID in use when APIs are called from Swagger",
        "help": "Returns the `productId` and `patchlineId` being passed to APIs in this plugin when called via Swagger.\n\nReturns 404 if a mock caller ID is not in use.",
        "internal": false,
        "name": "GetSocialV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "SocialPluginCallerId_MockCallerId"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /social/v1/friends": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "When subscribed to this endpoint will notify with the entire friend list on every create/update/delete.",
        "help": "Endpoint deleted April 2024.",
        "internal": false,
        "name": "GetSocialV1Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "SocialFriendListV1"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /social/v1/friends/patch": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "For subscriptions only. On update and delete will notify with patches (changed elements only) rather than the full list. For a simple GET use the non-patch version of this URL.",
        "help": "Endpoint deleted April 2024.",
        "internal": false,
        "name": "GetSocialV1FriendsPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "SocialFriendListV1"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /social/v1/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "GetSocialV1Ready",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /social/v2/friends": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "When subscribed to this endpoint will notify with the entire friend list on every create/update/delete.",
        "help": "Endpoint deleted August 2025.",
        "internal": false,
        "name": "GetSocialV2Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "SocialFriendList"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /social/v2/friends/patch": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "For subscriptions only. On update and delete will notify with patches (changed elements only) rather than the full list. For a simple GET use the non-patch version of this URL.",
        "help": "Endpoint deleted August 2025.",
        "internal": false,
        "name": "GetSocialV2FriendsPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "SocialFriendList"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /social/v3/friends": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "When subscribed to this endpoint will notify with the entire friend list on every create/update/delete.",
        "help": "",
        "internal": false,
        "name": "GetSocialV3Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "SocialFriendListV3"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /social/v3/friends/patch": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "For subscriptions only. On update and delete will notify with patches (changed elements only) rather than the full list. For a simple GET use the non-patch version of this URL.",
        "help": "",
        "internal": false,
        "name": "GetSocialV3FriendsPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "SocialFriendListV3"
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "GET /startup-config/v1/registry-config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the registry config for Riot Client on startup",
        "help": "",
        "internal": false,
        "name": "GetStartupConfigV1RegistryConfig",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin startup-config"
        ],
        "threadSafe": false
    },
    "GET /swagger/v1/api-docs": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the API documentation",
        "help": "",
        "internal": false,
        "name": "GetSwaggerV1ApiDocs",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "swagger"
        ],
        "threadSafe": false
    },
    "GET /swagger/v2/swagger.json": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the API documentation",
        "help": "",
        "internal": false,
        "name": "GetSwaggerV2SwaggerJson",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "swagger"
        ],
        "threadSafe": false
    },
    "GET /swagger/v3/openapi.json": {
        "arguments": [
            {
                "description": "",
                "name": "plugins_and_core_only",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the API documentation",
        "help": "",
        "internal": false,
        "name": "GetSwaggerV3OpenapiJson",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "swagger"
        ],
        "threadSafe": false
    },
    "GET /system-info/v1/processes": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns all pids with cpu and memory usage data",
        "help": "",
        "internal": false,
        "name": "GetSystemInfoV1Processes",
        "nameSpace": "",
        "returns": {
            "elementType": "SystemInfoProcessInfo",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin system-info"
        ],
        "threadSafe": false
    },
    "GET /telemetry/v1/application-start-time": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the millisecond UNIX timestamp of when the application was started.",
        "help": "",
        "internal": false,
        "name": "GetTelemetryV1ApplicationStartTime",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint64"
        },
        "subscribable": false,
        "tags": [
            "telemetry"
        ],
        "threadSafe": false
    },
    "GET /tencent-launcher/v1/login-info": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the mSDK credentials from the Tencent Launcher",
        "help": "**Requirements**\nThis should only be used by products launched via the Tencent Launcher.\n\nThis function is disabled unless the following configuration is passedto the SDK at startup:\n* `publisher`: must be set to `tencent`\n* `auth-via-tencent-launcher`: must be set to `true`\n\nRequires ACLSDK.dll to be present. If absent, calling this functionwill return a `501` error code.\n\n\n            **Description**\n            Retrieves the Tencent Launcher LoginInfo (credentials) from the\n            ACLSDK. If logged in, the response will contain the required tokens\n            for RSO auth, or for auth with other Tencent services like Midas.\n\n            This endpoint may be subscribed to, and a notification will be\n            generated when:\n            * `/login` is successfully called, containing the Tencent-specific\n              credentials,\n            * The Tencent Launcher performs a periodic refresh of the credentials.\n\n            **Returns**\n            If `/login` has not yet successfully been called, a `404` error\n            code is returned.\n\n            If the login information is available, a structure is returned\n            containing the fields:\n            * `openid`\n            * `token`\n            * `channel`\n            * `ext`\n\n            These fields should be treated as opaque.\n        ",
        "internal": false,
        "name": "GetTencentLauncherV1LoginInfo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "TencentLauncherTencentLauncherLoginInfo"
        },
        "subscribable": false,
        "tags": [
            "tencent-launcher"
        ],
        "threadSafe": false
    },
    "GET /tencent-launcher/v1/update-status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets the current update status. This will be no-update-available until ACLSDK tells us that there is an update.",
        "help": "",
        "internal": false,
        "name": "GetTencentLauncherV1UpdateStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "TencentLauncherProductIntegrationAppUpdateStatus"
        },
        "subscribable": false,
        "tags": [
            "tencent-launcher"
        ],
        "threadSafe": false
    },
    "GET /vanguard/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the state of the Vanguard installation.",
        "help": "",
        "internal": false,
        "name": "GetVanguardV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VanguardPluginState"
        },
        "subscribable": true,
        "tags": [
            "Plugins",
            "Plugin vanguard"
        ],
        "threadSafe": false
    },
    "GET /vng/v1/profile/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Fetch a VNG profile of the currently signed in player.",
        "help": "",
        "internal": false,
        "name": "GetVngV1ProfileByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VngV1Profile"
        },
        "subscribable": false,
        "tags": [
            "vng"
        ],
        "threadSafe": false
    },
    "GET /vng/v1/status/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check with VNG if a player must register with the Vietnamese government.",
        "help": "",
        "internal": false,
        "name": "GetVngV1StatusByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VngV1StatusResponse"
        },
        "subscribable": false,
        "tags": [
            "vng"
        ],
        "threadSafe": false
    },
    "GET /vng/v1/status/ready": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Whether VNG status endpoints are ready to handle requests (RSO access token is present)",
        "help": "",
        "internal": false,
        "name": "GetVngV1StatusReady",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "vng"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v1/active-product": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current active product",
        "help": "",
        "internal": false,
        "name": "GetVoiceChatV1ActiveProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v1/audio-properties": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get current audio properties",
        "help": "",
        "internal": false,
        "name": "GetVoiceChatV1AudioProperties",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatAudioPropertiesResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v1/block-list/{providerName}": {
        "arguments": [
            {
                "description": "",
                "name": "providerName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the current Block List of a voice provider. Internal use only",
        "help": "",
        "internal": false,
        "name": "GetVoiceChatV1BlockListByProviderName",
        "nameSpace": "",
        "returns": {
            "elementType": "string",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v1/heartbeat-metrics": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve a set of metrics about the voice chat plugin.",
        "help": "This endpoint retrieves metrics about active sessions and products that are currently using the voice-chat plugin. It is an internal endpoint, intended for use directly by the info-radiator plugin, which manages the heartbeat cadence of the SDK.",
        "internal": false,
        "name": "GetVoiceChatV1HeartbeatMetrics",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatVoiceChatHeartbeatMetrics"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v1/push-to-talk": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get voice chat push to talk configuration status",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "GetVoiceChatV1PushToTalk",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatPushToTalkResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v1/status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the status of the voice-chat plugin to know whether or not to expect if the feature is usable.",
        "help": "\n**Description**\nGet the status of the voice-chat plugin to know whether or not to expect if the feature is usable. Game teams are encouraged to subscribe\nto this endpoint so that the game can behave correctly depending on what the current state of the plugin is. For example, if the status of\nthe plugin is `permissionDenied`, game teams should not attempt to join voice sessions since the player does not have permissions to do so,\npossibly due to behavioural restrictions or parental control settings.\n\n** Returns **\n\nA PluginStatus value representing the current status of the plugin.\n* `PluginStatus` values:\n    * `unknown`: The status of the plugin is currently unknown. This is the default value while the plugin is initializing and its status has yet to be determined.\n    * `awaitingAuth`: The player has not signed in, so the plugin does not have the information required to join a voice session.\n    * `permissionUnknown`: The player has signed in, but the plugin is unable to look up whether or not the player has permission to use voice chat.\n         Attempting to join a voice session will not work until the permission query succeeds.\n    * `permissionDenied`: The player has signed in, but the player does not have permission to use voice chat. Attempting to join a voice session will always\n         return an error and existing sessions will be left.\n    * `ready`: Voice chat is usable and voice sessions can be joined.\n",
        "internal": false,
        "name": "GetVoiceChatV1Status",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatPluginStatus"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v2/devices/capture": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the list of available sound capture devices",
        "help": "",
        "internal": false,
        "name": "GetVoiceChatV2DevicesCapture",
        "nameSpace": "",
        "returns": {
            "elementType": "VoiceChatDeviceResource",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v2/devices/capture/permission": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns true if the user has permission to use the microphone.",
        "help": "Use this endpoint to determine if the user has granted access to the microphone for voice. Returns an enum that indicates if permission is denied/granted, or if permission needs to be obtained through the prompt-for-permission endpoint.",
        "internal": false,
        "name": "GetVoiceChatV2DevicesCapturePermission",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatCaptureDevicePermissionStatus"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v2/devices/render": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the list of available sound render devices",
        "help": "",
        "internal": false,
        "name": "GetVoiceChatV2DevicesRender",
        "nameSpace": "",
        "returns": {
            "elementType": "VoiceChatDeviceResource",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v2/push-to-talk/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get voice chat push to talk configuration status",
        "help": "Endpoint is deprecated and will be deleted. Please check /voice-chat/v3/push-to-talk/",
        "internal": false,
        "name": "GetVoiceChatV2PushToTalkByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatPushToTalkResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v2/sessions": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the list of all current voice sessions",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "GetVoiceChatV2Sessions",
        "nameSpace": "",
        "returns": {
            "elementType": "VoiceChatSessionResource",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v2/sessions/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get session details",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "GetVoiceChatV2SessionsById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatSessionResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v2/sessions/{sessionId}/participants/{participantId}": {
        "arguments": [
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "participantId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get participant details",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "GetVoiceChatV2SessionsBySessionIdParticipantsByParticipantId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatParticipantResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v2/settings": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get current voice chat settings",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "GetVoiceChatV2Settings",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatSettingsResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v2/state": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the connection state",
        "help": "Always returns true. SDK inititalize/authenticate/authorize is now done when creating/joining a voice session/channel\n\nEndpoint deleted October 2020.",
        "internal": false,
        "name": "GetVoiceChatV2State",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatStateResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v3/push-to-talk/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get voice chat push to talk configuration state",
        "help": "Returns a structure with the current PTT state\nisEnabled: Is push-to-talk enabled?\nmode: (Exclusive) PTT channels will automatically mute other channels when they are enabled \n      (Inclusive) Other channels will stay open when PTT channels are enabled \npttSessions: Array with current PTT channel`s transmit states\n\tsessionId: channel identifier\n\ttransmit: defines if the channel should have voice channel open or not",
        "internal": false,
        "name": "GetVoiceChatV3PushToTalkByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatPushToTalkResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v3/push-to-talk/{productName}/{sessionId}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get voice chat push to talk transmit state for a specific channel",
        "help": "Returns a structure with the current PTT state of a specific channelor returns an error if there is no PTT channel with the provided id\n\tsessionId: channel identifier\n\ttransmit: defines if the channel should have voice channel open or not",
        "internal": false,
        "name": "GetVoiceChatV3PushToTalkByProductNameBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatPushToTalkTransmitState"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v3/sessions/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the list of all current voice sessions",
        "help": "Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}",
        "internal": false,
        "name": "GetVoiceChatV3SessionsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "VoiceChatSessionResource",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v3/sessions/{productName}/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get session details",
        "help": "Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}/{id}",
        "internal": false,
        "name": "GetVoiceChatV3SessionsByProductNameById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatSessionResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v3/sessions/{productName}/{sessionId}/participants/{participantId}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "participantId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get participant details",
        "help": "Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}",
        "internal": false,
        "name": "GetVoiceChatV3SessionsByProductNameBySessionIdParticipantsByParticipantId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatParticipantResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v3/settings/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get current voice chat settings",
        "help": "",
        "internal": false,
        "name": "GetVoiceChatV3SettingsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatSettingsResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v4/sessions/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the list of all current voice sessions",
        "help": "",
        "internal": false,
        "name": "GetVoiceChatV4SessionsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "VoiceChatSessionResource",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v4/sessions/{productName}/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get session details",
        "help": "",
        "internal": false,
        "name": "GetVoiceChatV4SessionsByProductNameById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatSessionResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /voice-chat/v4/sessions/{productName}/{sessionId}/participants/{participantId}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "participantId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get participant details",
        "help": "",
        "internal": false,
        "name": "GetVoiceChatV4SessionsByProductNameBySessionIdParticipantsByParticipantId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatParticipantResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "GET /xbox-account/v1/authorization-consent": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authorization consent status for Xbox",
        "help": "",
        "internal": false,
        "name": "GetXboxAccountV1AuthorizationConsent",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "GET /xbox-account/v1/config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve Xbox Account plugin config",
        "help": "",
        "internal": false,
        "name": "GetXboxAccountV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "XboxAccountConfig"
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "GET /xbox-account/v1/modern-gamertag": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get player's Xbox Modern Gamertag (modern / modern suffix / unique modern)",
        "help": "",
        "internal": false,
        "name": "GetXboxAccountV1ModernGamertag",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "XboxAccountModernGamertag"
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "GET /xbox-account/v1/player-nickname": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get player's Xbox Classic Gamertag (with checking authorization consent)",
        "help": "",
        "internal": false,
        "name": "GetXboxAccountV1PlayerNickname",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "GET /xbox-account/v1/player-nickname-without-consent": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get player's Xbox Classic Gamertag (without checking authorization consent)",
        "help": "",
        "internal": false,
        "name": "GetXboxAccountV1PlayerNicknameWithoutConsent",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "GET /xbox-account/v1/user": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve Xbox Live profile info",
        "help": "",
        "internal": false,
        "name": "GetXboxAccountV1User",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "XboxAccountUser"
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "GET /xbox-account/v2/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets current Xbox authorization status",
        "help": "",
        "internal": false,
        "name": "GetXboxAccountV2Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "XboxAccountV2AuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "Help": {
        "arguments": [
            {
                "description": "Name of the function or type to describe",
                "name": "target",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "Format for returned information",
                "name": "format",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "RemotingHelpFormat"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns information on available functions and types",
        "help": "With no arguments, returns a list of all available functions and types along with a short description. If a function or type is specified, returns detailed information about it.",
        "internal": false,
        "name": "Help",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "builtin"
        ],
        "threadSafe": true
    },
    "PATCH /chat/v1/settings": {
        "arguments": [
            {
                "description": "",
                "name": "settings",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the account settings related to chat, partial update using only given fields",
        "help": "",
        "internal": false,
        "name": "PatchChatV1Settings",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PATCH /rnet-pft/v1/surveys/{survey-id}/questions/{question-id}": {
        "arguments": [
            {
                "description": "",
                "name": "survey-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "question-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "answer",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": true,
        "deprecatedHelp": "Endpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.",
        "description": "Updates the specified question response.",
        "help": "",
        "internal": false,
        "name": "PatchRnetPftV1SurveysBySurveyIdQuestionsByQuestionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-pft"
        ],
        "threadSafe": false
    },
    "PATCH /rso-auth/v2/authorizations/{client-id}": {
        "arguments": [
            {
                "description": "",
                "name": "client-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "authorizationUpdateRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthAuthorizationUpdateRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Updates an existing authorization for a client and requests a new authorization.",
        "help": "If an existing authorization exists for this client ID, it will update the request with any values provided and request a fresh authorization.\n\nWhen PATCHing a request to update an existing authorization, the body may optionally include an array of `scope`s to be included for the authorization. Likewise, an array of `trustLevels` can be set to set the level at which the authorization state is trusted.\n\nThis API returns type: `needs_authentication` if the client requires authentication before an authorization can be presented, or type: `needs_reauthorization` if the client requires reauthentication before a new authorization can be presented, or type: `authorized` along with the `ImplicitAuthorization` field populated.\n\n",
        "internal": false,
        "name": "PatchRsoAuthV2AuthorizationsByClientId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /agent/v1/connection-info": {
        "arguments": [
            {
                "description": "",
                "name": "info",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ConnectionInfo"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Method for the agent to inform Foundation about how to connect",
        "help": "",
        "internal": false,
        "name": "PostAgentV1ConnectionInfo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "POST /agent/v1/requests/create-uri-handler": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "UriHandlerRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create URI handler under Registry to launch from riotclient:// uri",
        "help": "",
        "internal": false,
        "name": "PostAgentV1RequestsCreateUriHandler",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "POST /agent/v1/requests/prepare-directory-permissions": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PreparePermissionsRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Prepare permissions on a collection of directories for use by all users",
        "help": "",
        "internal": false,
        "name": "PostAgentV1RequestsPrepareDirectoryPermissions",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "POST /agent/v1/requests/prepare-permissions": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PreparePermissionsRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Prepare permissions on a collection of paths for use by all users",
        "help": "",
        "internal": false,
        "name": "PostAgentV1RequestsPreparePermissions",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "POST /agent/v1/requests/register-watch-path": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RegisterWatchPathRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[Mac] Register a watch path, which the agent will check for existence",
        "help": "",
        "internal": false,
        "name": "PostAgentV1RequestsRegisterWatchPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "POST /agent/v1/requests/third-party-dependency": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ThirdPartyDependencyRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Queue a third party dependency for install",
        "help": "",
        "internal": false,
        "name": "PostAgentV1RequestsThirdPartyDependency",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ThirdPartyDependencyStatus"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "POST /agent/v1/session": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Start the agent",
        "help": "",
        "internal": false,
        "name": "PostAgentV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin agent"
        ],
        "threadSafe": false
    },
    "POST /anti-addiction/v1/products/{productId}/anti-addiction-state": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "antiAddictionState",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "AntiAddictionAntiAddictionState"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Test API for triggering anti-addiction state for testing purposes",
        "help": "",
        "internal": false,
        "name": "PostAntiAddictionV1ProductsByProductIdAntiAddictionState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "anti-addiction"
        ],
        "threadSafe": false
    },
    "POST /apple-account/v1/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "AppleAccountAppleAuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create authorization from the Sign In with Apple Account",
        "help": "",
        "internal": false,
        "name": "PostAppleAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "apple-account"
        ],
        "threadSafe": false
    },
    "POST /chat/v1/debug": {
        "arguments": [
            {
                "description": "",
                "name": "config",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatDebugConfig"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "set debug config",
        "help": "",
        "internal": false,
        "name": "PostChatV1Debug",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v1/debug/finalize/initialize": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "debug finalize and initialize",
        "help": "",
        "internal": false,
        "name": "PostChatV1DebugFinalizeInitialize",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v1/resume": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Resume operations, connect to the chat service, and perform other operations specified on suspend",
        "help": "",
        "internal": false,
        "name": "PostChatV1Resume",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v1/session/connect": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "force to chat to connect & allow reconnects",
        "help": "",
        "internal": false,
        "name": "PostChatV1SessionConnect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v1/session/debug/terminate/{product}": {
        "arguments": [
            {
                "description": "",
                "name": "product",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate termination of a product to the chat plugin",
        "help": "",
        "internal": false,
        "name": "PostChatV1SessionDebugTerminateByProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v1/session/disconnect": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "force chat to disconnect & disallow reconnects",
        "help": "",
        "internal": false,
        "name": "PostChatV1SessionDisconnect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v1/session/platform": {
        "arguments": [
            {
                "description": "",
                "name": "update",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatSessionPlatform"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the chat session's League of Legends platform id",
        "help": "",
        "internal": false,
        "name": "PostChatV1SessionPlatform",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v1/social": {
        "arguments": [
            {
                "description": "",
                "name": "product",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatSocialDataReq"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get game/product social data for building the friend list UI",
        "help": "",
        "internal": false,
        "name": "PostChatV1Social",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatSocialData"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v1/suspend": {
        "arguments": [
            {
                "description": "",
                "name": "config",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatSessionSuspendConfig"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Suspend operations, disconnect from the chat service, and disallow reconnects",
        "help": "",
        "internal": false,
        "name": "PostChatV1Suspend",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v2/session/connect": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "force to chat to connect & allow reconnects",
        "help": "",
        "internal": false,
        "name": "PostChatV2SessionConnect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v2/session/debug/terminate/{product}": {
        "arguments": [
            {
                "description": "",
                "name": "product",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate termination of a product to the chat plugin",
        "help": "",
        "internal": false,
        "name": "PostChatV2SessionDebugTerminateByProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v2/session/disconnect": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "force chat to disconnect & disallow reconnects",
        "help": "",
        "internal": false,
        "name": "PostChatV2SessionDisconnect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v2/session/platform": {
        "arguments": [
            {
                "description": "",
                "name": "update",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatSessionPlatform"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the chat session's League of Legends platform id",
        "help": "",
        "internal": false,
        "name": "PostChatV2SessionPlatform",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v3/blocked": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatBlockPid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Block a player",
        "help": "Endpoint deleted August 2021; Please use '/chat/v4/blocked'.",
        "internal": false,
        "name": "PostChatV3Blocked",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v3/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendRequestAdd"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Add friend request / invite friend",
        "help": "Endpoint deleted July 2021; Please use '/chat/v6/friendrequests'.",
        "internal": false,
        "name": "PostChatV3Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v3/groups": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "group",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendGroupCreate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create a friend group",
        "help": "**Data:**\n\n```\n{\n\"name\":  \"[new group name]\"\n}\n```\nRequirements to create a friend group:\n\n1. name can't be empty --> error 400\n2. name can't happen to be the default group \"**Default\" --> error 403\n3. name can't happen to be a meta group, neither \"OFFLINE\" nor \"MOBILE\" --> error 403\n4. name can't already be the name of another group --> error 409\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/groups'.",
        "internal": false,
        "name": "PostChatV3Groups",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v3/me/debug-jwt": {
        "arguments": [
            {
                "description": "",
                "name": "gamePresence",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatDebugChatGamePresence"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate updating a game presence with jwt (server authoritative info)",
        "help": "",
        "internal": false,
        "name": "PostChatV3MeDebugJwt",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v4/blocked": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatBlockPid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Block a player",
        "help": "",
        "internal": false,
        "name": "PostChatV4Blocked",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v4/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendRequestAdd"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Add friend request / invite friend",
        "help": "Endpoint deleted August 2023; Please use '/chat/v6/friendrequests'.",
        "internal": false,
        "name": "PostChatV4Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatFriendRequestList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v4/groups": {
        "arguments": [
            {
                "description": "",
                "name": "group",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendGroupCreate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create a friend group",
        "help": "**Data:**\n\n```\n{\n\"name\":  \"[new group name]\"\n}\n```\nRequirements to create a friend group:\n\n1. name can't be empty --> error 400\n2. name can't happen to be the default group \"**Default\" --> error 403\n3. name can't happen to be a meta group, neither \"OFFLINE\" nor \"MOBILE\" --> error 403\n4. name can't already be the name of another group --> error 409\n",
        "internal": false,
        "name": "PostChatV4Groups",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v5/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "convo",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoJoin"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create or join a conversation",
        "help": "Endpoint deleted July 2021; Please use '/chat/v7/conversations'. It supports federated chat better.",
        "internal": false,
        "name": "PostChatV5Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v5/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendRequestPost"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Add friend request / invite friend",
        "help": "Endpoint deleted August 2021; Please use '/chat/v6/friendrequests'.",
        "internal": false,
        "name": "PostChatV5Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatFriendRequestListPuuid"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v5/messages": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "message",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatMessagePost"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Send a new chat message to a room or individual",
        "help": "**Sending A Message**\nA conversation id (cid) can be a MUC cid or for peer to peer messages, a player id (pid) can be used as a cid.\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //cid is the conversation id passed as a path argument\n```\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"[chat, groupchat, dm]\"\n}\n```\nAdditional notes:\n\n* type - used to specify the type of message (inferred from conversation type if left blank)\n  * chat: for P2P messages with friends\n  * groupchat: for group messages within a group chat\n  * dm: for Direct Messages with somebody in a group chat with you, or with a friend\n\nAs players post messages to a conversation, chat notifies on REST in this order:\n\n* /chat/v3/conversations/\n  * with updated data:  \"unread_count\" and the last message ID in the conversation\n* /chat/v3/conversations/{cid}/messages\n  * a list of new messages for the conversation (earliest first, latest last, but many times just one new message)\n\n**Direct Messages (private messages within a group chat)**\n\nPrivate messages between players that are not friends are possible, and this messaging is always tied to a JWT authenticated group chat (MUC) that both players are a part of. The MUC they are a part of has its own conversation-id (cid) and the private conversation between participants includes that cid in its derived cid.  For example if players \"Brad\" and \"Sue\" are both in MUC \"lobby01@league.pvp.net\" and Brad sends a direct message to Sue, then his client will...\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //where cid = \"lobby01@league.pvp.net/Sue\"\n```\nNOTE: all {cid} values should be URL encoded, so the example cid when sent url encoded is \"lobby01%40league.pvp.net%2FSue\"\n\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"dm\"\n}      \n```\nAdditional notes:\n\n* The conversation object (and child objects like messages) from Brad's perspective will be at: /chat/v3/conversations/lobby01%40league.pvp.net%2FSue\n* The conversation from Sue's perspective will be at:  /chat/v3/conversations/lobby01%40league.pvp.net%2FBrad\n* All operations (GET participants, GET messages, POST messages, etc) are the same as regular conversations\n* for direct messaging, the conversation \"type\" and the message \"type\" will always be \"dm\" \n\n\nEndpoint deleted August 2021; Please use 'chat/v6/messages'.",
        "internal": false,
        "name": "PostChatV5Messages",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatMessageList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v6/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "convo",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoJoinFederated"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create or join a conversation",
        "help": "Endpoint deleted August 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "PostChatV6Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatUIStateConversationList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v6/conversations/read": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoCid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Mark conversation as read",
        "help": "Endpoint deleted August 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "PostChatV6ConversationsRead",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v6/friendrequests": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendRequestPost"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Add friend request / invite friend",
        "help": "",
        "internal": false,
        "name": "PostChatV6Friendrequests",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatFriendRequestListPuuid"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v6/messages": {
        "arguments": [
            {
                "description": "",
                "name": "message",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatMessagePost"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Send a new chat message to a room or individual",
        "help": "**Sending A Message**\nA conversation id (cid) can be a MUC cid or for peer to peer messages, a player id (pid) can be used as a cid.\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //cid is the conversation id passed as a path argument\n```\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"[chat, groupchat, dm]\"\n}\n```\nAdditional notes:\n\n* type - used to specify the type of message (inferred from conversation type if left blank)\n  * chat: for P2P messages with friends\n  * groupchat: for group messages within a group chat\n  * dm: for Direct Messages with somebody in a group chat with you, or with a friend\n\nAs players post messages to a conversation, chat notifies on REST in this order:\n\n* /chat/v3/conversations/\n  * with updated data:  \"unread_count\" and the last message ID in the conversation\n* /chat/v3/conversations/{cid}/messages\n  * a list of new messages for the conversation (earliest first, latest last, but many times just one new message)\n\n**Direct Messages (private messages within a group chat)**\n\nPrivate messages between players that are not friends are possible, and this messaging is always tied to a JWT authenticated group chat (MUC) that both players are a part of. The MUC they are a part of has its own conversation-id (cid) and the private conversation between participants includes that cid in its derived cid.  For example if players \"Brad\" and \"Sue\" are both in MUC \"lobby01@league.pvp.net\" and Brad sends a direct message to Sue, then his client will...\n\n```\nPOST /chat/v3/conversations/{cid}/messages      //where cid = \"lobby01@league.pvp.net/Sue\"\n```\nNOTE: all {cid} values should be URL encoded, so the example cid when sent url encoded is \"lobby01%40league.pvp.net%2FSue\"\n\nData:\n\n```\n{\n  \"message\": \"[message]\" //the text to send\n  \"type\"   : \"dm\"\n}      \n```\nAdditional notes:\n\n* The conversation object (and child objects like messages) from Brad's perspective will be at: /chat/v3/conversations/lobby01%40league.pvp.net%2FSue\n* The conversation from Sue's perspective will be at:  /chat/v3/conversations/lobby01%40league.pvp.net%2FBrad\n* All operations (GET participants, GET messages, POST messages, etc) are the same as regular conversations\n* for direct messaging, the conversation \"type\" and the message \"type\" will always be \"dm\" \n",
        "internal": false,
        "name": "PostChatV6Messages",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatChatMessageList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v7/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "convo",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoJoinFederated"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create or join a conversation",
        "help": "",
        "internal": false,
        "name": "PostChatV7Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ChatUIStateConversationList"
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chat/v7/conversations/read": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoCid"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Mark conversation as read",
        "help": "",
        "internal": false,
        "name": "PostChatV7ConversationsRead",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/{id}/whispers/{puuid}/messages": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "chatbox_message",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatboxChatboxMessagePost"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Send a whisper to the specified puuid of the specified chatbox",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1ByIdWhispersByPuuidMessages",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/chatboxes/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "chatbox_instance_resource",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatboxChatboxChannelResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1ChatboxesById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/chatboxes/{id}/broadcasts/{channelName}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "channelName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "chatbox_message",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatboxChatboxMessagePost"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Send a broadcast to the specified chatbox",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1ChatboxesByIdBroadcastsByChannelName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/chatboxes/{id}/channels": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "chatbox_channel_resource",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatboxChatboxChannelResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1ChatboxesByIdChannels",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/chatboxes/{id}/messages": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "chatbox_message",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatboxChatboxMessagePost"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Send a message to the default channel of the specified chatbox",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1ChatboxesByIdMessages",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/chatboxes/{id}/messages/channels/{channelName}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "channelName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "chatbox_message",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatboxChatboxMessagePost"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Send a message to the specified channel of the specified chatbox",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1ChatboxesByIdMessagesChannelsByChannelName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/chatboxes/{id}/messages/read": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Mark all messages as read in a specified chatbox",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1ChatboxesByIdMessagesRead",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/chatboxes/{id}/messages/whispers/{puuid}/read": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "puuid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Mark messages as read for a specified whisper channel in a specified chatbox",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1ChatboxesByIdMessagesWhispersByPuuidRead",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/chatboxes/{id}/no-channel": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1ChatboxesByIdNoChannel",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /chatbox/v1/global-broadcast": {
        "arguments": [
            {
                "description": "",
                "name": "chatboxMessage",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatboxChatboxMessagePost"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sends a broadcast for all chatboxes and default channels",
        "help": "",
        "internal": false,
        "name": "PostChatboxV1GlobalBroadcast",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chatbox"
        ],
        "threadSafe": false
    },
    "POST /commerce/v1/store/purchase": {
        "arguments": [
            {
                "description": "",
                "name": "PurchaseRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "CommerceV1PurchaseRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Initiate the purchase of a store product.",
        "help": "\n**Description**\nThis endpoint initiates a store product purchase request and returns a status response.\n",
        "internal": false,
        "name": "PostCommerceV1StorePurchase",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "CommerceV1PurchaseResponse"
        },
        "subscribable": false,
        "tags": [
            "commerce"
        ],
        "threadSafe": false
    },
    "POST /cookie-jar/v1/cookies": {
        "arguments": [
            {
                "description": "",
                "name": "cookies",
                "optional": false,
                "type": {
                    "elementType": "CookieJarCookie",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set new cookies.",
        "help": "",
        "internal": false,
        "name": "PostCookieJarV1Cookies",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "cookie-jar"
        ],
        "threadSafe": false
    },
    "POST /data-store/v1/install-settings/{+path}": {
        "arguments": [
            {
                "description": "",
                "name": "path",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set the data for the specified key from the install settings.",
        "help": "",
        "internal": false,
        "name": "PostDataStoreV1InstallSettingsByPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "data-store"
        ],
        "threadSafe": false
    },
    "POST /data-store/v1/product-settings/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set all settings for the specified product.",
        "help": "",
        "internal": false,
        "name": "PostDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "data-store"
        ],
        "threadSafe": false
    },
    "POST /data-store/v1/product-settings/products/{productId}/patchlines/{patchlineId}/{+path}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "path",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set the data for the specified key from the settings for the specified product.",
        "help": "",
        "internal": false,
        "name": "PostDataStoreV1ProductSettingsProductsByProductIdPatchlinesByPatchlineIdByPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "data-store"
        ],
        "threadSafe": false
    },
    "POST /data-store/v1/reload-product-settings/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Reload all settings for the specified product.",
        "help": "",
        "internal": false,
        "name": "PostDataStoreV1ReloadProductSettingsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "data-store"
        ],
        "threadSafe": false
    },
    "POST /eula/v1/agreement/content/retry": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Attempt to asynchronously fetch the current version EULA content if it previously failed to load.",
        "help": "",
        "internal": false,
        "name": "PostEulaV1AgreementContentRetry",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "POST /eula/v1/debug/agreement/force-requirement": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Forces client into requiring acceptance",
        "help": "",
        "internal": false,
        "name": "PostEulaV1DebugAgreementForceRequirement",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "POST /facebook-account/v1/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "FacebookAccountFacebookAuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create authorization from the Sign In with Facebook Account",
        "help": "",
        "internal": false,
        "name": "PostFacebookAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "facebook-account"
        ],
        "threadSafe": false
    },
    "POST /first-party-fulfillment/v1/fulfill": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Initiate a fulfillment attempt",
        "help": "\n**Description**\n\nThis API will check if the user has made any purchases on the first party store and will attempt to fulfill them.\nThis should typically be called when the game is launched or resumed.\n\n** Request Arguments **\n\nRequest Body:\n* `firstPartyAuthToken`: Authentication token for the first party platform required to perform fulfillment.\n    * On Nintendo Switch, provide the NSA ID token if available. Otherwise, RiotGamesApi will fetch the NSA ID token itself.\n    * On Playstation 4 and Playstation 5, provide an NP auth code that includes the \"psn:s2s\" and \"openid\" scopes.\n    * On Xbox, no token is required and an empty string can be provided.\n* `fulfillmentId`: UUID that identifies a unique fulfillment attempt.\n* `fulfillmentReason`: The reason why the fulfillment attempt was made. Possible options are listed below:\n    * `GameLaunched`: Fulfillment was initiated because a purchase may have occurred while the game was not running.\n    * `GameReturnedToForeground`: Fulfillment was initiated because a purchase may have occurred while the game was in the background.\n    * `PurchaseCompleted`: Fulfillment was initiated because a purchase was completed (likely from the in-game store).\n    * `Other`: DO NOT USE without consulting the SDK Features team first. This is a fallback reason for why a fulfillment was initiated if it\n      is not covered by any of the existing reasons. However, you should only use this if SDK Features is not able to add a reason that covers\n      your use case before you need to use it and once SDK Features does add the reason, you are expected to update to using it as soon as it\n      has been made available in the next SDK release.\n\n** Returns **\n\nResponse Body:\n* `FulfillmentResponse` Object:\n    * `fulfillmentRequired`: Bool indicating whether the player owned anything that needed to be fulfilled.\n    * `fulfilledItems`: An `ItemFulfillmentSuccessInfo` object\n        * `itemId`: A string that identifies the item that was fulfilled.\n        * `quantity`: An integer representing how many of the item was fulfilled.\n    * `unfulfilledItems`: An `ItemFulfillmentFailureInfo` object\n        * `itemId`: A string that identifies the item that was unable to be fulfilled.\n        * `quantity`: An integer representing how many of the item could not be fulfilled.\n        * `reason`: A string describing why the item could not be fulfilled.\n\n** Error Codes **\n* Possible error codes: 400, 403, 412, 417, 500, 502, 504, 512\n* Error codes fall into the following categories: recoverable, retriable, and hard failure.\n* Recoverable errors (400, 403, 412) will succeed when the root issue is resolved such as \"412 Unable to perform fulfillment because plugin is not enabled.\" - in this case the plugin needs to be enabled in the config\n* Retriable errors (500, 502, 503, 504) may succeed if another attempt is made later. This could include issues such as the network temporarily being down.\n* Hard failure (417, 512) errors are unlikely to succeed when retried and the root issue is unexpected. An example of this would be the first party libraries failing to load.\n* For more details on error codes and how to handle them please see https://platform.riotgames.com/riotgamesapi-sdk/features/first-party-fulfillment/integrating-first-party-fulfillment\n\n",
        "internal": false,
        "name": "PostFirstPartyFulfillmentV1Fulfill",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "FirstPartyFulfillmentFirstPartyFulfillmentFulfillmentResponse"
        },
        "subscribable": false,
        "tags": [
            "first-party-fulfillment"
        ],
        "threadSafe": false
    },
    "POST /ga-warning/v1/debug/simulate-warning/{category}": {
        "arguments": [
            {
                "description": "",
                "name": "category",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate sending a game-agnostic warning message to this player with a specific category. Endpoint not available in public builds.",
        "help": "\n**Data**\n\n* `category`: The category is a key used to create the localized message for the player. As an example, `INAPPROPRIATE_TEXT` is the category\nsent when a player was flagged for inappropriate chat. If the category is unrecognized, a fallback message will be used.\n",
        "internal": false,
        "name": "PostGaWarningV1DebugSimulateWarningByCategory",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-warning"
        ],
        "threadSafe": false
    },
    "POST /game-session/v1/sessions": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "GameSessionGameSessionV1GameSessionRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Creates a request for GAPS login queue, bypass queue, and session services.",
        "help": "Creates a GAPS Session Funnel request that interacts with 1-3 services based on the supplied options. Requests are handle asynchronously and reported by through changes to the `state` property of this resource. Use the generated `id` field as a path parameter to subscribe to this specific funnel instance.\n\nPlayers exiting the funnel will exit with one of several known states indicated by the `message` field of theis resource. Session heartbeats and queue polling are handled transparently, as are server-side kicks.",
        "internal": false,
        "name": "PostGameSessionV1Sessions",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "GameSessionGameSessionV1GameSessionId"
        },
        "subscribable": false,
        "tags": [
            "game-session"
        ],
        "threadSafe": false
    },
    "POST /gamecenter-account/v1/authorization": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create authorization for the Game Center Account",
        "help": "",
        "internal": false,
        "name": "PostGamecenterAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "gamecenter-account"
        ],
        "threadSafe": false
    },
    "POST /google-account/v1/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationRequestParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "GoogleAccountGoogleAuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Start an authorization request with Google.",
        "help": "",
        "internal": false,
        "name": "PostGoogleAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "google-account"
        ],
        "threadSafe": false
    },
    "POST /info-radiator/v1/time-sample/{phaseName}/end": {
        "arguments": [
            {
                "description": "",
                "name": "phaseName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Mark the end of the time phase sample and send an event to Analytics Platform conforming to the `riotclient__TimeSample__v4` schema.",
        "help": "The time-sample APIs are deprecated and no longer do useful work. They will be removed in March 2024.",
        "internal": false,
        "name": "PostInfoRadiatorV1TimeSampleByPhaseNameEnd",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "info-radiator"
        ],
        "threadSafe": false
    },
    "POST /info-radiator/v1/time-sample/{phaseName}/start": {
        "arguments": [
            {
                "description": "",
                "name": "phaseName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Track the start time for a time phase sample of interest. Call `/info-radiator/v1/time-sample/{phase}/end` to mark the end of the sample.",
        "help": "The time-sample APIs are deprecated and no longer do useful work. They will be removed in March 2024.",
        "internal": false,
        "name": "PostInfoRadiatorV1TimeSampleByPhaseNameStart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "info-radiator"
        ],
        "threadSafe": false
    },
    "POST /integration-test/v1/external-request/async": {
        "arguments": [
            {
                "description": "",
                "name": "ExternalRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "IntegrationTestV1ExternalRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[FOR TESTING ONLY] Test endpoint to dispatch an external HTTP asynchronous request",
        "help": "",
        "internal": false,
        "name": "PostIntegrationTestV1ExternalRequestAsync",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "IntegrationTestV1ExternalResponse"
        },
        "subscribable": false,
        "tags": [
            "integration-test"
        ],
        "threadSafe": false
    },
    "POST /integration-test/v1/external-request/sync": {
        "arguments": [
            {
                "description": "",
                "name": "ExternalRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "IntegrationTestV1ExternalRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[FOR TESTING ONLY] Test endpoint to dispatch an external HTTP synchronous request",
        "help": "",
        "internal": false,
        "name": "PostIntegrationTestV1ExternalRequestSync",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "IntegrationTestV1ExternalResponse"
        },
        "subscribable": false,
        "tags": [
            "integration-test"
        ],
        "threadSafe": false
    },
    "POST /jwt-authenticator/v1/issue": {
        "arguments": [
            {
                "description": "",
                "name": "payload",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "JwtAuthenticatorJWTIssueResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Issue a JWT using the provided JWKS service URL and the provided payload",
        "help": "",
        "internal": false,
        "name": "PostJwtAuthenticatorV1Issue",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "jwt-authenticator"
        ],
        "threadSafe": false
    },
    "POST /jwt-authenticator/v1/verify": {
        "arguments": [
            {
                "description": "",
                "name": "JWT",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "JwtAuthenticatorJWTVerifyResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Verify a JWT",
        "help": "",
        "internal": false,
        "name": "PostJwtAuthenticatorV1Verify",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "jwt-authenticator"
        ],
        "threadSafe": false
    },
    "POST /loyalty/v1/debug/set-loyalty-resource/{pcbId}": {
        "arguments": [
            {
                "description": "",
                "name": "pcbId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "int64"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets a loyalty resource for testing purposes - DEBUG ONLY",
        "help": "",
        "internal": false,
        "name": "PostLoyaltyV1DebugSetLoyaltyResourceByPcbId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "LoyaltyV2PCBangInfo"
        },
        "subscribable": false,
        "tags": [
            "loyalty"
        ],
        "threadSafe": false
    },
    "POST /mailbox/v1/mail": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "MailboxRequestMailParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns a list of player's mail.",
        "help": "\n**Description**\n\nThis API allows for retrieving mail and the product ID is inferred.\n\nRequired request parameters:\n```\nincludedStates : A list of message states, like READ or ACKNOWLEDGED, that should be included.\n```\n",
        "internal": false,
        "name": "PostMailboxV1Mail",
        "nameSpace": "",
        "returns": {
            "elementType": "MailboxMail",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "POST /mailbox/v1/mail/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "MailboxRequestMailParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Fetch mail for a player on behalf of a product.",
        "help": "\n**Description**\n\nThis API allows for retrieving mail. Here, the productId is required. This is an internal API to be used by other plugins.\n\nRequired arguments:\n```\nproductId: A standard [product identifier](https://gh.riotgames.com/shared-static-data/rpg/tree/master/products)\n```\n",
        "internal": false,
        "name": "PostMailboxV1MailByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "MailboxMail",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "POST /mobile-product-registry/v1/build-number/{build}": {
        "arguments": [
            {
                "description": "",
                "name": "build",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "int64"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[Deprecated] Set the current game build number.",
        "help": "This is deprecated. Please specify build_number via system-settings on app initialization.",
        "internal": false,
        "name": "PostMobileProductRegistryV1BuildNumberByBuild",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "mobile-product-registry"
        ],
        "threadSafe": false
    },
    "POST /mobile-push/v1/filter": {
        "arguments": [
            {
                "description": "",
                "name": "filter",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "MobilePushMobilePushCreateFilter"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create a filter for specific conversation to skip sending push notifications",
        "help": "",
        "internal": false,
        "name": "PostMobilePushV1Filter",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "mobile-push"
        ],
        "threadSafe": false
    },
    "POST /mobile-push/v1/register": {
        "arguments": [
            {
                "description": "",
                "name": "registration",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "MobilePushMobilePushRegisterPush"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Indicate that a product wants to register with push functionality",
        "help": "",
        "internal": false,
        "name": "PostMobilePushV1Register",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "mobile-push"
        ],
        "threadSafe": false
    },
    "POST /mobile-push/v1/subscribe-topic": {
        "arguments": [
            {
                "description": "",
                "name": "topic",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "MobilePushMobilePushSubscribeToTopic"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Subscribe to a specific topic",
        "help": "",
        "internal": false,
        "name": "PostMobilePushV1SubscribeTopic",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "mobile-push"
        ],
        "threadSafe": false
    },
    "POST /native-ux/v1/show-alert": {
        "arguments": [
            {
                "description": "Title ID to show in the modal. Unused on Mac",
                "name": "title",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "Message ID to show in the modal.",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Display a native message to the player.",
        "help": "",
        "internal": false,
        "name": "PostNativeUxV1ShowAlert",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "native-ux"
        ],
        "threadSafe": false
    },
    "POST /nintendo-account/v1/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "NintendoAccountAuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets authorization from the Nintendo Account of the player logged in the Nintendo Switch",
        "help": "",
        "internal": false,
        "name": "PostNintendoAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "NintendoAccountAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "nintendo-account"
        ],
        "threadSafe": false
    },
    "POST /nintendo-account/v1/network-service-accountid-token": {
        "arguments": [
            {
                "description": "",
                "name": "GetNetworkServiceAccountParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "NintendoAccountGetNetworkServiceAccountParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get the Network Service Account ID (NSA) for the player logged in the Nintendo Switch",
        "help": "",
        "internal": false,
        "name": "PostNintendoAccountV1NetworkServiceAccountidToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "NintendoAccountNetworkServiceAccountResponse"
        },
        "subscribable": false,
        "tags": [
            "nintendo-account"
        ],
        "threadSafe": false
    },
    "POST /nintendo-account/v2/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "NintendoAccountV2AuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets authorization from the Nintendo Account of the player logged in the Nintendo or start authentication with native browser",
        "help": "",
        "internal": false,
        "name": "PostNintendoAccountV2Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "nintendo-account"
        ],
        "threadSafe": false
    },
    "POST /okta-account/v1/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "OktaAccountOktaAuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create authorization using Okta Account",
        "help": "",
        "internal": false,
        "name": "PostOktaAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "okta-account"
        ],
        "threadSafe": false
    },
    "POST /pay-mobile/v1/purchase/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "orderId",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Purchase the given product",
        "help": "",
        "internal": false,
        "name": "PostPayMobileV1PurchaseByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint32"
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "POST /pay-mobile/v1/request-external-products": {
        "arguments": [
            {
                "description": "",
                "name": "externalProductIds",
                "optional": false,
                "type": {
                    "elementType": "string",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve available products for purchase from set of product ids",
        "help": "",
        "internal": false,
        "name": "PostPayMobileV1RequestExternalProducts",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint32"
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "POST /pay-mobile/v1/request-price-point-products": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve available price point products for purchase",
        "help": "",
        "internal": false,
        "name": "PostPayMobileV1RequestPricePointProducts",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint32"
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "POST /pay-mobile/v1/request-products": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve available products for purchase",
        "help": "",
        "internal": false,
        "name": "PostPayMobileV1RequestProducts",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint32"
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "POST /pay-mobile/v1/session/resume": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Resume the purchase session",
        "help": "",
        "internal": false,
        "name": "PostPayMobileV1SessionResume",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint32"
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "POST /pay-mobile/v2/purchase/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "orderId",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Purchase the given product",
        "help": "",
        "internal": false,
        "name": "PostPayMobileV2PurchaseByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "POST /pay-mobile/v2/request-external-products": {
        "arguments": [
            {
                "description": "",
                "name": "externalProductIds",
                "optional": false,
                "type": {
                    "elementType": "string",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve available products for purchase from set of product ids",
        "help": "",
        "internal": false,
        "name": "PostPayMobileV2RequestExternalProducts",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "POST /pay-mobile/v2/request-price-point-products": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve available price point products for purchase",
        "help": "",
        "internal": false,
        "name": "PostPayMobileV2RequestPricePointProducts",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "POST /pay-mobile/v2/session/resume": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Resume the purchase session",
        "help": "",
        "internal": false,
        "name": "PostPayMobileV2SessionResume",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "pay-mobile"
        ],
        "threadSafe": false
    },
    "POST /payments/v1/debug/countryCodeOverride/{countryCode}": {
        "arguments": [
            {
                "description": "",
                "name": "countryCode",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "DEBUG: Sets country code override used during call to `GET /payments/v2/products`",
        "help": "",
        "internal": false,
        "name": "PostPaymentsV1DebugCountryCodeOverrideByCountryCode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "payments"
        ],
        "threadSafe": false
    },
    "POST /payments/v1/initialize-purchase": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Begin the purchase flow, receiving the URL to the payment service to start the purchase.",
        "help": "",
        "internal": false,
        "name": "PostPaymentsV1InitializePurchase",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PaymentsInitializedPurchase"
        },
        "subscribable": false,
        "tags": [
            "payments"
        ],
        "threadSafe": false
    },
    "POST /payments/v2/initialize-preselected-purchase": {
        "arguments": [
            {
                "description": "",
                "name": "initializePreselectedPurchaseRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PaymentsInitializePreselectedPurchaseRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Begin the purchase flow with a preselected price point id, receiving the URL to the payment service to start the purchase.",
        "help": "\n**Description**\n\nBegin the purchase flow with a preselected price point ID, receiving the URL to the payment service to start the purchase\n\n** Request Arguments **\n\nRequest Body:\n* `InitializePreselectedPurchaseRequest` Object:\n    * `pricePointId`: A price point ID that will preselected.\n    *\n** Returns **\n\nResponse Body:\n* `InitializedPurchase` Object:\n    * `purchaseStartUrl`: The URL to the payments service to start the purchase flow in an embedded or external web browser.\n    *\n",
        "internal": false,
        "name": "PostPaymentsV2InitializePreselectedPurchase",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PaymentsInitializedPurchase"
        },
        "subscribable": false,
        "tags": [
            "payments"
        ],
        "threadSafe": false
    },
    "POST /payments/v2/initialize-purchase": {
        "arguments": [
            {
                "description": "",
                "name": "initializePurchaseRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PaymentsInitializePurchaseRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Begin the purchase flow, receiving the URL to the payment service to start the purchase.",
        "help": "\n**Description**\n\nBegin the purchase flow, receiving the URL to the payment service to start the purchase.\n\n** Request Arguments **\n\nRequest Body:\n* `InitializePurchaseRequest` Object:\n    * `minVirtualAmount`: [Optional] Minimal amount of virtual currency required to purchase a given content.\n\n** Returns **\n\nResponse Body:\n* `InitializedPurchase` Object:\n    * `purchaseStartUrl`: The URL to the payments service to start the purchase flow in an embedded or external web browser.\n\n",
        "internal": false,
        "name": "PostPaymentsV2InitializePurchase",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PaymentsInitializedPurchase"
        },
        "subscribable": false,
        "tags": [
            "payments"
        ],
        "threadSafe": false
    },
    "POST /permissions/v1/request": {
        "arguments": [
            {
                "description": "",
                "name": "PermissionsRequestParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PermissionsPermissionsRequestParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "[WIP] Request current permission status of a given permission permissionId.",
        "help": "",
        "internal": false,
        "name": "PostPermissionsV1Request",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PermissionsPermissionsResponse"
        },
        "subscribable": false,
        "tags": [
            "permissions"
        ],
        "threadSafe": false
    },
    "POST /permissions/v1/user-communication-permissions": {
        "arguments": [
            {
                "description": "",
                "name": "users",
                "optional": false,
                "type": {
                    "elementType": "PermissionsRiotUser",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Queries whether the current user has the necessary permissions to communicate with a given set of users and if not, why that is the case",
        "help": "",
        "internal": false,
        "name": "PostPermissionsV1UserCommunicationPermissions",
        "nameSpace": "",
        "returns": {
            "elementType": "PermissionsUserCommunicationPermissions",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "permissions"
        ],
        "threadSafe": false
    },
    "POST /permissions/v2/user-communication-permissions": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PermissionsUserCommunicationPermissionsV2Request"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Queries whether the current user has the necessary permissions to communicate with a given set of users and if not, why that is the case.",
        "help": "",
        "internal": false,
        "name": "PostPermissionsV2UserCommunicationPermissions",
        "nameSpace": "",
        "returns": {
            "elementType": "PermissionsUserCommunicationPermissions",
            "type": "vector"
        },
        "subscribable": false,
        "tags": [
            "permissions"
        ],
        "threadSafe": false
    },
    "POST /platform-notifications/v1/broadcast": {
        "arguments": [
            {
                "description": "",
                "name": "message",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlatformNotificationsBroadcastRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Send a broadcast message to all subscribers.",
        "help": "",
        "internal": false,
        "name": "PostPlatformNotificationsV1Broadcast",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-notifications"
        ],
        "threadSafe": false
    },
    "POST /platform-social/v1/debug/mock-block-list": {
        "arguments": [
            {
                "description": "",
                "name": "puuid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "DO NOT USE, this endpoint is intended for use internally by the SDK team to help test the platform social plugin",
        "help": "",
        "internal": false,
        "name": "PostPlatformSocialV1DebugMockBlockList",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "POST /platform-social/v1/platform-profile/{consoleId}": {
        "arguments": [
            {
                "description": "",
                "name": "consoleId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Displays the specified player's platform profile.",
        "help": "",
        "internal": false,
        "name": "PostPlatformSocialV1PlatformProfileByConsoleId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "POST /platform-social/v1/player/platform-username": {
        "arguments": [
            {
                "description": "",
                "name": "uids",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlatformSocialConsolueUsernameForIdRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns platform IDs (Online ID for PS5, Modern Gamertag + Classic Gamertag for Xbox) for console IDs (XUIDs for Xbox, Account IDs for PS5)",
        "help": "",
        "internal": false,
        "name": "PostPlatformSocialV1PlayerPlatformUsername",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlatformSocialConsoleUsernameForIdResponse"
        },
        "subscribable": false,
        "tags": [
            "platform-social"
        ],
        "threadSafe": false
    },
    "POST /platform-ui/v1/fre": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Enable FRE",
        "help": "",
        "internal": false,
        "name": "PostPlatformUiV1Fre",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "POST /platform-ui/v1/fre/telemetry": {
        "arguments": [
            {
                "description": "",
                "name": "TelemetryEvent",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlatformUiPlatformUIMobileFREEventData"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Send telemetry event",
        "help": "",
        "internal": false,
        "name": "PostPlatformUiV1FreTelemetry",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "POST /platform-ui/v1/riot-id-change": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Trigger Riot ID Change UI",
        "help": "",
        "internal": false,
        "name": "PostPlatformUiV1RiotIdChange",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "POST /platform-ui/v1/vng-edit-profile": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Trigger VNG Edit Profile UI",
        "help": "",
        "internal": false,
        "name": "PostPlatformUiV1VngEditProfile",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-ui"
        ],
        "threadSafe": false
    },
    "POST /player-account/aliases/purchase/v1/aliases": {
        "arguments": [
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountAliasesV1PurchaseAliasInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets a new purchased set of aliases for the player.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountAliasesPurchaseV1Aliases",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountAliasesV1StatusResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/aliases/purchase/v1/eligibility": {
        "arguments": [
            {
                "description": "",
                "name": "purchaseSource",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountAliasesV1PurchaseEligibilityInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check if a player is eligible for a free or paid name change.",
        "help": "Please use /player-account/aliases/v1/eligibility if you only need information about free alias changes.",
        "internal": false,
        "name": "PostPlayerAccountAliasesPurchaseV1Eligibility",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountAliasesV1PurchaseEligibilityResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/aliases/v1/aliases": {
        "arguments": [
            {
                "description": "",
                "name": "names",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountAliasesV1AliasInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets a new set of aliases for the player.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountAliasesV1Aliases",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountAliasesV1StatusResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/aliases/v1/eligibility": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check if a player is eligible for a free name change.",
        "help": "Use /player-account/aliases/purchase/v1/eligibility if you also need information about paid alias changes.",
        "internal": false,
        "name": "PostPlayerAccountAliasesV1Eligibility",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountEligibilityResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/aliases/v1/generate-tagline": {
        "arguments": [
            {
                "description": "",
                "name": "gameName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountGenerateTaglineInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns a random tagline that is valid for the player. This endpoint also verifies free eligibility. If you need validation in the Paid Name Change context use the V2 endpoint instead.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountAliasesV1GenerateTagline",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountGenerateTaglineResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/aliases/v1/validity": {
        "arguments": [
            {
                "description": "",
                "name": "names",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountAliasesV1AliasInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks a name for validity without saving it. This endpoint also verifies free eligibility. If you need validation in the Paid Name Change context use the V2 endpoint instead.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountAliasesV1Validity",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountAliasesV1StatusResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/aliases/v2/generate-tagline": {
        "arguments": [
            {
                "description": "",
                "name": "gameName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountAliasesV2GenerateTaglineInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns a random tagline that is valid for the player. This endpoint will not check eligiblity like V1 does.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountAliasesV2GenerateTagline",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountAliasesV2GenerateTaglineResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/aliases/v2/validity": {
        "arguments": [
            {
                "description": "",
                "name": "alias",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountAliasesV2ValidityAliasInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks a name for validity without saving it. This endpoint will not check eligiblity like V1 does.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountAliasesV2Validity",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountAliasesV2ValidityAliasResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/login-history/v1/history": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountV1RequestedPlayersLoginLocationHistory"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "This endpoint returns login location history records for each requested PUUID. \nThe most recent login location is the record provided. \nIf the caching mechanism is enabled, it will retrieve as many PUUIDs' records as possible from the cache, \nfor the remaining PUUIDs, it will call the service to retrieve appropriate records. \nIn the opposite case, all records will be retrieved from the service. \n\n",
        "internal": false,
        "name": "PostPlayerAccountLoginHistoryV1History",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountV1PlayersLoginLocationHistory"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/lookup/v1/consoleids-for-puuids": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountLookupV1ConsoleIdsForPuuidsRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the Console IDs for each PUUID provided",
        "help": "\n**Description**\nRetrieves the Console IDs for each PUUID provided\n\n** Request Arguments **\n\nRequest Body Object:\nPuuidsToConsoleIdsRequest Object:\n    \"puuids\" - A list of PUUIDs to retrieve Console IDs for\n\nPuuidsToConsoleIdsResponse Body:\n    \"response\" - A list of PuuidToConsoleIdResponseElements\n\nPuuidAndProvider:\n    \"puuid\" - The PUUID associated with the Console ID\n    \"provider\" - A String for the account provider (platform, e.g. \"xbox\")\n    \"providerId\" - A String ID for the provider (e.g. as \"123abc123\")\n    \"error\" - A String containing any errors (e.g. \"No matching account found.\")\n\n",
        "internal": false,
        "name": "PostPlayerAccountLookupV1ConsoleidsForPuuids",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountLookupV1ConsoleIdsForPuuidsResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/lookup/v1/namesets-for-puuid": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountLookupV1NamesetsForPuuidRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the namesets for a single PUUID",
        "help": "\n**Description**\nRetrieves the namesets for the PUUID provided.\nA Nameset contains the player's name on the given platform.\nExample: SwitchNameset.name would be the Switch username associated with the player's PUUID\n\n** Body Argument **\n\n\"NamesetsForPuuidRequest\"\n* \"puuid\" - PUUID (String)\n\nResponse Body:\nNamesetsForPuuidResponse:\n* \"puuid\" - PUUID (String)\n* \"providerId\" - player's provider id\n* \"switchNameset\" - A SwitchNameset\n* \"playstationNameset\" - A PlaystationNameset\n* \"xboxNameset\" - An XboxNameset\n* \"gnt\" - A Riot ID\n* \"error\" - A String containing any errors\n\nSwitchNameset:\n    \"name\" - A String with the Switch name associated to the requested PUUID\n\nPlaystationNameset:\n    \"name\" - A String with the Playstation name associated to the requested PUUID\n\nXboxNameset:\n    \"name\" - A String with the Xbox name associated to the requested PUUID\n\nRiot ID:\n    \"gameName\" - The player's Game Name (String)\n    \"tagLine\" - The player's Tag Line (String)\n\n",
        "internal": false,
        "name": "PostPlayerAccountLookupV1NamesetsForPuuid",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountLookupV1NamesetsForPuuidResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/lookup/v1/namesets-for-puuids": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountLookupV1NamesetsForPuuidsRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the namesets for each PUUID provided",
        "help": "\n**Description**\nRetrieves the namesets for each PUUID provided.\nA Nameset contains the player's name on the given platform.\nExample: SwitchNameset.name would be the Switch username associated with the player's PUUID\n\n** Request Arguments **\n\nRequest Body Object:\nNamesetsForPuuidsRequest Object:\n    \"puuids\" - A list of PUUIDs to retrieve namesets for\n\nNamesetsForPuuidsResponse Body:\n    \"namesets\" - A list of NamesetsResponseElements\n\nNamesetsResponseElement:\n* \"puuid\" - PUUID (String)\n* \"providerId\" - player's provider id\n* \"switchNameset\" - A SwitchNameset\n* \"playstationNameset\" - A PlaystationNameset\n* \"xboxNameset\" - An XboxNameset\n* \"gnt\" - A Riot ID\n* \"error\" - A String containing any errors\n\nSwitchNameset:\n    \"name\" - A String with the Switch name associated to the requested PUUID\n\nPlaystationNameset:\n    \"name\" - A String with the Playstation name associated to the requested PUUID\n\nXboxNameset:\n    \"name\" - A String with the Xbox name associated to the requested PUUID\n\nRiot ID:\n    \"gameName\" - The player's Game Name (String)\n    \"tagLine\" - The player's Tag Line (String)\n\n",
        "internal": false,
        "name": "PostPlayerAccountLookupV1NamesetsForPuuids",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountLookupV1NamesetsForPuuidsResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/lookup/v1/puuids-for-consoleids": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountLookupV1PuuidsForConsoleIdsRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the PUUIDs for each Console ID provided",
        "help": "\n**Description**\nRetrieves the PUUIDs for each Console ID provided.\n\n** Request Arguments **\n\nRequest Body Object:\nConsoleIdsToPuuidsRequest Object:\n    \"consoleIds\" - A list of console IDs to retrieve PUUIDs for\n    \"environment\" - A String name for the platform environment (e.g. \"sp-int\")\n\nConsoleIdsToPuuidsResponse Body:\n    \"response\" - A list of ConsoleIdToPuuidResponseElements\n\nPuuidAndProvider:\n    \"puuid\" - The PUUID associated with the Console ID\n    \"provider\" - A String for the account provider (platform, e.g. \"xbox\")\n    \"providerId\" - A String ID for the provider (e.g. as \"123abc123\")\n    \"error\" - A String containing any errors (e.g. \"No matching account found.\")\n\n",
        "internal": false,
        "name": "PostPlayerAccountLookupV1PuuidsForConsoleids",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountLookupV1PuuidsForConsoleIdsResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/lookup/v2/namesets-for-puuid": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountLookupV2NamesetsForPuuidRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the namesets for a single PUUID",
        "help": "\n**Description**\nRetrieves the namesets for the PUUID provided.\nA Nameset contains the player's name on the given platform.\nExample: SwitchNameset.name would be the Switch username associated with the player's PUUID\n\n** Body Argument **\n\n\"NamesetsForPuuidRequest\"\n* \"puuid\" - PUUID (String)\n\nResponse Body:\nNamesetsForPuuidResponse:\n* \"puuid\" - PUUID (String)\n* \"providerId\" - player's provider id\n* \"error\" - A String containing any errors\n* \"alias\" - A Riot ID\n* \"switchNameset\" - A SwitchNameset\n* \"xboxNameset\" - An XboxNameset\n* \"playstationNameset\" - A PlaystationNameset\n\nSwitchNameset:\n    \"nickname\" - A String with the Switch name associated to the requested PUUID\n\nPlaystationNameset:\n    \"onlineId\" - A String with the Playstation name associated to the requested PUUID\n\nXboxNameset:\n    \"classicGamertag\" - A String with the Xbox classic name associated to the requested PUUID\n    \"modernGamertag\" - A String with the Xbox modern name associated to the requested PUUID\n    \"modernSuffix\" - A String with the Xbox modern name suffix associated to the requested PUUID\n\nRiot ID:\n    \"gameName\" - The player's Game Name (String)\n    \"tagLine\" - The player's Tag Line (String)\n\n",
        "internal": false,
        "name": "PostPlayerAccountLookupV2NamesetsForPuuid",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountLookupV2NamesetsForPuuidResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/lookup/v2/namesets-for-puuids": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountLookupV2NamesetsForPuuidsRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the namesets for each PUUID provided",
        "help": "\n**Description**\nRetrieves the namesets for each PUUID provided.\nA Nameset contains the player's name on the given platform.\nExample: SwitchNameset.name would be the Switch username associated with the player's PUUID\n\n** Request Arguments **\n\nRequest Body Object:\nNamesetsForPuuidsRequest Object:\n    \"puuids\" - A list of PUUIDs to retrieve namesets for\n\nNamesetsForPuuidsResponse Body:\n    \"namesets\" - A list of NamesetsResponseElements\n\nNamesetsResponseElement:\n* \"puuid\" - PUUID (String)\n* \"providerId\" - player's provider id\n* \"error\" - A String containing any errors\n* \"alias\" - A Riot ID\n* \"switchNameset\" - A SwitchNameset\n* \"xboxNameset\" - An XboxNameset\n* \"playstationNameset\" - A PlaystationNameset\n\nSwitchNameset:\n    \"nickname\" - A String with the Switch name associated to the requested PUUID\n\nPlaystationNameset:\n    \"onlineId\" - A String with the Playstation name associated to the requested PUUID\n\nXboxNameset:\n    \"classicGamertag\" - A String with the Xbox classic name associated to the requested PUUID\n    \"modernGamertag\" - A String with the Xbox modern name associated to the requested PUUID\n    \"modernSuffix\" - A String with the Xbox modern name suffix associated to the requested PUUID\n\nRiot ID:\n    \"gameName\" - The player's Game Name (String)\n    \"tagLine\" - The player's Tag Line (String)\n\n",
        "internal": false,
        "name": "PostPlayerAccountLookupV2NamesetsForPuuids",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountLookupV2NamesetsForPuuidsResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/mfa/v1/factor/{factor}/verify": {
        "arguments": [
            {
                "description": "",
                "name": "factor",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "verifyRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountMfaV1VerifyFactorRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Verify the provided auth factor with the given otp",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountMfaV1FactorByFactorVerify",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountMfaV1VerifyFactorResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/promotion/v1/eligibility": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check if a player is eligible for promotion.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountPromotionV1Eligibility",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountPromotionV1EligibilityCheckResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/promotion/v1/promotion": {
        "arguments": [
            {
                "description": "",
                "name": "accountDetails",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountPromotionV1AccountDetails"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Promote an account by providing missing details.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountPromotionV1Promotion",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountPromotionV1AccountPromotionResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/regions/v1/region/{regionCode}": {
        "arguments": [
            {
                "description": "",
                "name": "regionCode",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "assign the given region to player account",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountRegionsV1RegionByRegionCode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountRegionsV1RegionAssignmentResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/vng/v1/profile/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "profile",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountVngV1Profile"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create a VNG profile for the currently signed in player.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountVngV1ProfileByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountVngV1SetProfileResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/vng/v1/status/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check with VNG (via the Player Account Service) to see if a player must register with the Vietnamese government.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountVngV1StatusByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountVngV1StatusResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-account/vng/v1/web-url/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "webUrlRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAccountVngV1WebUrlRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create the external web url with the given redirect-uri",
        "help": "",
        "internal": false,
        "name": "PostPlayerAccountVngV1WebUrlByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAccountVngV1WebUrlResponse"
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "POST /player-affinity/affinity/v1/token": {
        "arguments": [
            {
                "description": "",
                "name": "input",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAffinityAffinityV1AffinityInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a player affinity token.",
        "help": "Endpoint deleted November 2021; Please use 'player-affinity/service/v2/token'.",
        "internal": false,
        "name": "PostPlayerAffinityAffinityV1Token",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityToken"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "POST /player-affinity/product/v1/token": {
        "arguments": [
            {
                "description": "",
                "name": "input",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAffinityAffinityV2AffinityProductInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a player product affinity token, save it to the local cache, and notify subscribers. Retrieve from local cache on error.",
        "help": "Endpoint deleted November 2021; Please use 'player-affinity/product/v2/token'.",
        "internal": false,
        "name": "PostPlayerAffinityProductV1Token",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityTokenProduct"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "POST /player-affinity/product/v2/token": {
        "arguments": [
            {
                "description": "",
                "name": "input",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAffinityProductAffinityInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a player product affinity token, save the affinity to the local cache, and notify subscribers.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAffinityProductV2Token",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityProductToken"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "POST /player-affinity/product/v2/token/debug": {
        "arguments": [
            {
                "description": "",
                "name": "input",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAffinityPlayerAffinityProductToken"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "DEBUG: For debugging subscribers. Save a new product affinity token to the local cache and notify subscribers.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAffinityProductV2TokenDebug",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityProductToken"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "POST /player-affinity/service/v1/token": {
        "arguments": [
            {
                "description": "",
                "name": "input",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAffinityAffinityV1AffinityInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a player service affinity token.",
        "help": "Endpoint deleted November 2021; Please use 'player-affinity/service/v2/token'.",
        "internal": false,
        "name": "PostPlayerAffinityServiceV1Token",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityToken"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "POST /player-affinity/service/v2/token": {
        "arguments": [
            {
                "description": "",
                "name": "input",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAffinityServiceAffinityInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Get a player service affinity token and save the affinity to the local cache.",
        "help": "",
        "internal": false,
        "name": "PostPlayerAffinityServiceV2Token",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlayerAffinityPlayerAffinityServiceToken"
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "POST /player-behavior-token/v1/debug/jwt/force-refresh": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Forcibly fetch a new Player Behavior Token. This is intended for debug purposes only, since this will always result in making an external call to the backend service.",
        "help": "",
        "internal": false,
        "name": "PostPlayerBehaviorTokenV1DebugJwtForceRefresh",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "player-behavior-token"
        ],
        "threadSafe": false
    },
    "POST /player-reporting/v1/debug/simulate-bystander-feedback/product/{productId}/category/{category}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "category",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate sending a Bystander Feedback message to this player with a specific transgression category.",
        "help": "\n**Data**\n* `category`: The category is a key used to create the localized message for the player. As an example, `INAPPROPRIATE_TEXT` is the category\nsent when a player was penalized for Inappropriate Text Chat. If the category is unrecognized, no notification will be made.\n",
        "internal": false,
        "name": "PostPlayerReportingV1DebugSimulateBystanderFeedbackProductByProductIdCategoryByCategory",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "POST /player-reporting/v1/debug/simulate-reporter-feedback/product/{productId}/category/{category}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "category",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate sending a Reporter Feedback message to this player with a specific report category.",
        "help": "\n**Data**\n* `category`: The category is a key used to create the localized message for the player. As an example, `CHEATING` is the category\nsent when a player's report for cheating was utilized for penalizing a cheater. If the category is unrecognized, a fallback message will be used.\n",
        "internal": false,
        "name": "PostPlayerReportingV1DebugSimulateReporterFeedbackProductByProductIdCategoryByCategory",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "POST /player-reporting/v1/report": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerReportingPlayerReport"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "\n**Data**\n* `categories`: List of category strings that player is reporting another player for. Different products use different categories.\n* `comment`: Comment associated with this report.\n* `location`: The location where the offending behavior occurred. Example: `in-game`.\n* `match_token`: The reporting player's match token, which is a signed JWT. See Platform docs for more info on match tokens.\n* `offender_puuid`: Whom the player is reporting.\n\n**Response**\n\nThis endpoint can return the following response codes:\n* `204`: Report successfully submitted. Note that in some cases it's intended UX that the submission is a \"success\" even if the report cannot be submitted.\n* `401`: Client is unable to retrieve current player's access token, which is required. Most common when trying to submit a report without having first logged in.\n\n\nEndpoint deleted June 2022; Please use '/player-reporting/v2/report'.",
        "internal": false,
        "name": "PostPlayerReportingV1Report",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "POST /player-reporting/v1/reporter-feedback/ack": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Acknowledges all reporter feedbacks.",
        "help": "",
        "internal": false,
        "name": "PostPlayerReportingV1ReporterFeedbackAck",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "POST /player-reporting/v1/reporter-feedback/ack/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Acknowledges a specific reporter feedback. Returns true if we can find a reporter feedback that matches that ID. Returns false if we can't.",
        "help": "\n**Description**\n\nSee GET reporter feedback endpoint for more info on how to find `{id}`.\n\n**Response**\nThis endpoint will always return a 2xx response code and a boolean response:\n* `true`: Reporter Feedback message with given ID was found and acknowledged.\n* `false`: No Reporter Feedback message with given ID was found.\n",
        "internal": false,
        "name": "PostPlayerReportingV1ReporterFeedbackAckById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "POST /player-reporting/v1/unsigned-report": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerReportingUnsignedPlayerReportV1"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "\nUsed to submit a player report when no signed token is available\n**Data**\n* `offenderId`: The id of the offender. For players this is their puuid.\n* `categories`: List of category strings that player is reporting another player for. Different products use different categories.\n* `location`: The location where the offending behavior occurred. Example: `in-game`.\n* `comment`: Player written comment associated with this report.\n* `conversationContext`: (OPTIONAL) The ID and type of conversation from where the report was filed\n* `unstructuredContext`: (OPTIONAL) An additional payload where game teams can pass in custom payload to CPD for analysis\n",
        "internal": false,
        "name": "PostPlayerReportingV1UnsignedReport",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "POST /player-reporting/v2/report": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerReportingPlayerReportV2"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "\nReporting V2 is similar to v1, but the token can accept more types than just a MATCH_TOKEN to allow support for reporting guilds and potentially other entities in the future.\n**Data**\n* `categories`: List of category strings that player is reporting another player for. Different products use different categories.\n* `comment`: Player written comment associated with this report.\n* `location`: The location where the offending behavior occurred. Example: `in-game`.\n* `tokenType`: The type of information the token contains. Example: `MATCH_TOKEN`, `GUILD_TOKEN`.\n* `token`: A signed JWT with a format matching the tokenType. See Platform docs for more info on token formats and types.\n* `offenderId`: The id of the offender. For players this is their puuid.\n\n**Response**\n\nThis endpoint can return the following response codes:\n* `204`: Report successfully submitted. Note that in some cases it's intended UX that the submission is a \"success\" even if the report cannot be submitted.\n* `401`: Client is unable to retrieve current player's access token, which is required. Most common when trying to submit a report without having first logged in.\n",
        "internal": false,
        "name": "PostPlayerReportingV2Report",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "POST /player-session-lifecycle/v1/session": {
        "arguments": [
            {
                "description": "",
                "name": "InitiateLoginSessionRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerSessionLifecycleInitiateLoginSessionRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create a session used to retrieve common player authentication information.",
        "help": "Automatically attempt to handle RSO processing up to the point the player is logged in.",
        "internal": false,
        "name": "PostPlayerSessionLifecycleV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-session-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /player-session-lifecycle/v1/session/retry": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retry the last known internal action causing the current error state.",
        "help": "",
        "internal": false,
        "name": "PostPlayerSessionLifecycleV1SessionRetry",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-session-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /playstation-account/v1/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlaystationAccountAuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets authorization from the Playstation Network Account of the player logged in the Playstation Network",
        "help": "",
        "internal": false,
        "name": "PostPlaystationAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PlaystationAccountAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "POST /playstation-account/v1/user": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Tries to sign in a player",
        "help": "",
        "internal": false,
        "name": "PostPlaystationAccountV1User",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "POST /playstation-account/v1/user/confirm": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Confirms currently active Playstation profile as the Platform User",
        "help": "",
        "internal": false,
        "name": "PostPlaystationAccountV1UserConfirm",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "POST /playstation-account/v2/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlaystationAccountV2AuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets authorization from the Playstation Account of the player logged in the Playstation or start authentication with native browser",
        "help": "",
        "internal": false,
        "name": "PostPlaystationAccountV2Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "POST /privacy/v1/tracking/request-permission": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Ask the player for permission to track them via telemetry",
        "help": "\n**Response Codes**\n- `200`: Request is in flight, subscribe to `/privacy/v1/tracking` for updates.\n- `405`: Unable to request permission for this platform.\n- `409`: A request for permission is already in flight, or is unnecessary (for instance, if the\n  player has declined tracking.)\n- `500`: The Info.plist file for the app is missing a NSUserTrackingUsageDescription entry. The\n  Apple APIs cannot function without it.\n",
        "internal": false,
        "name": "PostPrivacyV1TrackingRequestPermission",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "privacy"
        ],
        "threadSafe": false
    },
    "POST /process-control/v1/process/client-restarting": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets state that client is restarting - do not quit",
        "help": "",
        "internal": false,
        "name": "PostProcessControlV1ProcessClientRestarting",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "process-control"
        ],
        "threadSafe": false
    },
    "POST /process-control/v1/process/quit": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Quits the application.",
        "help": "",
        "internal": false,
        "name": "PostProcessControlV1ProcessQuit",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "process-control"
        ],
        "threadSafe": false
    },
    "POST /process-control/v1/process/quit/switch-background-mode": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Switch to background mode.",
        "help": "",
        "internal": false,
        "name": "PostProcessControlV1ProcessQuitSwitchBackgroundMode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "process-control"
        ],
        "threadSafe": false
    },
    "POST /process-control/v1/process/restart": {
        "arguments": [
            {
                "description": "",
                "name": "delaySeconds",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "uint32"
                }
            },
            {
                "description": "",
                "name": "restartVersion",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "uint32"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Restarts the application.  Does nothing if there is already a waiting delayed restart.  Optionally accepts specific version to restart.",
        "help": "",
        "internal": false,
        "name": "PostProcessControlV1ProcessRestart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "process-control"
        ],
        "threadSafe": false
    },
    "POST /product-integration/v1/settings-token": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductIntegrationSettingsTokenRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Generate a token that can be used to configure a standalone instance of the SDK running for a future instance of the given product",
        "help": "",
        "internal": false,
        "name": "PostProductIntegrationV1SettingsToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductIntegrationSettingsToken"
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "POST /product-integration/v1/signout": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Requests signout from the Riot Platform for all running products, if permitted for requesting product",
        "help": "",
        "internal": false,
        "name": "PostProductIntegrationV1Signout",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "POST /product-launcher/v1/default-product": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Launches the default product. Returns the session ID.",
        "help": "",
        "internal": false,
        "name": "PostProductLauncherV1DefaultProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "POST /product-launcher/v1/default-product/flash": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Flash the default product",
        "help": "",
        "internal": false,
        "name": "PostProductLauncherV1DefaultProductFlash",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "POST /product-launcher/v1/default-product/focus": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Brings the window of the default product into focus",
        "help": "",
        "internal": false,
        "name": "PostProductLauncherV1DefaultProductFocus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "POST /product-launcher/v1/default-product/minimize": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Minimize the default product",
        "help": "",
        "internal": false,
        "name": "PostProductLauncherV1DefaultProductMinimize",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "POST /product-launcher/v1/launching_from_xbgp": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "set if we are in a xbgp play flow that will display the linking modal",
        "help": "",
        "internal": false,
        "name": "PostProductLauncherV1LaunchingFromXbgp",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "POST /product-launcher/v1/partner-product": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Launches the partner product. Returns the session ID.",
        "help": "",
        "internal": false,
        "name": "PostProductLauncherV1PartnerProduct",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "POST /product-launcher/v1/products/{product-id}/patchlines/{patchline-id}": {
        "arguments": [
            {
                "description": "",
                "name": "product-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchline-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Launch a non-internal product-patchline (e.g. a game). Returns the session ID.",
        "help": "",
        "internal": false,
        "name": "PostProductLauncherV1ProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "POST /product-localization/v1/translate": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductLocalizationTranslateRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "DEPRECATED - Returns a translation string(s) for given keys, if found, in Riot Client's locale",
        "help": "",
        "internal": false,
        "name": "PostProductLocalizationV1Translate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductLocalizationTranslateResponse"
        },
        "subscribable": false,
        "tags": [
            "product-localization"
        ],
        "threadSafe": false
    },
    "POST /product-localization/v2/translate": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductLocalizationTranslateRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns a translation string(s) for given keys, if found",
        "help": "",
        "internal": false,
        "name": "PostProductLocalizationV2Translate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ProductLocalizationTranslateResponse"
        },
        "subscribable": false,
        "tags": [
            "product-localization"
        ],
        "threadSafe": false
    },
    "POST /product-session/v1/host-session": {
        "arguments": [
            {
                "description": "",
                "name": "session",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductSessionSession"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Handles creation of a new session for the 'host app'",
        "help": "A 'host session' may be created for the application that Foundation is running within, used on mobile or console platforms.",
        "internal": false,
        "name": "PostProductSessionV1HostSession",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "POST /product-session/v1/sessions/{session-id}": {
        "arguments": [
            {
                "description": "",
                "name": "session-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "session",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductSessionSession"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Handles creation of a new session.",
        "help": "",
        "internal": false,
        "name": "PostProductSessionV1SessionsBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "POST /product-session/v2/heartbeat": {
        "arguments": [
            {
                "description": "",
                "name": "heartbeat-info",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductSessionHeartbeatInfo"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Periodic heartbeat made by products to update Riot Client with state of gameplay, and to verify connectivity to Riot Client. \n\nSessionId is derived from 'session' HTTP header, or websocket authentication.",
        "help": "* Call this endpoint periodically to verify that Riot Client is still responding.\n\n* Upon your product entering the 'Gameplay' phase, Riot Client will lock patching and prevent updates to products or Riot Client in the case of a crash and restart, prioritizing launching the game promptly.\n\n* Products should include a 'User-Agent' header per RFC-0031d. \n\n* If this call fails and your sessionID is valid, then you can begin the recovery process specified in RFC-1064.\n\n* Riot Client expects this heartbeat from your application on a regular interval (once every 10-60 seconds) in order to make sure your application is not hung or otherwise unresponsive.",
        "internal": false,
        "name": "PostProductSessionV2Heartbeat",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "POST /product-session/v2/heartbeat/{session-id}": {
        "arguments": [
            {
                "description": "",
                "name": "session-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "heartbeat-info",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductSessionHeartbeatInfo"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Periodic heartbeat made by products to update Riot Client with state of gameplay, and to verify connectivity to Riot Client. ",
        "help": "* Call this endpoint periodically to verify that Riot Client is still responding.\n\n* Upon your product entering the 'Gameplay' phase, Riot Client will lock patching and prevent updates to products or Riot Client in the case of a crash and restart, prioritizing launching the game promptly.\n\n* Products should include a 'User-Agent' header per RFC-0031d. \n\n* If this call fails and your sessionID is valid, then you can begin the recovery process specified in RFC-1064.\n\n* Riot Client expects this heartbeat from your application on a regular interval (once every 10-60 seconds) in order to make sure your application is not hung or otherwise unresponsive.",
        "internal": false,
        "name": "PostProductSessionV2HeartbeatBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "POST /product-session/v2/heartbeat-internal/{session-id}": {
        "arguments": [
            {
                "description": "",
                "name": "session-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "heartbeat-info",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductSessionHeartbeatInfo"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Internal endpoint for updating the heartbeat of an existing session.",
        "help": "",
        "internal": false,
        "name": "PostProductSessionV2HeartbeatInternalBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "product-session"
        ],
        "threadSafe": false
    },
    "POST /rc-auth/v1/xbgp/update-login-token": {
        "arguments": [
            {
                "description": "",
                "name": "loginToken",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the player login-token",
        "help": "",
        "internal": false,
        "name": "PostRcAuthV1XbgpUpdateLoginToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rc-auth"
        ],
        "threadSafe": false
    },
    "POST /rc-info-radiator/v1/time-sample/{phaseName}/end": {
        "arguments": [
            {
                "description": "",
                "name": "phaseName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Mark the end of the time phase sample and send an event to Analytics Platform conforming to the `riotclient__TimeSample__v4` schema.",
        "help": "",
        "internal": false,
        "name": "PostRcInfoRadiatorV1TimeSampleByPhaseNameEnd",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rc-info-radiator"
        ],
        "threadSafe": false
    },
    "POST /rc-info-radiator/v1/time-sample/{phaseName}/start": {
        "arguments": [
            {
                "description": "",
                "name": "phaseName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Track the start time for a time phase sample of interest. Call `/info-radiator/v1/time-sample/{phase}/end` to mark the end of the sample.",
        "help": "",
        "internal": false,
        "name": "PostRcInfoRadiatorV1TimeSampleByPhaseNameStart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rc-info-radiator"
        ],
        "threadSafe": false
    },
    "POST /riot-client-app-command/v1/debug/use-local-uri-handler": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets uri handler to use riotclient-local for testing",
        "help": "",
        "internal": true,
        "name": "PostRiotClientAppCommandV1DebugUseLocalUriHandler",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-app-command"
        ],
        "threadSafe": false
    },
    "POST /riot-client-app-command/v1/uri-handler": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Attempts to configure a URI handler for this client, elevating if necessary",
        "help": "",
        "internal": false,
        "name": "PostRiotClientAppCommandV1UriHandler",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-app-command"
        ],
        "threadSafe": false
    },
    "POST /riot-client-lifecycle/v1/hide": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Hide the UX.",
        "help": "",
        "internal": false,
        "name": "PostRiotClientLifecycleV1Hide",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /riot-client-lifecycle/v1/league-region-election": {
        "arguments": [
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RegionLocale"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets League account election information for the current account -- specifically, 'selectedRegions'.",
        "help": "",
        "internal": false,
        "name": "PostRiotClientLifecycleV1LeagueRegionElection",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RegionAssignmentResponse"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /riot-client-lifecycle/v1/quit": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Quit Riot Client. If any games are running show the games-running exit-dialog.",
        "help": "",
        "internal": false,
        "name": "PostRiotClientLifecycleV1Quit",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /riot-client-lifecycle/v1/quit/switch-background-mode": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Quit Riot Client Full mode and switch to the Background mode. If any games are running show the games-running exit-dialog.",
        "help": "",
        "internal": false,
        "name": "PostRiotClientLifecycleV1QuitSwitchBackgroundMode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /riot-client-lifecycle/v1/restart": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Restarts Riot Client. If any games are running show the games-running exit-dialog.",
        "help": "",
        "internal": false,
        "name": "PostRiotClientLifecycleV1Restart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /riot-client-lifecycle/v1/show": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Show the UX.",
        "help": "",
        "internal": false,
        "name": "PostRiotClientLifecycleV1Show",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /riot-friends/v1/friends": {
        "arguments": [
            {
                "description": "",
                "name": "chatFriends",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RiotFriendsChatFriends"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the Riot friends list stored in the plugin",
        "help": "",
        "internal": false,
        "name": "PostRiotFriendsV1Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-friends"
        ],
        "threadSafe": false
    },
    "POST /riot-messaging-service/v1/acknowledge": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RiotMessagingServiceAcknowledgeBody"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "acknowledge RMS message received",
        "help": "",
        "internal": false,
        "name": "PostRiotMessagingServiceV1Acknowledge",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "POST /riot-messaging-service/v1/connect": {
        "arguments": [
            {
                "description": "",
                "name": "idToken",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Schedule a connect request to RMS.",
        "help": "",
        "internal": false,
        "name": "PostRiotMessagingServiceV1Connect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "POST /riot-messaging-service/v1/entitlements": {
        "arguments": [
            {
                "description": "",
                "name": "token",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RiotMessagingServiceEntitlementsToken"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update session entitlements token",
        "help": "",
        "internal": false,
        "name": "PostRiotMessagingServiceV1Entitlements",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "POST /riot-messaging-service/v1/reconnect": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Schedule a reconnect request to RMS. For debug purposes only.",
        "help": "",
        "internal": false,
        "name": "PostRiotMessagingServiceV1Reconnect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "POST /riot-messaging-service/v1/simulate-message": {
        "arguments": [
            {
                "description": "",
                "name": "resource",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "payload",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate an RMS message. For debug purposes only.",
        "help": "",
        "internal": false,
        "name": "PostRiotMessagingServiceV1SimulateMessage",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "POST /riot-messaging-service/v1/switch-servers": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Schedule a switching server request to RMS. For debug purposes only.",
        "help": "",
        "internal": false,
        "name": "PostRiotMessagingServiceV1SwitchServers",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "POST /riot-messaging-service/v1/token/refresh": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Schedule a token refresh request to RMS. For debug purposes only.",
        "help": "",
        "internal": false,
        "name": "PostRiotMessagingServiceV1TokenRefresh",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "POST /riot-messaging-service/v2/simulate-message": {
        "arguments": [
            {
                "description": "",
                "name": "message",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RiotMessagingServiceMessage"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate an RMS message. For debug purposes only.",
        "help": "",
        "internal": false,
        "name": "PostRiotMessagingServiceV2SimulateMessage",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-messaging-service"
        ],
        "threadSafe": false
    },
    "POST /riot-status/v1/debug/set-riotclient-patchline/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns raw JSON service status information for issues affecting multiple games",
        "help": "",
        "internal": false,
        "name": "PostRiotStatusV1DebugSetRiotclientPatchlineByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "riot-status"
        ],
        "threadSafe": false
    },
    "POST /riotclient/affinity": {
        "arguments": [
            {
                "description": "The new affinity to use.",
                "name": "newAffinity",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the current runtime affinity of the application.",
        "help": "",
        "internal": false,
        "name": "PostRiotclientAffinity",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "POST /riotclient/new-args": {
        "arguments": [
            {
                "description": "",
                "name": "args",
                "optional": false,
                "type": {
                    "elementType": "string",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Endpoint for passing in new data.",
        "help": "This endpoint is deprecated, and will be removed June 2022, use direct events instead (e.g. `/player-affinity/shard`.",
        "internal": false,
        "name": "PostRiotclientNewArgs",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "POST /riotclient/set_region_locale": {
        "arguments": [
            {
                "description": "",
                "name": "region",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "locale",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the region and locale.",
        "help": "",
        "internal": false,
        "name": "PostRiotclientSetRegionLocale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "POST /riotclient/show-logs": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Open explorer to log files.",
        "help": "",
        "internal": false,
        "name": "PostRiotclientShowLogs",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "POST /riotclient/show-swagger": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Open swagger in the default browser.",
        "help": "",
        "internal": false,
        "name": "PostRiotclientShowSwagger",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "POST /riotclient/zoom-scale": {
        "arguments": [
            {
                "description": "The new value of the zoom scale.",
                "name": "newZoomScale",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "double"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Handles changing the zoom scale value.",
        "help": "",
        "internal": false,
        "name": "PostRiotclientZoomScale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "POST /riotclientapp/v1/new-args": {
        "arguments": [
            {
                "description": "",
                "name": "args",
                "optional": false,
                "type": {
                    "elementType": "string",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Adds new command line arguments for Riot Client.",
        "help": "",
        "internal": false,
        "name": "PostRiotclientappV1NewArgs",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclientapp"
        ],
        "threadSafe": false
    },
    "POST /rnet-lifecycle/v1/default_product/launch": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Launch the currently configured default product.",
        "help": "",
        "internal": false,
        "name": "PostRnetLifecycleV1DefaultProductLaunch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /rnet-lifecycle/v1/league-region-election": {
        "arguments": [
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "object"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets League account election information for the current account -- specifically, 'selectedRegions'.",
        "help": "",
        "internal": false,
        "name": "PostRnetLifecycleV1LeagueRegionElection",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetLifecycleRegionAssignmentResponse"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "POST /rnet-pft/v1/request-survey": {
        "arguments": [
            {
                "description": "",
                "name": "survey-request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetPftSurveyRequest"
                }
            }
        ],
        "deprecated": true,
        "deprecatedHelp": "Endpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.",
        "description": "Post a game event and see if you get a survey.",
        "help": "",
        "internal": false,
        "name": "PostRnetPftV1RequestSurvey",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetPftSurveyRequestResult"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-pft"
        ],
        "threadSafe": false
    },
    "POST /rnet-pft/v1/surveys/{id}/close": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": true,
        "deprecatedHelp": "Endpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.",
        "description": "Notifies the backend that the player closed the survey before completing it.",
        "help": "",
        "internal": false,
        "name": "PostRnetPftV1SurveysByIdClose",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-pft"
        ],
        "threadSafe": false
    },
    "POST /rnet-pft/v1/surveys/{id}/popout": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": true,
        "deprecatedHelp": "Endpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.",
        "description": "Notifies the backend that the player opened an external survey.",
        "help": "",
        "internal": false,
        "name": "PostRnetPftV1SurveysByIdPopout",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-pft"
        ],
        "threadSafe": false
    },
    "POST /rnet-pft/v1/surveys/{id}/submit": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": true,
        "deprecatedHelp": "Endpoint deleted October 2021; PFT is scheduled for decomm by EOY 2020.",
        "description": "Submits the given survey to the PFT service.",
        "help": "",
        "internal": false,
        "name": "PostRnetPftV1SurveysByIdSubmit",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-pft"
        ],
        "threadSafe": false
    },
    "POST /rnet-product-registry/v1/available-disk-space": {
        "arguments": [
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetProductRegistryAvailableDiskSpaceRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the available disk space at a specified path. Will return the available disk space in bytes. All paths should use '/' as the delimiter",
        "help": "",
        "internal": false,
        "name": "PostRnetProductRegistryV1AvailableDiskSpace",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint64"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "POST /rnet-product-registry/v1/directory-size": {
        "arguments": [
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetProductRegistryDirectorySizeRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves the size of the entire directory of the specified path. Will return the directory size in bytes. All paths should use '/' as the delimiter",
        "help": "",
        "internal": false,
        "name": "PostRnetProductRegistryV1DirectorySize",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "uint64"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "POST /rnet-product-registry/v4/patch-requests/products/{productId}/patchlines/{patchlineId}/cancel-dependencies": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Cancels dependency install and mark the patching as cancelled",
        "help": "",
        "internal": false,
        "name": "PostRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineIdCancelDependencies",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "POST /rnet-product-registry/v4/patch-requests/products/{productId}/patchlines/{patchlineId}/install-dependencies": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Installs dependencies for the specified product/patchline combo.",
        "help": "",
        "internal": false,
        "name": "PostRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineIdInstallDependencies",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "POST /rnet-product-registry/v4/patch-requests/products/{productId}/patchlines/{patchlineId}/retry-dependencies": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retry failed dependency installs, if any.",
        "help": "",
        "internal": false,
        "name": "PostRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineIdRetryDependencies",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "POST /rnet-sanitizer/v1/containsSanitized": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetSanitizerContainsSanitizedRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Determine if the request has a sanitized word",
        "help": "",
        "internal": false,
        "name": "PostRnetSanitizerV1ContainsSanitized",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetSanitizerContainsSanitizedResponse"
        },
        "subscribable": false,
        "tags": [
            "rnet-sanitizer"
        ],
        "threadSafe": false
    },
    "POST /rnet-sanitizer/v1/sanitize": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetSanitizerSanitizeRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sanitize the input text(s)",
        "help": "",
        "internal": false,
        "name": "PostRnetSanitizerV1Sanitize",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetSanitizerSanitizeResponse"
        },
        "subscribable": false,
        "tags": [
            "rnet-sanitizer"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/auth-hints/hint": {
        "arguments": [
            {
                "description": "",
                "name": "hintRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthAuthHint"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Creates a test auth hint",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthV1AuthHintsHint",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/authorization/gas": {
        "arguments": [
            {
                "description": "",
                "name": "creds",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthRSOPlayerCredentials"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Log the user in with username, password and platformId.",
        "help": "Executes OAuth2's [resource owner password credentials grant](https://tools.ietf.org/html/rfc6749#section-4.3) flow in order to log the user in. If successful, it will alter trigger a modification of the `/rso-auth/v1/authorization` resource and relevant sub-resources with details of the user's session. This flow is stateless, and does not create a session with the RSO server.\n\nIn circumstances where additional data is required to log the user in (such as captcha or multi-factor authentication, this method will simply fail.\n\n",
        "internal": false,
        "name": "PostRsoAuthV1AuthorizationGas",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorization"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/authorization/refresh": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Force a refresh of the RSO tokens.",
        "help": "Executes OAuth2's [refresh flow](https://tools.ietf.org/html/rfc6749#section-6) in order to refresh an expired authorization. This API is for debugging and testing only; the RSO plugin handles refresh automatically.\n\nRefreshes authorization for all clients that have currently active authorizations, the return value is from the main client RiotClient bootstraps with (the one from config)",
        "internal": false,
        "name": "PostRsoAuthV1AuthorizationRefresh",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorization"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/authorization/simulate-error": {
        "arguments": [
            {
                "description": "",
                "name": "errorCode",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set simulated error response code for logging in",
        "help": "Sets a simulated error response code to be used next time `POST`:`/rso-auth/v1/authorization/gas` occurs. Then resets to normal functionality",
        "internal": false,
        "name": "PostRsoAuthV1AuthorizationSimulateError",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/authorization/token-exchange": {
        "arguments": [
            {
                "description": "",
                "name": "loginToken",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthLoginToken"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Creates an authorization from an authentication session using a login token from rso-authenticator.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthV1AuthorizationTokenExchange",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/authorization/userinfo": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieve a player's userinfo from RSO.",
        "help": "If the player has a valid access token, this API will invoke RSO's userinfo endpoint to retrieve the userinfo of the player as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved.",
        "internal": false,
        "name": "PostRsoAuthV1AuthorizationUserinfo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthUserInfo"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/device-id": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retrieves device ID configuration.",
        "help": "Provides client-side settings for collecting device ID information, including a session id, collector server and merchant id. The session ID is programmatically generated by the plugin at startup.\n\nThis endpoint is not available until the OpenID configuration is retrieved.\n\nEndpoint to be deleted March 2025; This endpoint has no function anymore.",
        "internal": false,
        "name": "PostRsoAuthV1DeviceId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthDeviceId"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/key/request": {
        "arguments": [
            {
                "description": "",
                "name": "authorizationKeyRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthAuthorizationKeyRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Generates an authorization key from an existing authorization. An 'authorization key' is a code and code verifier encoded together.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthV1KeyRequest",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorizationKey"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/status-message": {
        "arguments": [
            {
                "description": "",
                "name": "statusMessage",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthStatusMessage"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the RSO auth status",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthV1StatusMessage",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/userinfo/{client-id}": {
        "arguments": [
            {
                "description": "",
                "name": "client-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Refresh a player's userinfo using the implicit grant mode managed client-id and access-token.",
        "help": "If the client-id has a valid access token managed by the implicit grant mode manager, this API will return the userinfo of the player for the client-id as specified by the access token's scopes.\n\nThis endpoint is not available until the OpenID configuration is retrieved.",
        "internal": false,
        "name": "PostRsoAuthV1UserinfoByClientId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthUserInfo"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v1/userinfo/refresh": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "This internal endpoint can be used to force a refresh of all current UserInfos.\nThis is an expensive operation and should be only used if necessary.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthV1UserinfoRefresh",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v2/authorizations": {
        "arguments": [
            {
                "description": "",
                "name": "authorizationRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthAuthorizationRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create a new authorization request, or retrieves authorization for an existing request.",
        "help": "Attempts to retrieve the authorization associated with the `client-id` set in the `authorizationRequest`. If the player has not been logged in, then this call will prompt that a login session be established.\n\nWhen POSTing a request for authorization, the body may optionally include an array of `scope`s to be included for the authorization. Likewise, an array of `trustLevels` can be set to set the level at which the authorization state is trusted.\n\nThis API returns type: `needs_authentication` if the client requires authentication before an authorization can be presented, or type: `needs_reauthorization` if the client requires reauthentication before a new authorization can be presented, or type: `authorized` along with the `ImplicitAuthorization` field populated.\n\n",
        "internal": false,
        "name": "PostRsoAuthV2Authorizations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v2/authorizations/{client-id}": {
        "arguments": [
            {
                "description": "",
                "name": "client-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Refresh an authorization for a given client",
        "help": "This endpoint refreshes authorization for a given client ID and returns the resultant updated authorization",
        "internal": false,
        "name": "PostRsoAuthV2AuthorizationsByClientId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorization"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v2/config": {
        "arguments": [
            {
                "description": "",
                "name": "config",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthPublicClientConfig"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Override the default RSO configuration",
        "help": "Overrides the configuration from RSO from the config files, if any. The url should not have a trailing slash and should be the root url for the RSO instance to be used.",
        "internal": false,
        "name": "PostRsoAuthV2Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v2/partner-auth": {
        "arguments": [
            {
                "description": "",
                "name": "partnerCreds",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthPartnerCredentials"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Log the user in with any of the accepted partner credentials",
        "help": "Endpoint to be deleted January 2023; Please use '/rso-auth/v3/partner-auth'.",
        "internal": false,
        "name": "PostRsoAuthV2PartnerAuth",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorization"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-auth/v3/partner-auth": {
        "arguments": [
            {
                "description": "",
                "name": "partnerCreds",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthPartnerCredentialsV3"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Log the user in with any of the accepted partner credentials",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthV3PartnerAuth",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorization"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/apple": {
        "arguments": [
            {
                "description": "",
                "name": "openId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticateOpenIdConnectInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authenticate a player with apple open id token.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationApple",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/code": {
        "arguments": [
            {
                "description": "",
                "name": "codeExchange",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticateCodeInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create a new authentication session with code from a previous federated authentication.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationCode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/facebook": {
        "arguments": [
            {
                "description": "",
                "name": "facebook",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticateFacebookInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authenticate a player with facebook access token.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationFacebook",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/gamecenter": {
        "arguments": [
            {
                "description": "",
                "name": "gamecenter",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticateGameCenterInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authenticate a player with gamecenter credentials.",
        "help": "Removing endpoint on Feb 2022 due to dropped support by Apple. Context JIRA ticket: SDKFEAT-633",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationGamecenter",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/google": {
        "arguments": [
            {
                "description": "",
                "name": "openId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticateOpenIdConnectInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authenticate a player with google open id token.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationGoogle",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/multifactor": {
        "arguments": [
            {
                "description": "",
                "name": "multifactor",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticateMultifactorInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Linking player's social to their multifactor enabled riot account.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationMultifactor",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/nintendo": {
        "arguments": [
            {
                "description": "",
                "name": "openId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticateNintendoInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authenticate a player with nintendo open id tokens.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationNintendo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/playstation": {
        "arguments": [
            {
                "description": "",
                "name": "id_token",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticatePlaystationInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authenticate a player with Playstation id token.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationPlaystation",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/qrcode": {
        "arguments": [
            {
                "description": "",
                "name": "qrCodeStart",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1QrCodeAuthStartInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Start polling for authentication provided by Riot Mobile.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationQrcode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/redirect": {
        "arguments": [
            {
                "description": "",
                "name": "redirect",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticationRedirectInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Redirect the current authentication to the given url",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationRedirect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/riot-identity/complete": {
        "arguments": [
            {
                "description": "",
                "name": "authCompleteInput",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1RiotIdentityAuthCompleteInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Complete a new Riot Identity authentication session.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationRiotIdentityComplete",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/riot-identity-signup/complete": {
        "arguments": [
            {
                "description": "",
                "name": "signupCompleteInput",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1RiotIdentitySignupCompleteInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Complete a new Riot Identity Signup authentication session.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationRiotIdentitySignupComplete",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/riot-identity-signup/start": {
        "arguments": [
            {
                "description": "",
                "name": "signupStartInput",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1RiotIdentitySignupStartInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Start a new Riot Identity Signup authentication session.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationRiotIdentitySignupStart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/riot-identity/start": {
        "arguments": [
            {
                "description": "",
                "name": "authStartInput",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1RiotIdentityAuthStartInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Start a new Riot Identity authentication session.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationRiotIdentityStart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/authentication/xbox": {
        "arguments": [
            {
                "description": "",
                "name": "xbox",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1AuthenticateXboxInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authenticate a player with Xbox xsts token and user hash",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1AuthenticationXbox",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/login": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1LoginRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Completes authentication given a login token",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1Login",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/session/authentication": {
        "arguments": [
            {
                "description": "",
                "name": "session_details",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1SessionDetails"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Authenticate another session using the currently active authorization.",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1SessionAuthentication",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1SessionAuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/username-validation": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1UsernameValidationRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Checks username availability",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1UsernameValidation",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1UsernameValidationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-authenticator/v1/web-authentication-url": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1WebAuthenticationUrlRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Provides a url for performing a web based authentication",
        "help": "",
        "internal": false,
        "name": "PostRsoAuthenticatorV1WebAuthenticationUrl",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/account-promotion/initiate": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Launches a UI for handling account promotion",
        "internal": false,
        "name": "PostRsoMobileUiV1AccountPromotionInitiate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/authentication-redirect": {
        "arguments": [
            {
                "description": "",
                "name": "redirectRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiAuthenticationRedirectRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Internal endpoint for triggering redirect of the current authentication to a given url.",
        "internal": false,
        "name": "PostRsoMobileUiV1AuthenticationRedirect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/debug/browser/redirect": {
        "arguments": [
            {
                "description": "",
                "name": "debug",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiIOSEventInfo"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "PostRsoMobileUiV1DebugBrowserRedirect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/debug/sdk": {
        "arguments": [
            {
                "description": "",
                "name": "debug",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "PostRsoMobileUiV1DebugSdk",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/debug/webview/decide-navigation-policy": {
        "arguments": [
            {
                "description": "",
                "name": "debug",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "PostRsoMobileUiV1DebugWebviewDecideNavigationPolicy",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/debug/webview/javascript-message": {
        "arguments": [
            {
                "description": "",
                "name": "debug",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "PostRsoMobileUiV1DebugWebviewJavascriptMessage",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/debug/webview/launch": {
        "arguments": [
            {
                "description": "",
                "name": "debug",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Debug endpoint to detect page launches",
        "help": "",
        "internal": false,
        "name": "PostRsoMobileUiV1DebugWebviewLaunch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/debug/webview/load-error-page": {
        "arguments": [
            {
                "description": "",
                "name": "debug",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "PostRsoMobileUiV1DebugWebviewLoadErrorPage",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/debug/webview/simulate-onfinish": {
        "arguments": [
            {
                "description": "",
                "name": "arg",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulates the callback from the web view closing",
        "help": "",
        "internal": false,
        "name": "PostRsoMobileUiV1DebugWebviewSimulateOnfinish",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/delete-account": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Initiates the Account Deletion UI to delete a player's Riot account. Be careful, this functionality is destructive - making it difficult, if not impossible, to recover an account.",
        "help": "",
        "internal": false,
        "name": "PostRsoMobileUiV1DeleteAccount",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/eula/initiate": {
        "arguments": [
            {
                "description": "",
                "name": "dialog",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiEULAUIInitiate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Launches a dialog UI for requesting player acceptance to the current EULA from rcp-be-eula\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PostRsoMobileUiV1EulaInitiate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/federated-login": {
        "arguments": [
            {
                "description": "",
                "name": "strategy",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiFederatedLoginRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Internal endpoint for triggering federated logins for account linking.",
        "internal": false,
        "name": "PostRsoMobileUiV1FederatedLogin",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/internal/display-error-page": {
        "arguments": [
            {
                "description": "",
                "name": "errorCode",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Launches a WebView to display an error page. Used by `platform-ui` as a temporary solution before it handles error pages on it's own. DON'T USE IT!\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PostRsoMobileUiV1InternalDisplayErrorPage",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/ios-auth-redirect": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiIOSEventInfo"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "iOS application open url event",
        "help": "Endpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PostRsoMobileUiV1IosAuthRedirect",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/login/initiate": {
        "arguments": [
            {
                "description": "",
                "name": "strategy",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiLoginInitiateRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Launches an Android Activity or iOS UIView to display a login flow to the player using a WebView\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PostRsoMobileUiV1LoginInitiate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/region-election": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiRegionElectionV1InitiateRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Initiates the display of the Region Election UI",
        "help": "Endpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PostRsoMobileUiV1RegionElection",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiRegionElectionV1RegionElection"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/riot-id-prompt/initiate": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiRiotIDPromptV1InitiateRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Launches a UI to prompt user to set a RiotID for their account\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PostRsoMobileUiV1RiotIdPromptInitiate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiRiotIDPromptV1RiotIDPrompt"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/show-game-out-of-date": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiGameOutOfDateUIInitiate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Show a native dialog displaying game is out of date and redirecting user to app store",
        "help": "Endpoint to be deleted December 2024; There are no known customers of this endpoint. If you require similar functionality, please contact the SDK Account Experiences team.",
        "internal": false,
        "name": "PostRsoMobileUiV1ShowGameOutOfDate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/vng/profile/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Launches a WebView to edit VNG (Vietnam) profile registration\n\nEndpoint to be deleted December 2024; Please use '/platform-ui/v1/vng-edit-profile' instead.",
        "internal": false,
        "name": "PostRsoMobileUiV1VngProfileByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v1/vng/register/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Launches a WebView (if necessary) to handle initial, one-time, game-specific, required VNG (Vietnam) profile registration\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PostRsoMobileUiV1VngRegisterByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v2/eula/agreement": {
        "arguments": [
            {
                "description": "",
                "name": "isAccepted",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiEULAUIV2Agreement"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Saves agreement status\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PostRsoMobileUiV2EulaAgreement",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /rso-mobile-ui/v2/eula/initiate": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Launches a WebView for requesting player acceptance to the current EULA from rcp-be-eula\n\nEndpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PostRsoMobileUiV2EulaInitiate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "POST /scd/v1/enabled": {
        "arguments": [
            {
                "description": "",
                "name": "enabled",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ScdScdEnabled"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Activates communication to the SCD service.",
        "help": "",
        "internal": false,
        "name": "PostScdV1Enabled",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "scd"
        ],
        "threadSafe": false
    },
    "POST /scd/v1/url-patterns/test": {
        "arguments": [
            {
                "description": "",
                "name": "url",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns whether a url refers to SCD-protected content",
        "help": "",
        "internal": false,
        "name": "PostScdV1UrlPatternsTest",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "scd"
        ],
        "threadSafe": false
    },
    "POST /social/v1/initialize": {
        "arguments": [
            {
                "description": "",
                "name": "product_context",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "SocialProductContext"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "Endpoint deprecated and will be deleted July 2025.  Please use /social/v2/initialize",
        "internal": false,
        "name": "PostSocialV1Initialize",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "POST /social/v1/view-profile/{puuid}": {
        "arguments": [
            {
                "description": "",
                "name": "puuid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "",
        "internal": false,
        "name": "PostSocialV1ViewProfileByPuuid",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "POST /social/v2/initialize": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Initializes the social plugin.",
        "help": "",
        "internal": false,
        "name": "PostSocialV2Initialize",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "POST /telemetry/v1/common-data/{key}": {
        "arguments": [
            {
                "description": "The name of the common data key",
                "name": "key",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "The value of the common data key",
                "name": "value",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Adds/updates a common data key and value to be sent with every subsequent event.",
        "help": "",
        "internal": false,
        "name": "PostTelemetryV1CommonDataByKey",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "telemetry"
        ],
        "threadSafe": false
    },
    "POST /telemetry/v1/events/{eventType}": {
        "arguments": [
            {
                "description": "The name of the event type",
                "name": "eventType",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "A map of event data",
                "name": "eventData",
                "optional": false,
                "type": {
                    "elementType": "object",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Adds a new event to be sent to Dradis and/or other analytics/monitoring data sinks. All events will have their eventType prefixed",
        "help": "",
        "internal": false,
        "name": "PostTelemetryV1EventsByEventType",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "telemetry"
        ],
        "threadSafe": false
    },
    "POST /telemetry/v2/metadata/{schemaPrefix}/{metadataEntity}/{propertyName}": {
        "arguments": [
            {
                "description": "The schema 'world' prefix (i.e. riotclient, rtp, etc) to match against incoming AP events.",
                "name": "schemaPrefix",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "Name of the metadata entity that exists in every schema for the given prefix (i.e. metadata, riotclientMetadata, etc)",
                "name": "metadataEntity",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "Name of a property to set (i.e. rsoClient, region, locale)",
                "name": "propertyName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "BindingProperty that contains the value to set in the metadata.",
                "name": "value",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "object"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the metadata to automatically apply to a type of analytics platform event",
        "help": "",
        "internal": false,
        "name": "PostTelemetryV2MetadataBySchemaPrefixByMetadataEntityByPropertyName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "telemetry"
        ],
        "threadSafe": false
    },
    "POST /tencent-launcher/v1/debug/force-load": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Force-load the ACLSDK",
        "help": "\n            **Description**\n            A debug API to force-load the ACLSDK, even if configured off.\n            Can only be used internally for testing.\n        ",
        "internal": false,
        "name": "PostTencentLauncherV1DebugForceLoad",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "tencent-launcher"
        ],
        "threadSafe": false
    },
    "POST /tencent-launcher/v1/login": {
        "arguments": [
            {
                "description": "",
                "name": "arguments",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "TencentLauncherTencentLauncherLoginArguments"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Initialize RSO login using mSDK credentials from the Tencent Launcher",
        "help": "**Requirements**\nThis should only be used by products launched via the Tencent Launcher.\n\nThis function is disabled unless the following configuration is passedto the SDK at startup:\n* `publisher`: must be set to `tencent`\n* `auth-via-tencent-launcher`: must be set to `true`\n\nRequires ACLSDK.dll to be present. If absent, calling this functionwill return a `501` error code.\n\n\n            **Description**\n\n            Initializes the ACLSDK, retrieves the player's Tencent credentials\n            from the Tencent Launcher, and uses them to auth with RSO via the\n            partner-auth API.\n\n            **Request Arguments**\n            * `tencentGameId` - The Tencent-supplied game ID\n            * `tencentGameKey` - The Tencent-supplied game key\n\n            **Returns**\n            A successful return indicates that the player has successfully authed\n            with RSO.\n\n            A failed return indicates an error, either with ACLSDK, or the resulting\n            RSO auth.\n        ",
        "internal": false,
        "name": "PostTencentLauncherV1Login",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "TencentLauncherAuthorization"
        },
        "subscribable": false,
        "tags": [
            "tencent-launcher"
        ],
        "threadSafe": false
    },
    "POST /tencent-launcher/v1/repair-on-shutdown": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Initializes repair on shutdown flow in the ACLOS",
        "help": "\n            **Description**\n            After the game shuts down Tencent Launcher will repair the game and then relaunch it.\n        ",
        "internal": false,
        "name": "PostTencentLauncherV1RepairOnShutdown",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "tencent-launcher"
        ],
        "threadSafe": false
    },
    "POST /vanguard/v1/check-vanguard-service": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Check if Vanguard is running",
        "help": "",
        "internal": false,
        "name": "PostVanguardV1CheckVanguardService",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VanguardPluginState"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin vanguard"
        ],
        "threadSafe": false
    },
    "POST /vng/v1/profile/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "profile",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VngV1Profile"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create a VNG profile for the currently signed in player.",
        "help": "",
        "internal": false,
        "name": "PostVngV1ProfileByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VngV1SubmitProfileResponse"
        },
        "subscribable": false,
        "tags": [
            "vng"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v1/block-list/users": {
        "arguments": [
            {
                "description": "",
                "name": "blocklist",
                "optional": false,
                "type": {
                    "elementType": "string",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Adds a list of users to the voice provider block list",
        "help": "The users blocked by this endpoint will be muted regardless if they muted on chat and/or platform blocklists",
        "internal": false,
        "name": "PostVoiceChatV1BlockListUsers",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v1/debug/simulate": {
        "arguments": [
            {
                "description": "",
                "name": "simulationConfig",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatDebugSimulationResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate provider/player behavior for testing.",
        "help": "",
        "internal": false,
        "name": "PostVoiceChatV1DebugSimulate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v1/debug/write-csr-data-to-file": {
        "arguments": [
            {
                "description": "",
                "name": "csrWritingResource",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatDebugCSRFileWritingRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Write CSR data for a particular channel and product to the provided filepath",
        "help": "",
        "internal": false,
        "name": "PostVoiceChatV1DebugWriteCsrDataToFile",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatDebugCSRFileWritingResponse"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v1/initialize-provider/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "provider",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Eagerly initialize a provider. Needed for device settings to update before a first session is established",
        "help": "",
        "internal": false,
        "name": "PostVoiceChatV1InitializeProviderByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v1/push-to-talk/check-available": {
        "arguments": [
            {
                "description": "",
                "name": "prompt",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Use to check if we have permissions to start push to talk",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "PostVoiceChatV1PushToTalkCheckAvailable",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v1/upload-audio/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Trigger the upload of the client-side recorded audio data for all sessions with client-side recording enabled",
        "help": "A successful response by this endpoint means that the upload procedure has been successfully initiated, not that it has been successfully completed",
        "internal": false,
        "name": "PostVoiceChatV1UploadAudioByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v2/push-to-talk/check-available": {
        "arguments": [
            {
                "description": "",
                "name": "prompt",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Use to check if we have permissions to start push to talk",
        "help": "Endpoint is deprecated and will be deleted. Please check /voice-chat/v3/push-to-talk/",
        "internal": false,
        "name": "PostVoiceChatV2PushToTalkCheckAvailable",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v2/sessions": {
        "arguments": [
            {
                "description": "",
                "name": "JWT",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Join a session with game-specific JWT token",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "PostVoiceChatV2Sessions",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatSessionResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v3/sessions/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "jwt",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Join a session with game-specific JWT token",
        "help": "Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}",
        "internal": false,
        "name": "PostVoiceChatV3SessionsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatSessionResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /voice-chat/v4/sessions/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "details",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatJoinSession"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Join a session with game-specific JWT token",
        "help": "",
        "internal": false,
        "name": "PostVoiceChatV4SessionsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatSessionResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "POST /xbox-account/v1/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "XboxAccountAuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets authorization from the Xbox Account of the player logged in the Xbox",
        "help": "",
        "internal": false,
        "name": "PostXboxAccountV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "XboxAccountAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "POST /xbox-account/v1/user": {
        "arguments": [
            {
                "description": "",
                "name": "SelectUserParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "XboxAccountSelectUserParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sign in user on Xbox",
        "help": "",
        "internal": false,
        "name": "PostXboxAccountV1User",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "POST /xbox-account/v1/user/confirm": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Confirms selected Xbox Live user as the Platform User",
        "help": "",
        "internal": false,
        "name": "PostXboxAccountV1UserConfirm",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "POST /xbox-account/v2/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationParameters",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "XboxAccountV2AuthorizationParameters"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Gets authorization from the Xbox Account of the player logged in the Xbox or start authentication with native browser",
        "help": "",
        "internal": false,
        "name": "PostXboxAccountV2Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "PUT /age-restriction/v1/debug/age-restriction/products/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "restricted",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "DEBUG: Sets the age-restriction state for the productId",
        "help": "",
        "internal": false,
        "name": "PutAgeRestrictionV1DebugAgeRestrictionProductsByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "AgeRestrictionAgeRestriction"
        },
        "subscribable": false,
        "tags": [
            "age-restriction"
        ],
        "threadSafe": false
    },
    "PUT /app-command/submit": {
        "arguments": [
            {
                "description": "",
                "name": "command",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "AppCommandCommand"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Used to coerce an application to invoke a registered command.",
        "help": "",
        "internal": false,
        "name": "PutAppCommandSubmit",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "app-command"
        ],
        "threadSafe": false
    },
    "PUT /chat/v1/device-settings": {
        "arguments": [
            {
                "description": "",
                "name": "deviceSettings",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatDeviceChatSettings"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the device settings related to chat",
        "help": "",
        "internal": false,
        "name": "PutChatV1DeviceSettings",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v1/settings": {
        "arguments": [
            {
                "description": "",
                "name": "settings",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatAccountChatSettings"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the account settings related to chat, complete overwrite",
        "help": "",
        "internal": false,
        "name": "PutChatV1Settings",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v2/me": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "gamePresence",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatChatGamePresence"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Put/update a multi-game presence for a specific product. This implicitly sets the product's chat session state to `active`.",
        "help": "Endpoint deleted August 2021; Please use '/chat/v3/me'.",
        "internal": false,
        "name": "PutChatV2Me",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v2/session/state": {
        "arguments": [
            {
                "description": "",
                "name": "update",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatProductSessionState"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "edit session state for specific product",
        "help": "",
        "internal": false,
        "name": "PutChatV2SessionState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v3/friends": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update a friend",
        "help": "**Data:**\n\n```\n{\n  \"puuid\":  \"[puuid]\",           //specify player to update\n  \"pid\":    \"[pid]\",             //specify player to update, JID format, if not using puuid\n  \"group\":  \"[new group name]\",  //if moving friend to different group, specify it here\n  \"note\":   \"[new friend note]\"  //if changing friend note, specify it here\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/friends'.",
        "internal": false,
        "name": "PutChatV3Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v3/groups": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatChatGroupUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update a friend group",
        "help": "**Data:**\n\n```\n{\n\"collapsed\": [new collapsed]   //if collapsing or uncollapsing, specify it here\n\"name\":      \"[current name]\", //current name of group\n\"new_name\":  \"[new name]\",     //same name, or new name if renaming\n}\n```\n\n\nEndpoint deleted August 2021; Please use '/chat/v4/groups'.",
        "internal": false,
        "name": "PutChatV3Groups",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v3/groups/order": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendGroupOrder"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Order the friend groups",
        "help": "Endpoint deleted August 2021; Please use '/chat/v4/groups/order'.",
        "internal": false,
        "name": "PutChatV3GroupsOrder",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v3/me": {
        "arguments": [
            {
                "description": "",
                "name": "gamePresence",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatChatGamePresence"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Put/update a multi-game presence for a specific product. This implicitly sets the product's chat session state to `active`.",
        "help": "",
        "internal": false,
        "name": "PutChatV3Me",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v4/friends": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update a friend",
        "help": "**Data:**\n\n```\n{\n  \"puuid\":  \"[puuid]\",           //specify player to update\n  \"pid\":    \"[pid]\",             //specify player to update, JID format, if not using puuid\n  \"group\":  \"[new group name]\",  //if moving friend to different group, specify it here\n  \"note\":   \"[new friend note]\"  //if changing friend note, specify it here\n}\n```\n",
        "internal": false,
        "name": "PutChatV4Friends",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v4/groups": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatChatGroupUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update a friend group",
        "help": "**Data:**\n\n```\n{\n\"collapsed\": [new collapsed]   //if collapsing or uncollapsing, specify it here\n\"name\":      \"[current name]\", //current name of group\n\"new_name\":  \"[new name]\",     //same name, or new name if renaming\n}\n```\n",
        "internal": false,
        "name": "PutChatV4Groups",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v4/groups/order": {
        "arguments": [
            {
                "description": "",
                "name": "body",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatFriendGroupOrder"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Order the friend groups",
        "help": "",
        "internal": false,
        "name": "PutChatV4GroupsOrder",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v5/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "update",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Edit conversation",
        "help": "Endpoint deleted July 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "PutChatV5Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v5/participants": {
        "arguments": [
            {
                "description": "",
                "name": "edit",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatParticipantEdit"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "edit a player to mute or unmute them, across all conversations",
        "help": "",
        "internal": false,
        "name": "PutChatV5Participants",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v6/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "rchat-blocking",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "update",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Edit conversation",
        "help": "Endpoint deleted August 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "PutChatV6Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v6/conversations/active": {
        "arguments": [
            {
                "description": "",
                "name": "convo",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatActiveConvo"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set active conversation",
        "help": "Endpoint deleted August 2021; Please use '/chat/v7/conversations'.",
        "internal": false,
        "name": "PutChatV6ConversationsActive",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v7/conversations": {
        "arguments": [
            {
                "description": "",
                "name": "update",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatConvoUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Edit conversation",
        "help": "",
        "internal": false,
        "name": "PutChatV7Conversations",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /chat/v7/conversations/active": {
        "arguments": [
            {
                "description": "",
                "name": "convo",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ChatActiveConvo"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set active conversation",
        "help": "",
        "internal": false,
        "name": "PutChatV7ConversationsActive",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "chat"
        ],
        "threadSafe": false
    },
    "PUT /client-config/v1/authorization": {
        "arguments": [
            {
                "description": "",
                "name": "update",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ClientConfigRiotClientAuthAuthorization"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Updates the authorization information for this plugin. Pushed by the ClientConfigDepInjector. If this is the first authorization of session, triggers an initial fetch of player configuration.",
        "help": "",
        "internal": false,
        "name": "PutClientConfigV1Authorization",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "PUT /client-config/v1/first-party-environment": {
        "arguments": [
            {
                "description": "",
                "name": "environment",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Updates the 1st party environment the device is currently using so it can be mapped to matching SDK environment.",
        "help": "",
        "internal": false,
        "name": "PutClientConfigV1FirstPartyEnvironment",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "PUT /client-config/v1/refresh-config-status": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Refresh config status.",
        "help": "",
        "internal": false,
        "name": "PutClientConfigV1RefreshConfigStatus",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "PUT /client-config/v1/sessions": {
        "arguments": [
            {
                "description": "",
                "name": "update",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ClientConfigSessionsUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Updates the cached sessions.",
        "help": "",
        "internal": false,
        "name": "PutClientConfigV1Sessions",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "PUT /client-config/v2/entitlements-token": {
        "arguments": [
            {
                "description": "",
                "name": "update",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ClientConfigTokenV2"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Accepts updated entitlements token. Pushed by the ClientConfigDepInjector. Changes in entitlements trigger refresh of player configuration.",
        "help": "",
        "internal": false,
        "name": "PutClientConfigV2EntitlementsToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "PUT /client-config/v2/namespace-changes": {
        "arguments": [
            {
                "description": "",
                "name": "namespaces",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ClientConfigConfigNamespaceUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Refresh config status.",
        "help": "",
        "internal": false,
        "name": "PutClientConfigV2NamespaceChanges",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-config"
        ],
        "threadSafe": false
    },
    "PUT /client-feature-flags/v1/debug/mock-data": {
        "arguments": [
            {
                "description": "",
                "name": "in",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ClientFeatureFlagsConfigurationSource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the current set of mock data for the plugin.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nThe entire data set is replaced in one call; partial updates are not supported. The best way to edit the current set of data is to use `GET /debug/mock-data`, modify the result, and `PUT` using this endpoint.\n\nSome minor fixups are performed with the provided data to ensure it is consistent. The plugin treats this as a 'oh hey, there is new data for client-config' event, and behaves appropriately.",
        "internal": false,
        "name": "PutClientFeatureFlagsV1DebugMockData",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "PUT /client-feature-flags/v1/debug/mock-mode": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Enters mock mode, which allows using fake client-config data.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nWhen entering mock mode, the current data set from client-config is copied, and further updates from client-config are ignored. The plugin otherwise tries to behave as it would normally.\n\nUse the `/debug/mock-data` endpoint to get/set mocked data in this mode.",
        "internal": false,
        "name": "PutClientFeatureFlagsV1DebugMockMode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "PUT /client-feature-flags/v1/debug/overrides/flags/{namespace}/{flag}": {
        "arguments": [
            {
                "description": "",
                "name": "namespace",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "flag",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "value",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Forcibly sets the value of a particular feature flag.",
        "help": "*Internal Riot Client API. Only for use by plugins. Please don't use outside of Riot Client or the SDK.*\n\nForcibly sets the value of a particular feature flag. The override will be in place until a subsequent `DELETE` on the override.",
        "internal": false,
        "name": "PutClientFeatureFlagsV1DebugOverridesFlagsByNamespaceByFlag",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "client-feature-flags"
        ],
        "threadSafe": false
    },
    "PUT /commerce/v1/debug/caller-id/mock-id": {
        "arguments": [
            {
                "description": "",
                "name": "callerId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "CommercePluginCallerId_MockCallerId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the caller ID to use when calling this plugin from Swagger",
        "help": "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.",
        "internal": false,
        "name": "PutCommerceV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "commerce"
        ],
        "threadSafe": false
    },
    "PUT /eula/v1/agreement/acceptance": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Accepts the most recent EULA for the current user.",
        "help": "",
        "internal": false,
        "name": "PutEulaV1AgreementAcceptance",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "PUT /eula/v1/agreement/reject": {
        "arguments": [
            {
                "description": "",
                "name": "withoutReading",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Rejects the most recent EULA for the current user.",
        "help": "",
        "internal": false,
        "name": "PutEulaV1AgreementReject",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "PUT /eula/v1/debug/agreement/short-agreement-content": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Simulate short agreement content. This is disabled in public builds.",
        "help": "",
        "internal": false,
        "name": "PutEulaV1DebugAgreementShortAgreementContent",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "PUT /eula/v1/product-context": {
        "arguments": [
            {
                "description": "",
                "name": "ProductContext",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "EulaProductContext"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set the current product context.",
        "help": "",
        "internal": false,
        "name": "PutEulaV1ProductContext",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "eula"
        ],
        "threadSafe": false
    },
    "PUT /external-message-handler/v1/emulate": {
        "arguments": [
            {
                "description": "",
                "name": "message",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ExternalMessageHandlerMessageBody"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Emulate a message and send it to the event bus:'MessageId': Type of the message. (e.g. install_game, patch_game, launch_game)'MessageData': The message content",
        "help": "",
        "internal": false,
        "name": "PutExternalMessageHandlerV1Emulate",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin external-message-handler"
        ],
        "threadSafe": false
    },
    "PUT /external-message-handler/v1/patch-request/products/{productId}/patchlines/{patchlineId}/pause": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Notify patch request has been paused",
        "help": "",
        "internal": false,
        "name": "PutExternalMessageHandlerV1PatchRequestProductsByProductIdPatchlinesByPatchlineIdPause",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin external-message-handler"
        ],
        "threadSafe": false
    },
    "PUT /external-message-handler/v1/patch-request/products/{productId}/patchlines/{patchlineId}/resume": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Notify patch request has been resumed",
        "help": "",
        "internal": false,
        "name": "PutExternalMessageHandlerV1PatchRequestProductsByProductIdPatchlinesByPatchlineIdResume",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin external-message-handler"
        ],
        "threadSafe": false
    },
    "PUT /ga-restriction/v1/debug/caller-id/mock-id": {
        "arguments": [
            {
                "description": "",
                "name": "callerId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "GaRestrictionPluginCallerId_MockCallerId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the caller ID to use when calling this plugin from Swagger",
        "help": "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.",
        "internal": false,
        "name": "PutGaRestrictionV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "PUT /ga-restriction/v1/debug/penalty-notifications-data/{messageId}": {
        "arguments": [
            {
                "description": "",
                "name": "messageId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "GaRestrictionCachedPenaltyNotificationDtoV2"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Add some arbitrary penalty notification. Uses your current callerId's productId. Note that if you acknowledge or delete this message, the plugin will still attempt to tell Mailbox, which may result in an error log.",
        "help": "",
        "internal": false,
        "name": "PutGaRestrictionV1DebugPenaltyNotificationsDataByMessageId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "PUT /ga-restriction/v1/debug/time/{millisSinceEpoch}": {
        "arguments": [
            {
                "description": "",
                "name": "millisSinceEpoch",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "uint64"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Mock the current time. This can help you debug if the plugin automatically deletes messages. Note that we only try to delete messages when we receive or acknowledge messages. Uses milliseconds since epoch.",
        "help": "",
        "internal": false,
        "name": "PutGaRestrictionV1DebugTimeByMillisSinceEpoch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "PUT /ga-restriction/v1/penalty-notifications/{messageId}": {
        "arguments": [
            {
                "description": "",
                "name": "messageId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Marks a penalty notification as read. Read messages will still be accessible, but they don't need to be immediately displayed to the player.",
        "help": "Deprecating V1 endpoint in favor of V2. Please use the /ga-restriction/v2/penalty-notifications/{messageId} endpoint going forward.",
        "internal": false,
        "name": "PutGaRestrictionV1PenaltyNotificationsByMessageId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "PUT /ga-restriction/v2/penalty-notifications/{messageId}": {
        "arguments": [
            {
                "description": "",
                "name": "messageId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Marks a penalty notification as read. Read messages will still be accessible, but they don't need to be immediately displayed to the player.",
        "help": "",
        "internal": false,
        "name": "PutGaRestrictionV2PenaltyNotificationsByMessageId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "bool"
        },
        "subscribable": false,
        "tags": [
            "ga-restriction"
        ],
        "threadSafe": false
    },
    "PUT /ga-warning/v1/debug/caller-id/mock-id": {
        "arguments": [
            {
                "description": "",
                "name": "callerId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "GaWarningPluginCallerId_MockCallerId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the caller ID to use when calling this plugin from Swagger",
        "help": "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.",
        "internal": false,
        "name": "PutGaWarningV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "ga-warning"
        ],
        "threadSafe": false
    },
    "PUT /game-session/v1/debug/caller-id/mock-id": {
        "arguments": [
            {
                "description": "",
                "name": "callerId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "GameSessionPluginCallerId_MockCallerId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the caller ID to use when calling this plugin from Swagger",
        "help": "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.",
        "internal": false,
        "name": "PutGameSessionV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "game-session"
        ],
        "threadSafe": false
    },
    "PUT /info-radiator/v1/custom-heartbeat-metric/{name}": {
        "arguments": [
            {
                "description": "",
                "name": "name",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "value",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create or update the value of a custom heartbeat metric",
        "help": "",
        "internal": false,
        "name": "PutInfoRadiatorV1CustomHeartbeatMetricByName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "info-radiator"
        ],
        "threadSafe": false
    },
    "PUT /mailbox/v1/debug/caller-id/mock-id": {
        "arguments": [
            {
                "description": "",
                "name": "callerId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "MailboxPluginCallerId_MockCallerId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the caller ID to use when calling this plugin from Swagger",
        "help": "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.",
        "internal": false,
        "name": "PutMailboxV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "PUT /mailbox/v1/mail-state": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "MailboxUpdateMailStateRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the state of a message as read or acknowledged",
        "help": "\n**Description**\n\nAllows marking mail as read or acknowledged -- 'new' is not a valid argument\n\nArgument Options:\n```\nACKNOWLEDGED,\nREAD\n```\n",
        "internal": false,
        "name": "PutMailboxV1MailState",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "mailbox"
        ],
        "threadSafe": false
    },
    "PUT /patch-proxy/v1/patch-jobs/cancel-active": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Cancel the active job from the scheduler and deprioritize it to the end of the queue.",
        "help": "",
        "internal": false,
        "name": "PutPatchProxyV1PatchJobsCancelActive",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "PUT /patch-proxy/v1/patch-jobs/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "options",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "PatchProxyPatchRequestOptions"
                }
            },
            {
                "description": "",
                "name": "repair",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "tempPath",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Add a patch job to the scheduler.",
        "help": "",
        "internal": false,
        "name": "PutPatchProxyV1PatchJobsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchProxyPatchProxyRequest"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "PUT /patch-proxy/v1/patch-jobs/start": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Start the patching process in order of the current priority queue.",
        "help": "",
        "internal": false,
        "name": "PutPatchProxyV1PatchJobsStart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "PUT /patch-proxy/v1/patch-jobs/stop": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stop the patching process.",
        "help": "",
        "internal": false,
        "name": "PutPatchProxyV1PatchJobsStop",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "PUT /patch-proxy/v1/priority-patch-jobs/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "options",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "PatchProxyPatchRequestOptions"
                }
            },
            {
                "description": "",
                "name": "repair",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "tempPath",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Starts a priority patch request for a product, which will complete patching before any automatic patching operation.",
        "help": "",
        "internal": false,
        "name": "PutPatchProxyV1PriorityPatchJobsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "PatchProxyPatchProxyRequest"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin patch-proxy"
        ],
        "threadSafe": false
    },
    "PUT /patch/v1/configuration": {
        "arguments": [
            {
                "description": "",
                "name": "params",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PatchConfiguration"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Configure plugin settings such as cache size and location",
        "help": "\n**Data**\n* `cache_path`:  Path to the global cache used to store downloaded chunks.\n* `cache_size`: Cache size in bytes.\n",
        "internal": false,
        "name": "PutPatchV1Configuration",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "PUT /patch/v1/installs/{install-id}": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "params",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PatchInstallParams"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Register a new install",
        "help": "\n**Data**\n* `excluded_paths`: List of paths (relative to the install root) that are excluded from the update. Files under these paths won't be checked during the verification and repair processes.\n* `metadata_path`:  The location for the install .db and .manifest files. The extension will be directly appended to this path.\n* `seed_path`: The location where updated chunks will be stored for this install when performing a seed operation, and the location where chunks will be sourced from when performing a patch operation.\n",
        "internal": false,
        "name": "PutPatchV1InstallsByInstallId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "PUT /patch/v1/installs/{install-id}/requests/patch": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "params",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PatchPatchRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Submit patch request for install",
        "help": "\n**Note**\n* If a request already exists it will be replaced by the new resource.\n\n**Data**\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `url`: Url for the release manifest.\n* `max_download_speed`: Maximum download speed, in bytes/sec. If zero then no limits will be applied.\n* `repair`: Whether a full repair should be performed prior to the update.\n* `tags`: Tags to filter which content gets patched. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/\n* `stage`: Only patch up to the specified stage.\n* `temp_path`: (Optional) Custom directory to use for working storage during patching.\n* `delete_foreign_paths`:  (optional) If true, paths that are not considered part of the install will be checked during the verification and repair processes and removed.\n",
        "internal": false,
        "name": "PutPatchV1InstallsByInstallIdRequestsPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "PUT /patch/v1/installs/{install-id}/requests/preview": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "params",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PatchPreviewRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Submit preview request for install",
        "help": "\n**Notes**\n* The request contains all the info needed, including the full url to the release manifest, http headers and tags.\n* If a request already exists it will be replaced by the new resource.\n\n**Data**\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `url`: Url for the release manifest.\n* `stage`: Only patch up to the specified stage.\n* `fast`: Whether to perform a fast (but less accurate) estimation.\n* `tags`: Tags to filter which content gets patched. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/\n",
        "internal": false,
        "name": "PutPatchV1InstallsByInstallIdRequestsPreview",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "PUT /patch/v1/installs/{install-id}/requests/repair": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "params",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PatchRepairRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Triggers a repair operation",
        "help": "\n**Notes**\n* Allows you to perform a repair on a set of files or a full repair without having to wait or game client to exit. Only use this if you're\nabsolutely certain that the files are not currently in use.\n* Game is responsible for displaying repair progress and can get progress using the GET /patch/v1/installs/{install-id}/status/repair endpoint.\n\n**Data**\n* `files`: a list of file paths for files that need to be repaired. If none specified then the patcher will perform a full repair. File paths must\nbe relative to the install root.\n* `manifest_url`: Url for the release manifest.\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `max_download_speed`: Maximum download speed, in bytes/sec. If zero then no limits will be applied.\n* `allowed_http_fallback_hostnames`: List of hostnames for which we'll fall back to HTTP instead of HTTPS if they resolve to an RFC1918 private IP address.\n* `delete_foreign_paths`:  (optional) If true, paths that are not considered part of the install will be checked during the verification and repair processes and removed.\n",
        "internal": false,
        "name": "PutPatchV1InstallsByInstallIdRequestsRepair",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "PUT /patch/v1/installs/{install-id}/requests/seed": {
        "arguments": [
            {
                "description": "",
                "name": "install-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "params",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PatchSeedRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Submit seed request for install",
        "help": "\n**Notes**\n* Seeding will download any chunks needed to the seed path, but will not modify any files in the install directory. The seed path is specified in the install.\n* If a request already exists it will be replaced by the new resource. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/concepts/seeding/\n\n**Data**\n* `headers`: Headers to send with every request. If the manifest url is behind SCD then a Cookie header is required.\n* `url`: Url for the release manifest.\n* `max_download_speed`: Maximum download speed, in bytes/sec. If zero then no limits will be applied.\n* `stage`: Only patch up to the specified stage.\n* `tags`: Tags to filter which content gets patched. https://riotsdk.rpg.riotgames.com/docs/for-users/patching/onboarding/localization/\n* `delete_foreign_paths`:  (optional) If true, paths that are not considered part of the install will be checked during the verification and repair processes and removed.\n",
        "internal": false,
        "name": "PutPatchV1InstallsByInstallIdRequestsSeed",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "patch"
        ],
        "threadSafe": false
    },
    "PUT /platform-login/v1/config": {
        "arguments": [
            {
                "description": "",
                "name": "LoginPersistenceConfig",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlatformLoginLoginPersistenceConfig"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Allows to modify the plugin config (e.g. enable or disable login persistence)",
        "help": "",
        "internal": false,
        "name": "PutPlatformLoginV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "platform-login"
        ],
        "threadSafe": false
    },
    "PUT /player-account/login-history/v1/debug/cache": {
        "arguments": [
            {
                "description": "",
                "name": "newPlayersLoginLocationHistoryCache",
                "optional": false,
                "type": {
                    "elementType": "PlayerAccountV1PlayerLoginLocationHistory",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "",
        "help": "This endpoint is used to set the content of cache.\n",
        "internal": false,
        "name": "PutPlayerAccountLoginHistoryV1DebugCache",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-account"
        ],
        "threadSafe": false
    },
    "PUT /player-affinity/shard": {
        "arguments": [
            {
                "description": "",
                "name": "shard",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerAffinityPlayerAffinityShardInfo"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the current",
        "help": "",
        "internal": false,
        "name": "PutPlayerAffinityShard",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-affinity"
        ],
        "threadSafe": false
    },
    "PUT /player-preferences/v1/data/{type}": {
        "arguments": [
            {
                "description": "",
                "name": "type",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Puts any string for the specified type into the Player Preferences service",
        "help": "",
        "internal": false,
        "name": "PutPlayerPreferencesV1DataByType",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "PUT /player-preferences/v1/data-json/{type}": {
        "arguments": [
            {
                "description": "",
                "name": "type",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Puts any valid JSON object for the specified type into the Player Preferences service",
        "help": "",
        "internal": false,
        "name": "PutPlayerPreferencesV1DataJsonByType",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "PUT /player-preferences/v1/data-json/productId/{productId}/type/{type}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "type",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Puts any valid JSON object for the specified type into the Player Preferences service",
        "help": "",
        "internal": false,
        "name": "PutPlayerPreferencesV1DataJsonProductIdByProductIdTypeByType",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "PUT /player-preferences/v1/debug/caller-id/mock-id": {
        "arguments": [
            {
                "description": "",
                "name": "callerId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerPreferencesPluginCallerId_MockCallerId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the caller ID to use when calling this plugin from Swagger",
        "help": "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.",
        "internal": false,
        "name": "PutPlayerPreferencesV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-preferences"
        ],
        "threadSafe": false
    },
    "PUT /player-reporting/v1/debug/caller-id/mock-id": {
        "arguments": [
            {
                "description": "",
                "name": "callerId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerReportingPluginCallerId_MockCallerId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the caller ID to use when calling this plugin from Swagger",
        "help": "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.",
        "internal": false,
        "name": "PutPlayerReportingV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-reporting"
        ],
        "threadSafe": false
    },
    "PUT /player-session-lifecycle/v1/login-strategy": {
        "arguments": [
            {
                "description": "",
                "name": "UpdateLoginStrategyRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerSessionLifecycleUpdateLoginStrategyRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set a Login Strategy for the current session.",
        "help": "",
        "internal": false,
        "name": "PutPlayerSessionLifecycleV1LoginStrategy",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-session-lifecycle"
        ],
        "threadSafe": false
    },
    "PUT /player-session-lifecycle/v1/session": {
        "arguments": [
            {
                "description": "",
                "name": "InitiateLoginSessionRequest",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlayerSessionLifecycleInitiateLoginSessionRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update a session used to retrieve common player authentication information. Remember to pass all of the session config values on update. Use `PUT /player-session-lifecycle/v1/login-strategy` when updating the login strategy.",
        "help": "",
        "internal": false,
        "name": "PutPlayerSessionLifecycleV1Session",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "player-session-lifecycle"
        ],
        "threadSafe": false
    },
    "PUT /playstation-account/v1/authorization-consent": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationConsent",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update authorization consent status for PlayStation",
        "help": "",
        "internal": false,
        "name": "PutPlaystationAccountV1AuthorizationConsent",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "playstation-account"
        ],
        "threadSafe": false
    },
    "PUT /private-settings/v1/settings/{userid}/{key}": {
        "arguments": [
            {
                "description": "",
                "name": "userid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "key",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "value",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update an individual private setting configuration. Upon success, configuration data within `private.user.<userid>.<key>` is updated and platform-specific settings 'save' systems are notified.",
        "help": "",
        "internal": false,
        "name": "PutPrivateSettingsV1SettingsByUseridByKey",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "private-settings"
        ],
        "threadSafe": false
    },
    "PUT /private-settings/v1/token/{userid}": {
        "arguments": [
            {
                "description": "",
                "name": "userid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "token",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Submit settings token after loading last-known saved data for the current device user.\nIf no save data or token exists for user, submit an no token or an empty string to reset private-settings for user.",
        "help": "Only call once per user, per session.\n\nAPI only enabled when `private-settings.multi-user-mode` is set to `true` (Consoles default `true`, else `false`).\n\n`token` refers to a compressed and url-safe base64 encoded token of private settings for the user.\n\n`userId` in this API refers to the platform-specific identifier for an active profile or user account.\n\n * xbox: XUID\n * playstation: Account ID\n * switch: NSA ID\n\nPlatforms not listed do not need to use this API, as private settings persistence is managed by this SDK.",
        "internal": false,
        "name": "PutPrivateSettingsV1TokenByUserid",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "private-settings"
        ],
        "threadSafe": false
    },
    "PUT /product-integration-deps/v1/app-repair/apply-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "apply-request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductIntegrationDepsAppRepairApplyRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Applies a game repair by opening Riot Client and repairing the game (on Desktop).",
        "help": "This adds a new apply request and notify out of the new resource. Apply requests should be created via the product-integration plugin when games would like Riot Client to repair their game after it closes.",
        "internal": false,
        "name": "PutProductIntegrationDepsV1AppRepairApplyRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration-deps"
        ],
        "threadSafe": false
    },
    "PUT /product-integration-deps/v1/app-update/apply-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "apply-request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductIntegrationDepsAppUpdateApplyRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Applies a game update by opening Riot Client and patching the game (on Desktop) or exiting to the App Store (on Mobile).",
        "help": "This adds a new apply request and notify out of the new resource. Apply requests should be created via the product-integration plugin when games would like Riot Client to update their game after it closes.",
        "internal": false,
        "name": "PutProductIntegrationDepsV1AppUpdateApplyRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration-deps"
        ],
        "threadSafe": false
    },
    "PUT /product-integration-deps/v1/app-update/statuses/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "status",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductIntegrationDepsAppUpdateStatus"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Push the current app update status for a given product and patchline",
        "help": "This sets the app update status for a given product and patchline, allowing a game to respond to whether or not it requires an update.",
        "internal": false,
        "name": "PutProductIntegrationDepsV1AppUpdateStatusesProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration-deps"
        ],
        "threadSafe": false
    },
    "PUT /product-integration/v1/app-repair/apply": {
        "arguments": [
            {
                "description": "",
                "name": "repairBody",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductIntegrationProductIntegrationAppRepairBody"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Applies a game repair by opening Riot Client and repairing the game once the game is closed (on Desktop).",
        "help": "Applies a game repair by opening Riot Client and repairing the game once the game is closed (on Desktop).",
        "internal": false,
        "name": "PutProductIntegrationV1AppRepairApply",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "PUT /product-integration/v1/app-update/apply": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Applies a game update by opening Riot Client and patching the game (on Desktop) or exiting to the App Store (on Mobile).",
        "help": "Applies a game update by opening Riot Client and patching the game (on Desktop) or exiting to the App Store (on Mobile).",
        "internal": false,
        "name": "PutProductIntegrationV1AppUpdateApply",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "PUT /product-integration/v1/debug/app-repair/apply": {
        "arguments": [
            {
                "description": "",
                "name": "debugRepairBody",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductIntegrationAppRepairApplyRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Debug endpoint to apply a repair by session id",
        "help": "The session id should match one from a running game",
        "internal": false,
        "name": "PutProductIntegrationV1DebugAppRepairApply",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "PUT /product-integration/v1/debug/app-update/apply": {
        "arguments": [
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Debug endpoint to apply an update by session id",
        "help": "The session id should match one from a running game",
        "internal": false,
        "name": "PutProductIntegrationV1DebugAppUpdateApply",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "PUT /product-integration/v1/debug/app-update/statuses/{sessionId}": {
        "arguments": [
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "updateStatus",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductIntegrationProductIntegrationAppUpdateStatus"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Debug endpoint to update the app's update status by session id",
        "help": "Debug endpoint to update the app's update status by session id",
        "internal": false,
        "name": "PutProductIntegrationV1DebugAppUpdateStatusesBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "PUT /product-integration/v1/locale": {
        "arguments": [
            {
                "description": "",
                "name": "locale",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductIntegrationLocaleUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Applies the locale specified in the body to the product currently running. Locale should be in language_country format. for example, zh_CN or ko_KR",
        "help": "\n## Context\nThis function is being added the support the ability for standalone games to set product locale. The behavior works as follows:\n- First verify that the locale attempting to be set is listed as an available product locale. No actual validation is done on the product locale itself, just that it is present\nin the list of available locales stored in the configuration keyed locale_data.available_locales.\n- After confirming the validity, we attempt to find the product settings file. If it exists, it means that we are in standalone SDK mode. We then propagate the locale to the file\nto persist it across sessions\n- If the file does not exist, it means that we are being run through the Riot Client, and instead we call the `PUT /riotclient/product-locales/products/%s/patchlines/%s`\nendpoint to set the product locale for that product + patchline combination.\n\n### Legacy support\nLeague of Legends unofficially supports players setting their locale to values that are not available to the region. For example, setting their NA client to ja_JP. This is done\ncurrently via modifying the LeagueClientSettings.yaml file and explicitly setting their locale to their locale of choice. We want to continue to support this behavior on behalf\nof League. This function does not modify the validation or ability to override your locale. The validation done here on this function behaves the same as the existing Riot Client\nvalidation, which continues to allow for player modifications.\n\nIf that should change in the future, this function will need to be updated to reflect the changes as well as the `PUT /riotclient/product-locales/products/%s/patchlines/%s` endpoint.\n\n## Arguments\n- locale\n  - the 4 letter code representing the country + language specified separated by an underscore. For example, ja_JP is Japanese, and en_US is US English.\n  - no validation on the 4 letter codes are done; we merely check for its existence in the list of available locales.\n",
        "internal": false,
        "name": "PutProductIntegrationV1Locale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "PUT /product-integration/v1/locale/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "locale",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductIntegrationLocaleUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Applies the locale specified in the body to the product and patchline provided. Locale should be in language_country format. for example, zh_CN or ko_KR",
        "help": "\n## Context\nThis endpoint is similar to the `PUT /product-integration/v1/locale` endpoint except that the product and patchline IDs are provided. Note that the product and patchline IDs are only used if Standalone mode is NOT enabled since it takes priority.\n\nThis endpoint was added to give game teams the flexibility to switch between Standalone mode and Riot Client mode via configuration (no code changes). As soon as all games have migrated to Standalone mode, we can remove this endpoint.\n",
        "internal": false,
        "name": "PutProductIntegrationV1LocaleProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-integration"
        ],
        "threadSafe": false
    },
    "PUT /product-launcher/v1/products/{product-id}/patchlines/{patchline-id}": {
        "arguments": [
            {
                "description": "",
                "name": "product-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchline-id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "pid",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Recover a session for a product that is already running, but Riot Client Services doesn't know about since it just started up.",
        "help": "",
        "internal": false,
        "name": "PutProductLauncherV1ProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "string"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-launcher"
        ],
        "threadSafe": false
    },
    "PUT /product-metadata/v1/debug/mock-data/{source}": {
        "arguments": [
            {
                "description": "",
                "name": "source",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "in",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductMetadataDebugClientConfigSource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the current set of mock data for the plugin.",
        "help": "`source` may be one of `public` or `player`, indiciating which data set from client-config the mock data represents.\n\nThe entire data set is replaced in one call; partial updates are not supported. The best way to edit the current set of data is to use `GET /debug/mock-data`, modify the result, and `PUT` using this endpoint.\n\nSome minor fixups are performed with the provided data to ensure it is consistent. The plugin treats this as a 'oh hey, there is new data for client-config' event, and behaves appropriately.",
        "internal": false,
        "name": "PutProductMetadataV1DebugMockDataBySource",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "map"
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "PUT /product-metadata/v1/debug/mock-mode": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Enters mock mode, which allows using mock product and patchline data.",
        "help": "When entering mock mode, the current data set from client-config is copied, and further updates from client-config are ignored. The plugin otherwise tries to behave as it would normally, for instance, private products will only be listed when signed in.\n\nUse the `/debug/mock-data` endpoint to get/set mocked data in this mode.",
        "internal": false,
        "name": "PutProductMetadataV1DebugMockMode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "product-metadata"
        ],
        "threadSafe": false
    },
    "PUT /product-update-scanner/v1/scan-and-patch": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Scans the patchlines that are entitled to the player and make patch requests",
        "help": "",
        "internal": false,
        "name": "PutProductUpdateScannerV1ScanAndPatch",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-update-scanner"
        ],
        "threadSafe": false
    },
    "PUT /product-update-scanner/v1/scan-and-patch/routine": {
        "arguments": [
            {
                "description": "",
                "name": "interval",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "float"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Starts the routine Update Scanner to check for product updates and make patch requests",
        "help": "",
        "internal": false,
        "name": "PutProductUpdateScannerV1ScanAndPatchRoutine",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-update-scanner"
        ],
        "threadSafe": false
    },
    "PUT /product-update-scanner/v1/scan-and-patch/routine/resume": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Resumes the routine Update Scanner",
        "help": "",
        "internal": false,
        "name": "PutProductUpdateScannerV1ScanAndPatchRoutineResume",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-update-scanner"
        ],
        "threadSafe": false
    },
    "PUT /product-update-scanner/v1/scan-and-patch/routine/stop": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops the routine Update Scanner",
        "help": "",
        "internal": false,
        "name": "PutProductUpdateScannerV1ScanAndPatchRoutineStop",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin product-update-scanner"
        ],
        "threadSafe": false
    },
    "PUT /reference/v1/echo": {
        "arguments": [
            {
                "description": "",
                "name": "echo",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ReferenceEchoRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Returns the user input string",
        "help": "\n**Description**\n\nThis API is intended as a reference on how to create a plugin for new developers. The endpoint simply returns a string that the user inputs\n\nRequired arguments:\n```\necho: A string that will be returned to the user\n```\n",
        "internal": false,
        "name": "PutReferenceV1Echo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "ReferenceEchoResponse"
        },
        "subscribable": false,
        "tags": [
            "reference"
        ],
        "threadSafe": false
    },
    "PUT /riot-client-app-command/submit": {
        "arguments": [
            {
                "description": "",
                "name": "command",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "AppCommandCommand"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Used to coerce an application to invoke a registered command.",
        "help": "",
        "internal": false,
        "name": "PutRiotClientAppCommandSubmit",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-app-command"
        ],
        "threadSafe": false
    },
    "PUT /riot-client-lifecycle-state/v1/state/{state}/{param}/subscriber/{subscriber}/serial-number": {
        "arguments": [
            {
                "description": "",
                "name": "state",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "param",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "subscriber",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "value",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets a serial number for a parameterized state.",
        "help": "",
        "internal": false,
        "name": "PutRiotClientLifecycleStateV1StateByStateByParamSubscriberBySubscriberSerialNumber",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle-state"
        ],
        "threadSafe": false
    },
    "PUT /riot-client-lifecycle-state/v1/state/{state}/subscriber/{subscriber}/serial-number": {
        "arguments": [
            {
                "description": "",
                "name": "state",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "subscriber",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "value",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "int32"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets a single named serial number.",
        "help": "",
        "internal": false,
        "name": "PutRiotClientLifecycleStateV1StateByStateSubscriberBySubscriberSerialNumber",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle-state"
        ],
        "threadSafe": false
    },
    "PUT /riot-client-lifecycle/v1/product-context": {
        "arguments": [
            {
                "description": "",
                "name": "product-context",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ProductPatchline"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the product and patchline to launch.",
        "help": "",
        "internal": false,
        "name": "PutRiotClientLifecycleV1ProductContext",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "PUT /riot-client-lifecycle/v1/ux-command": {
        "arguments": [
            {
                "description": "",
                "name": "command",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "UxCommand"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets a new UX command that the default client UX app should process",
        "help": "",
        "internal": false,
        "name": "PutRiotClientLifecycleV1UxCommand",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin riot-client-lifecycle"
        ],
        "threadSafe": false
    },
    "PUT /riot-login/v1/config": {
        "arguments": [
            {
                "description": "",
                "name": "LoginPersistenceConfig",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RiotLoginLoginPersistenceConfig"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Allows to modify the plugin config (e.g. enable or disable login persistence)",
        "help": "",
        "internal": false,
        "name": "PutRiotLoginV1Config",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riot-login"
        ],
        "threadSafe": false
    },
    "PUT /riotclient/product-locales/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "locale",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the locale of the product with the specified installId",
        "help": "",
        "internal": false,
        "name": "PutRiotclientProductLocalesProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "PUT /riotclient/region-locale": {
        "arguments": [
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RegionLocale"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the region and locale.",
        "help": "",
        "internal": false,
        "name": "PutRiotclientRegionLocale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "PUT /riotclient/splash": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Show the splash screen.",
        "help": "",
        "internal": false,
        "name": "PutRiotclientSplash",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "PUT /riotclient/ux-load-complete": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Ux notification that it has completed loading the main window.",
        "help": "",
        "internal": false,
        "name": "PutRiotclientUxLoadComplete",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "PUT /riotclient/v1/auth-tokens/{authToken}": {
        "arguments": [
            {
                "description": "Authentication token to add.",
                "name": "authToken",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Register an auth token.  This is any alpha-numeric string that will be used as a password with the `riot` user when making requests.",
        "help": "",
        "internal": false,
        "name": "PutRiotclientV1AuthTokensByAuthToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "PUT /riotclient/v1/platform-user": {
        "arguments": [
            {
                "description": "",
                "name": "platformId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "PlatformUser"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the currently active platform user",
        "help": "",
        "internal": false,
        "name": "PutRiotclientV1PlatformUser",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "riotclient"
        ],
        "threadSafe": false
    },
    "PUT /rnet-lifecycle/v1/hide": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Hide the UX.",
        "help": "",
        "internal": false,
        "name": "PutRnetLifecycleV1Hide",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "PUT /rnet-lifecycle/v1/product-context": {
        "arguments": [
            {
                "description": "",
                "name": "product-context",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetLifecycleProductContext"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the product to launch, following the product context-flow of checking auth, update, and patch state.",
        "help": "",
        "internal": false,
        "name": "PutRnetLifecycleV1ProductContext",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "PUT /rnet-lifecycle/v1/quit": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Quit Riot Client. If any games are running hide Riot Client instead.",
        "help": "",
        "internal": false,
        "name": "PutRnetLifecycleV1Quit",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "PUT /rnet-lifecycle/v1/restart": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Restarts Riot Client. If any games are running show the games-running exit-dialog.",
        "help": "",
        "internal": false,
        "name": "PutRnetLifecycleV1Restart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "PUT /rnet-lifecycle/v2/ux-command": {
        "arguments": [
            {
                "description": "",
                "name": "command",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetLifecycleUxCommand"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets a new UX command that the default client UX app should process",
        "help": "",
        "internal": false,
        "name": "PutRnetLifecycleV2UxCommand",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-lifecycle"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v1/move-install-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "options",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetProductRegistryMoveInstallOptions"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Request to move the install for a product.",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV1MoveInstallRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RnetProductRegistryMoveInstallStatus"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v1/verify-install/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": ""
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Verify that a specific product's patchline is installed via patch plugin",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV1VerifyInstallProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/install-settings/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "object"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the specified settings for the particular product and patchline, to the .product_settings.yaml file. Settings that are not specified in the body argument are not modified.",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/install-settings/products/{productId}/patchlines/{patchlineId}/{+path}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "path",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "data",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "object"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the specified settings for the particular product and patchline, to the .product_settings.yaml file. Settings that are not specified in the body argument are not modified.",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4InstallSettingsProductsByProductIdPatchlinesByPatchlineIdByPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/patch-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "options",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "RnetProductRegistryPatchRequestOptions"
                }
            },
            {
                "description": "",
                "name": "repair",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            },
            {
                "description": "",
                "name": "tempPath",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "internalRequestSource",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Submit a request to start patching the patchline.",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4PatchRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/priority-patch-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "options",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "RnetProductRegistryPatchRequestOptions"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Starts a priority patch request for a product, which will complete patching before any automatic patching operation.",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4PriorityPatchRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchline",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetProductRegistryPatchlineUpdate"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Updates a patchline resource with these possible properties: 'patching-policy': describes whether a patchline is kept up-to-date automatically by Riot Client (auto), or if the user must choose when to patch the patchline (manual); 'patching-ask-policy': describes whether we should ask the user whether they want to keep the patchline automatically up-to-date after the first launch. This will be 'ask' if the user has never been asked before, and set to 'never' once they have been asked.",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/products/{productId}/patchlines/{patchlineId}/root-path": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "path",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Updates product root path and patching resources for the specified product/patchline ID",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineIdRootPath",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/products/{productId}/patchlines/{patchlineId}/shortcut": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetProductRegistryCreateShortcutsRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Create or update the shortcut for a product, optionally at a specific path",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineIdShortcut",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/products/{productId}/patchlines/{patchlineId}/uninstall-key": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "create or update the uninstall key for a product",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4ProductsByProductIdPatchlinesByPatchlineIdUninstallKey",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/repair-requests/products/{productId}/patchlines/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Notify Product Registry that a user has requested to repair a product.",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4RepairRequestsProductsByProductIdPatchlinesByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-product-registry/v4/session-patch-lock/products/{productId}/patchline/{patchlineId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "patchlineId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Acquires a shared session patch lock for the product-patchline",
        "help": "",
        "internal": false,
        "name": "PutRnetProductRegistryV4SessionPatchLockProductsByProductIdPatchlineByPatchlineId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-product-registry"
        ],
        "threadSafe": false
    },
    "PUT /rnet-sanitizer/v1/debug/caller-id/mock-id": {
        "arguments": [
            {
                "description": "",
                "name": "callerId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetSanitizerPluginCallerId_MockCallerId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the caller ID to use when calling this plugin from Swagger",
        "help": "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.",
        "internal": false,
        "name": "PutRnetSanitizerV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rnet-sanitizer"
        ],
        "threadSafe": false
    },
    "PUT /rnet-sanitizer/v1/locale": {
        "arguments": [
            {
                "description": "",
                "name": "locale",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RnetSanitizerSanitizerLocale"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set a custom locale for sanitization. Locale should be in language_country format (e.g., zh_CN, ko_KR) and should be one of the available locales for the current region/patchline.",
        "help": "",
        "internal": false,
        "name": "PutRnetSanitizerV1Locale",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rnet-sanitizer"
        ],
        "threadSafe": false
    },
    "PUT /rnet-self-update/v1/enabled": {
        "arguments": [
            {
                "description": "",
                "name": "enabled",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Enable or disable self-update. No-ops if permanently disabled (e.g. disabled by command line flags).",
        "help": "",
        "internal": false,
        "name": "PutRnetSelfUpdateV1Enabled",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-self-update"
        ],
        "threadSafe": false
    },
    "PUT /rnet-self-update/v1/repair": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Trigger a repair because there was an error updating.",
        "help": "",
        "internal": false,
        "name": "PutRnetSelfUpdateV1Repair",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-self-update"
        ],
        "threadSafe": false
    },
    "PUT /rnet-self-update/v1/retry": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Retry self-update because there was an error updating",
        "help": "",
        "internal": false,
        "name": "PutRnetSelfUpdateV1Retry",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin rnet-self-update"
        ],
        "threadSafe": false
    },
    "PUT /rso-auth/v1/authorization/refresh-token": {
        "arguments": [
            {
                "description": "",
                "name": "refreshToken",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthRefreshTokenRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Restore a player's refresh token along with an id token to refill some claims for the authorization.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthV1AuthorizationRefreshToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthAuthorizationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "PUT /rso-auth/v1/session/credentials": {
        "arguments": [
            {
                "description": "",
                "name": "sessionCredentials",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthSessionCredentials"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update an authentication session with credentials to login.",
        "help": "Progresses the login flow for the session with the required player credentials.\n\nThis API should be called when prompted for `needs_authentication` from the `/rso-auth/v2/authorizations` API. Along with the user's credentials, this API will also take the `trustDevice` boolean to tell the RSO service whether or not to record this device as a trusted device to remember for use when determining trust level requirements.\n\nThis API returns a response that contains a type to determine how to follow up in the login process. If the credentials are accepted then the type will be set to `authenticated`.\n\nIf further verification is required then the type may be set to `needs_multifactor_verification`, in which case details can be found in the `MultifactorDetails`, and the required input should be PUT to `/rso-auth/v2/authentication/multifactor`\n\nIn some error cases, the `error` string may be set to indicate more information about the authentication state.\n",
        "internal": false,
        "name": "PutRsoAuthV1SessionCredentials",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthSessionResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "PUT /rso-auth/v1/session/login-token": {
        "arguments": [
            {
                "description": "",
                "name": "sessionLoginToken",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthSessionLoginToken"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update an authentication session with a token from rso-authenticator.",
        "help": "Authenticates a player using a token from rso-authenticator.\n\nThe `authentication_type` value should be `SSOAuth` for social/3rd party authentication tokens (e.g. Google, Facebook, etc), and `Riot Auth` for Riot Games authentication tokens.\n",
        "internal": false,
        "name": "PutRsoAuthV1SessionLoginToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthSessionResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "PUT /rso-auth/v1/session/multifactor": {
        "arguments": [
            {
                "description": "",
                "name": "sessionMultifactor",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthSessionMultifactor"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update an authentication session with multifactor input to complete login.",
        "help": "Progresses the login flow for the session with the required multifactor authentication.\n\nThis API should be called when prompted for `needs_multifactor_verification` after providing credentials through `/rso-auth/v2/authentication/credentials`.\n\nThe `retry` boolean can be set when calling this API to cause MFA to push the multifactor message to the user again.\nIn some error cases, the `error` string may be set to indicate more information about the authentication state.\n",
        "internal": false,
        "name": "PutRsoAuthV1SessionMultifactor",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthSessionResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "PUT /rso-auth/v1/session/persistence": {
        "arguments": [
            {
                "description": "",
                "name": "persistentSession",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Takes a `BindingProperty` and restores the session state.",
        "help": "Takes the `BindingProperty` and tries to rehydrate the cookies to restore the session state which can be retrieved by doing a `GET` on this endpoint.\n\nThese cookies will automatically be appended to calls to `/v2/authorizations` and `/v1/session` endpoints as part of the session to restore, refresh and continue to use the session.\n\nThis endpoint is only available to Internal calls (plugin-to-plugin)\n",
        "internal": false,
        "name": "PutRsoAuthV1SessionPersistence",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "PUT /rso-auth/v1/session/reauthentication": {
        "arguments": [
            {
                "description": "",
                "name": "sessionReauthentication",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthSessionReauthentication"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update an authentication session with player password to reauthenticate.",
        "help": "Reauthenticates the session with the player password.\n\nThis API should be called when prompted for `needs_reauthentication` from the `/rso-auth/v2/authorizations` API\n\nIf the password is accepted, then the type will be set to `authenticated`.\n\nIn some error cases, the `error` string may be set to indicate more information about the authentication state.\n",
        "internal": false,
        "name": "PutRsoAuthV1SessionReauthentication",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthSessionResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "PUT /rso-auth/v1/session/signup-token": {
        "arguments": [
            {
                "description": "",
                "name": "sessionSignup",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthSessionSignup"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update an authentication session with a token from signup-api.",
        "help": "Authenticates a player using a token from signup-api",
        "internal": false,
        "name": "PutRsoAuthV1SessionSignupToken",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthSessionResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-auth"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication": {
        "arguments": [
            {
                "description": "",
                "name": "authenticationPrompt",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "map"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the current prompt for authentication.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1Authentication",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/apple": {
        "arguments": [
            {
                "description": "",
                "name": "openId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1OpenIdConnectInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with an existing account with apple open id token.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkApple",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/code": {
        "arguments": [
            {
                "description": "",
                "name": "codeExchange",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with a code from a previous federated authentication.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkCode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/facebook": {
        "arguments": [
            {
                "description": "",
                "name": "facebook",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1FacebookInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with an existing account with facebook access token.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkFacebook",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/gamecenter": {
        "arguments": [
            {
                "description": "",
                "name": "gamecenter",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1GameCenterInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with an existing account with gamecenter credentials.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkGamecenter",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/google": {
        "arguments": [
            {
                "description": "",
                "name": "openId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1OpenIdConnectInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with an existing account with google open id token.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkGoogle",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/nintendo": {
        "arguments": [
            {
                "description": "",
                "name": "openId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1NintendoInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with an existing account with nintendo open id tokens.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkNintendo",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/playstation": {
        "arguments": [
            {
                "description": "",
                "name": "playstation",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1PlaystationInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with an existing account with playstation authorization code.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkPlaystation",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/resendCode": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Request that a code for linking be resent.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkResendCode",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/riot-identity": {
        "arguments": [
            {
                "description": "",
                "name": "riotIdentity",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1RiotIdentityInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with an existing account with riot identity.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkRiotIdentity",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/rso": {
        "arguments": [
            {
                "description": "",
                "name": "rso",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1RsoInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with an existing RSO account with access and id tokens.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkRso",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-authenticator/v1/authentication/link/xbox": {
        "arguments": [
            {
                "description": "",
                "name": "xbox",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoAuthenticatorV1XboxInput"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Link the current authentication with an existing account with xbox tokens.",
        "help": "",
        "internal": false,
        "name": "PutRsoAuthenticatorV1AuthenticationLinkXbox",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoAuthenticatorV1AuthenticationResponse"
        },
        "subscribable": false,
        "tags": [
            "rso-authenticator"
        ],
        "threadSafe": false
    },
    "PUT /rso-mobile-ui/v1/region-election": {
        "arguments": [
            {
                "description": "",
                "name": "request",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "RsoMobileUiRegionElectionV1UpdateRequest"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Programmatically update the state of the Region Election UI",
        "help": "Endpoint to be deleted December 2024; No action required if you migrated to PlatformUI MobileFRE.",
        "internal": false,
        "name": "PutRsoMobileUiV1RegionElection",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "RsoMobileUiRegionElectionV1RegionElection"
        },
        "subscribable": false,
        "tags": [
            "rso-mobile-ui"
        ],
        "threadSafe": false
    },
    "PUT /social/v1/debug/caller-id/mock-id": {
        "arguments": [
            {
                "description": "",
                "name": "callerId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "SocialPluginCallerId_MockCallerId"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sets the caller ID to use when calling this plugin from Swagger",
        "help": "Sets the `productId` and `patchlineId` to pass to APIs in this plugin during future calls from Swagger.\n\nUse this functionality to test APIs in this plugin with Swagger, as if they were being called from another product.",
        "internal": false,
        "name": "PutSocialV1DebugCallerIdMockId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "social"
        ],
        "threadSafe": false
    },
    "PUT /startup-config/v1/registry-config": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set the registry config for Riot Client on startup",
        "help": "",
        "internal": false,
        "name": "PutStartupConfigV1RegistryConfig",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin startup-config"
        ],
        "threadSafe": false
    },
    "PUT /system-info/v1/routine/resume": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Resumes the routine to pull SystemInfo",
        "help": "",
        "internal": false,
        "name": "PutSystemInfoV1RoutineResume",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin system-info"
        ],
        "threadSafe": false
    },
    "PUT /system-info/v1/routine/start": {
        "arguments": [
            {
                "description": "",
                "name": "interval",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "float"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Starts the routine to pull SystemInfo and send a warning to riot client if CPU or memory usage is high",
        "help": "",
        "internal": false,
        "name": "PutSystemInfoV1RoutineStart",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin system-info"
        ],
        "threadSafe": false
    },
    "PUT /system-info/v1/routine/stop": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Stops the routine to pull SystemInfo",
        "help": "",
        "internal": false,
        "name": "PutSystemInfoV1RoutineStop",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin system-info"
        ],
        "threadSafe": false
    },
    "PUT /system-tray/v1/native-notification/show": {
        "arguments": [
            {
                "description": "",
                "name": "NotificationData",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "SystemTrayNotificationData"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Display a native notification tooltips in the systray",
        "help": "",
        "internal": false,
        "name": "PutSystemTrayV1NativeNotificationShow",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin system-tray"
        ],
        "threadSafe": false
    },
    "PUT /telemetry/v2/events/{id}": {
        "arguments": [
            {
                "description": "The ID of the event (32-character GUID or human readable string)",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "A serialized event that conforms to schema specified by 'id'. Metadata field is optional for Analytics Pipeline events.",
                "name": "eventData",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "object"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sends the event to the Analytics Pipeline CollectorV2 endpoint (https://data.riotgames.com). This backend differs from /v1/events as it requires schemas to be registered in the schema repository.",
        "help": "",
        "internal": false,
        "name": "PutTelemetryV2EventsById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "telemetry"
        ],
        "threadSafe": false
    },
    "PUT /telemetry/v2/events-extended/{id}": {
        "arguments": [
            {
                "description": "The ID of the event (32-character GUID or human readable string)",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "A structure that contains two separate fields:\n- 'data' - A serialized event that conforms to schema specified by 'id'. Metadata field is optional for Analytics Pipeline events.\n- 'additionalFields' - An optional structure that will be sent in addition to the 'data' of the event. This additional data will be attached in a different way for each collector: for events headed to Analytics Platform, the data will be sent as a single string field containing serialized JSON. (The schema of the event must contain a field named 'additionalFields'.) For events headed to New Relic, all of the fields will be sent mixed in with the 'data', with each field name prepended with 'additionalFields.'.",
                "name": "eventData",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "ExtendedEventData"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sends the event to the Analytics Pipeline CollectorV2 endpoint (https://data.riotgames.com). This backend differs from /v1/events as it requires schemas to be registered in the schema repository.",
        "help": "",
        "internal": false,
        "name": "PutTelemetryV2EventsExtendedById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "telemetry"
        ],
        "threadSafe": false
    },
    "PUT /telemetry/v2/events-schemaless/{id}": {
        "arguments": [
            {
                "description": "An AP-schema-like id for this event, in `world__event__version` format.\nThis id does not need to be registered with AP. Using an id with a different format will make it difficult to query across existing data in New Relic.",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "A schemaless set of key-value pairs, to be sent to New Relic as JSON. The format of the data must be compatible with New Relic.",
                "name": "eventData",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "object"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Sends the event directly to New Relic, without sending the data to AP.",
        "help": "",
        "internal": false,
        "name": "PutTelemetryV2EventsSchemalessById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "telemetry"
        ],
        "threadSafe": false
    },
    "PUT /vanguard/v1/installed-products": {
        "arguments": [
            {
                "description": "",
                "name": "products",
                "optional": false,
                "type": {
                    "elementType": "string",
                    "type": "vector"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Intended to provide product arguments to Vanguard installer",
        "help": "",
        "internal": false,
        "name": "PutVanguardV1InstalledProducts",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin vanguard"
        ],
        "threadSafe": false
    },
    "PUT /vanguard/v1/update/products/{productId}": {
        "arguments": [
            {
                "description": "",
                "name": "productId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Request that Vanguard update, prompting UAC if required.",
        "help": "",
        "internal": false,
        "name": "PutVanguardV1UpdateProductsByProductId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VanguardPluginState"
        },
        "subscribable": false,
        "tags": [
            "Plugins",
            "Plugin vanguard"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v1/push-to-talk": {
        "arguments": [
            {
                "description": "",
                "name": "pushToTalk",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUnnormalizedPushToTalkResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set voice chat push to talk configuration",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "PutVoiceChatV1PushToTalk",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v1/settings/sync/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "settings",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateSettingsResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update current voice chat settings synchronously",
        "help": "One of the challenges of using the asynchronous voice-chat settings endpoint (e.g., PUT /voice-chat/vX/settings/{productName}) is that a successful response returned by the endpoint simply means that the updates were received by the RiotGamesApi and will eventually be applied. Game teams are required to subscribe to the corresponding GET endpoint to receive notifications for when the change actually goes through, making it tricky to create a good UI experience around the voice settings. \nThe main advantage of this synchronous version of the voice-chat settings endpoint is that it ensures the voice-chat settings update will either happen successfully or will be reverted back to the original voice-chat settings. Hence, game teams will be able to update their UI once a success is returned or do nothing if a failure is returned.",
        "internal": false,
        "name": "PutVoiceChatV1SettingsSyncByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "VoiceChatSettingsResource"
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v2/devices/capture/prompt-for-permission": {
        "arguments": [],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Prompts the user for permission to use the microphone, if required.",
        "help": "On Mac OS, starting from 10.14 (Mojave), we must ask the user for permission to access the microphone. Until they accept the prompt, or if they decline, the microphone will be unavailable, and voice will not be transmitted.\nBefore joining a voice channel, users of this plugin should call PUT on this endpoint while being subscribed for updates to /voice-chat/v2/devices/capture/permission. If 'permission' is updated to 'true', the listener must leave and re-join the voice channel to enable the microphone.\nIf the user has already granted or denied permission, this endpoint does nothing. The endpoint always returns immediately with success.",
        "internal": false,
        "name": "PutVoiceChatV2DevicesCapturePromptForPermission",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v2/push-to-talk/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "pushToTalk",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUnnormalizedPushToTalkResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set voice chat push to talk configuration",
        "help": "Endpoint is deprecated and will be deleted. Please check /voice-chat/v3/push-to-talk/",
        "internal": false,
        "name": "PutVoiceChatV2PushToTalkByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v2/sessions": {
        "arguments": [
            {
                "description": "",
                "name": "details",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateSessionResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the properties for all sessions",
        "help": "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deleted March 2021.",
        "internal": false,
        "name": "PutVoiceChatV2Sessions",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v2/sessions/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "details",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateSessionResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the properties for a session",
        "help": "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deleted March 2021.",
        "internal": false,
        "name": "PutVoiceChatV2SessionsById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v2/sessions/{sessionId}/participants/{participantId}": {
        "arguments": [
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "participantId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "participant",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateParticipantResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update local participant details",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "PutVoiceChatV2SessionsBySessionIdParticipantsByParticipantId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v2/settings": {
        "arguments": [
            {
                "description": "",
                "name": "settings",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateSettingsResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update current voice chat settings",
        "help": "Endpoint deleted March 2021.",
        "internal": false,
        "name": "PutVoiceChatV2Settings",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v3/push-to-talk/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "pushToTalk",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatV3PushToTalkResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set voice chat push to talk configuration",
        "help": "Allows the game to toggle voice channel's PTT state\nNOTE: Games should use their own input state to toggle transmit state of PTT channels. It DOES NOT bind into OS input.\nisEnabled: Is push-to-talk enabled?\nmode: (Exclusive) PTT channels will automatically mute other channels when they are enabled \n      (Inclusive) Other channels will stay open when PTT channels are enabled \npttSessions: Array with PTT channel`s transmit states\n\tsessionId: channel identifier\n\ttransmit: defines if the channel should have voice channel open or not",
        "internal": false,
        "name": "PutVoiceChatV3PushToTalkByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v3/push-to-talk/{productName}/{sessionId}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "transmitState",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatPushToTalkTransmitState"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Set voice chat push to talk transmit state for a specific channel",
        "help": "Updates the transmit state of a specific channel or returns an error if there is no PTT channel with the provided id\n\tsessionId: channel identifier\n\ttransmit: defines if the channel should have voice channel open or not",
        "internal": false,
        "name": "PutVoiceChatV3PushToTalkByProductNameBySessionId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v3/sessions/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "details",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateSessionResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the properties for all sessions",
        "help": "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}",
        "internal": false,
        "name": "PutVoiceChatV3SessionsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v3/sessions/{productName}/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "details",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateSessionResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the properties for a session",
        "help": "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n\n\nEndpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}",
        "internal": false,
        "name": "PutVoiceChatV3SessionsByProductNameById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v3/sessions/{productName}/{sessionId}/participants/{participantId}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "participantId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "participant",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateParticipantResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update local participant details",
        "help": "Endpoint deprecated and will be deleted November 2022.  Please use /voice-chat/v4/sessions/{productName}",
        "internal": false,
        "name": "PutVoiceChatV3SessionsByProductNameBySessionIdParticipantsByParticipantId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v3/settings/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "settings",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateSettingsResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update current voice chat settings",
        "help": "",
        "internal": false,
        "name": "PutVoiceChatV3SettingsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v4/sessions/{productName}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "details",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateSessionResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the properties for all sessions",
        "help": "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n",
        "internal": false,
        "name": "PutVoiceChatV4SessionsByProductName",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v4/sessions/{productName}/{id}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "id",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "details",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateSessionResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update the properties for a session",
        "help": "volume: Controls the output volume for a room. Set to 0 to mute.\nisFocused: Toggles if a session gains volume priority, which dampens the volume of the other sessions.\nisTransmitEnabled: Toggles audio input for a session.\n",
        "internal": false,
        "name": "PutVoiceChatV4SessionsByProductNameById",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /voice-chat/v4/sessions/{productName}/{sessionId}/participants/{participantId}": {
        "arguments": [
            {
                "description": "",
                "name": "productName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "sessionId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "participantId",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "",
                "name": "participant",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "VoiceChatUpdateParticipantResource"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update local participant details",
        "help": "",
        "internal": false,
        "name": "PutVoiceChatV4SessionsByProductNameBySessionIdParticipantsByParticipantId",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "voice-chat"
        ],
        "threadSafe": false
    },
    "PUT /xbox-account/v1/authorization-consent": {
        "arguments": [
            {
                "description": "",
                "name": "AuthorizationConsent",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "bool"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Update authorization consent status for Xbox",
        "help": "",
        "internal": false,
        "name": "PutXboxAccountV1AuthorizationConsent",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": ""
        },
        "subscribable": false,
        "tags": [
            "xbox-account"
        ],
        "threadSafe": false
    },
    "Subscribe": {
        "arguments": [
            {
                "description": "Name of the event to subscribe to",
                "name": "eventName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            },
            {
                "description": "Desired format to receive events in. If unspecified, events will be sent in the active result format at the time.",
                "name": "format",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "RemotingSerializedFormat"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Subscribes to a given event",
        "help": "",
        "internal": false,
        "name": "Subscribe",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "builtin"
        ],
        "threadSafe": true
    },
    "Unsubscribe": {
        "arguments": [
            {
                "description": "Name of the event to unsubscribe from",
                "name": "eventName",
                "optional": false,
                "type": {
                    "elementType": "",
                    "type": "string"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Unsubscribes from a given event",
        "help": "",
        "internal": false,
        "name": "Unsubscribe",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "builtin"
        ],
        "threadSafe": true
    },
    "WebSocketFormat": {
        "arguments": [
            {
                "description": "Output format to switch to",
                "name": "format",
                "optional": true,
                "type": {
                    "elementType": "",
                    "type": "RemotingSerializedFormat"
                }
            }
        ],
        "deprecated": false,
        "deprecatedHelp": "",
        "description": "Controls the console output format",
        "help": "With no arguments, returns the current output format being used. If a format is specified, switches the console output to that format.",
        "internal": false,
        "name": "WebSocketFormat",
        "nameSpace": "",
        "returns": {
            "elementType": "",
            "type": "object"
        },
        "subscribable": false,
        "tags": [
            "builtin",
            "websocket"
        ],
        "threadSafe": true
    }
}